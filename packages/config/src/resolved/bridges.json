{
  "json": [
    {
      "type": "bridge",
      "id": "across-v3",
      "createdAt": "1712746402",
      "display": {
        "name": "Across V3",
        "slug": "acrossv3",
        "category": "Liquidity Network",
        "links": {
          "websites": ["https://across.to/"],
          "apps": ["https://app.across.to/bridge"],
          "repositories": ["https://github.com/across-protocol/contracts-v2"],
          "documentation": ["https://docs.across.to/"],
          "socialMedia": [
            "https://twitter.com/AcrossProtocol",
            "https://discord.gg/across",
            "https://medium.com/across-protocol",
            "https://forum.across.to/"
          ]
        },
        "description": "Across V3 is a cross-chain optimistic bridge that uses actors called Relayers to fulfill user transfer requests on the destination chain.",
        "detailedDescription": "Relayers are later reimbursed by providing a proof of their action to an Optimistic Oracle on Ethereum. Relayer reimbursements over a specific block range are bundled and posted on-chain as merkle roots which uniquely identify the set of all repayments and rebalance instructions. The architecture leverages a single liquidity pool on Ethereum and separate deposit/reimburse pools on destination chains that are rebalanced using canonical bridges."
      },
      "config": {
        "escrows": [
          {
            "address": "0xc186fA914353c44b2E33eBE05f21846F1048bEda",
            "newVersion": true,
            "sinceTimestamp": "1653124620",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xc186fA914353c44b2E33eBE05f21846F1048bEda",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x5c7BCd6E7De5423a257D81B442095A1a6ced35C5",
            "newVersion": true,
            "sinceTimestamp": "1682355155",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x5c7BCd6E7De5423a257D81B442095A1a6ced35C5",
              "upgradeability": {
                "proxyType": "EIP1967 proxy",
                "admins": ["0xc186fA914353c44b2E33eBE05f21846F1048bEda"],
                "implementations": [
                  "0x48Dcf75EA18233BA947E4480dCd70594720449C1"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x4D9079Bb4165aeb4084c526a32695dCfd2F77381",
            "sinceTimestamp": "1653167083",
            "tokens": "*",
            "isHistorical": true,
            "chain": "ethereum"
          },
          {
            "address": "0xe35e9842fceaCA96570B734083f4a58e8F7C5f2A",
            "sinceTimestamp": "1682355537",
            "tokens": "*",
            "chain": "arbitrum"
          },
          {
            "address": "0x09aea4b2242abC8bb4BB78D537A67a245A7bEC64",
            "sinceTimestamp": "1691119103",
            "tokens": "*",
            "chain": "base"
          },
          {
            "address": "0x2D509190Ed0172ba588407D4c2df918F955Cc6E1",
            "sinceTimestamp": "1719958375",
            "tokens": "*",
            "chain": "blast"
          },
          {
            "address": "0x7E63A5f1a8F0B4d0934B2f2327DAED3F6bb2ee75",
            "sinceTimestamp": "1709742598",
            "tokens": "*",
            "chain": "linea"
          },
          {
            "address": "0x3baD7AD0728f9917d1Bf08af5782dCbD516cDd96",
            "sinceTimestamp": "1716253957",
            "tokens": "*",
            "chain": "mode"
          },
          {
            "address": "0x6f26Bf09B1C792e3228e5467807a900A503c0281",
            "sinceTimestamp": "1682354696",
            "tokens": "*",
            "chain": "optimism"
          },
          {
            "address": "0x3baD7AD0728f9917d1Bf08af5782dCbD516cDd96",
            "sinceTimestamp": "1721124038",
            "tokens": "*",
            "chain": "scroll"
          },
          {
            "address": "0xE0B015E54d54fc84a6cB9B666099c46adE9335FF",
            "sinceTimestamp": "1691141266",
            "tokens": "*",
            "chain": "zksync2"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Optimistically",
          "description": "Optimistic Oracle on Ethereum is used to assert that an action happened on the destination chain. The timeout used here is 1h.",
          "sentiment": "warning"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": [
          "Optimism",
          "Polygon",
          "Boba",
          "Arbitrum",
          "ZkSync Era",
          "Linea",
          "Base"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "This bridge performs cross-chain swaps by borrowing liquidity from a network of Relayers who are then reimbursed on a chain of their choosing from a common liquidity pool (which consists of user deposits and deposits of independent Liquidity Providers). \n        Specifically, when a user deposits funds for a swap into a dedicated pool on the origin chain, a Relayer first pays the user on the requested destination chain and then shows proof of that deposit to Optimistic Oracle on Ethereum (by proposing a merkle root). \n        If the root remains unchallenged for 1h, it is optimistically finalized and the Relayer is reimbursed. Liquidity used for reimbursements is rebalanced between a main pool on Ethereum (called Hub Pool) and pools on destination chains (called Spoke Pools) via canonical chain bridges.",
          "references": [
            {
              "text": "Across V3 Architecture",
              "href": "https://github.com/UMAprotocol/UMIPs/blob/master/UMIPs/umip-179.md"
            }
          ],
          "risks": [
            {
              "category": "Funds can be frozen if",
              "text": "owner pauses the Hub Pool contract, or changes bond, routes, or fees parameters in such a way as to make the escrow inoperable."
            },
            {
              "category": "Funds can be lost if",
              "text": "owner invokes a \"haircut\" functionality, dedicated for irrecoverable loss of funds on L2. Calling the haircutReserves() function, the owner can decrease the token utilizedReserves on L1, decreasing the amount of funds in the bridge expected to flow from L2 to L1."
            },
            {
              "category": "Funds can be lost if",
              "text": "third-party bridge infrastructure is compromised, such as canonical messaging services, Linea USDC bridge, and USDC Cross-Chain Transfer Protocol (CCTP) infrastructure."
            }
          ]
        },
        "validation": {
          "name": "Validation via Optimistic Oracle",
          "description": "Money from the liquidity pool is used to reimburse Relayers based on a proof of deposit on a destination chain that is provided to an Optimistic Oracle on Ethereum. The proof can be disputed in a configured time period.",
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "a false claim to the Optimistic Oracle is not disputed in time."
            },
            {
              "category": "Funds can be lost if",
              "text": "a re-org occurs on destination chain after the Optimistic Oracle dispute time passes."
            }
          ],
          "references": [
            {
              "text": "Across V3 Optimistic Oracle documentation",
              "href": "https://docs.across.to/reference/security-model-and-verification"
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Only tokens that have been bridged using native chain bridges are supported.",
          "references": [],
          "risks": []
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "HubPool",
            "address": "0xc186fA914353c44b2E33eBE05f21846F1048bEda",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow contract for ERC20 tokens and administration of other contracts. There is a 1h delay before a bundle proposal is considered finalized."
          },
          {
            "name": "BondToken",
            "address": "0xee1DC6BCF1Ee967a350e9aC6CaaAA236109002ea",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Token (ABT) used to bond the data worker for proposing Relayer refund bundles. It also used as a required bond to dispute a bundle proposal. Currently, the bond amount is set to 0.45 ABT."
          },
          {
            "name": "UMAOptimisticOracle",
            "address": "0xeE3Afe347D5C74317041E2618C49534dAf887c24",
            "description": "UMA Optimistic Oracle smart contract. It registers dispute requests, status of disputes, and dispute settlement."
          },
          {
            "name": "GovernorV2",
            "address": "0x7b292034084A41B9D441B71b6E3557Edd0463fa8",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Owner of the Optimistic Oracle. This contract is used to execute a proposed UMA governance action that has been approved by UMA token holders."
          },
          {
            "name": "VotingToken",
            "address": "0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Token used to vote on UMA Optimistic Oracle governance proposals."
          },
          {
            "name": "LpTokenFactory",
            "address": "0x7dB69eb9F52eD773E9b03f5068A1ea0275b2fD9d",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Factory to deploy new LP tokens for L1 tokens, used to represent a liquidity provider position in the HubPool."
          },
          {
            "name": "Finder",
            "address": "0x40f941E48A552bF496B154Af6bf55725f18D77c3",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Provides addresses of the live contracts implementing certain interfaces, such as the whitelist interface for setting the Bond Token."
          },
          {
            "name": "Arbitrum_Adapter",
            "address": "0x5473CBD30bEd1Bf97C0c9d7c59d268CD620dA426",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Base_Adapter",
            "address": "0xE1421233BF7158A19f89F17c9735F9cbd3D9529c",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Boba_Adapter",
            "address": "0x33B0Ec794c15D6Cc705818E70d4CaCe7bCfB5Af3",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Ethereum_Adapter",
            "address": "0x527E872a5c3f0C7c24Fe33F2593cFB890a285084",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Linea_Adapter",
            "address": "0x7Ea0D1882D610095A45E512B0113f79cA98a8EfE",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Optimism_Adapter",
            "address": "0xE1e74B3D6A8E2A479B62958D4E4E6eEaea5B612b",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Polygon_Adapter",
            "address": "0xb4AeF0178f5725392A26eE18684C2aB62adc912e",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "ZkSync_Adapter",
            "address": "0xE233009838CB898b50e0012a6E783FC9FeE447FB",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Lisk_Adapter",
            "address": "0x8229E812f20537caA1e8Fb41749b4887B8a75C3B",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Scroll_Adapter",
            "address": "0xb6129Ab69aEA75e6884c2D6ecf25293C343C519F",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Redstone_Adapter",
            "address": "0x188F8C95B7cfB7993B53a4F643efa687916f73fA",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Zora_Adapter",
            "address": "0x024F2fC31CBDD8de17194b1892c834f98Ef5169b",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "WorldChain_Adapter",
            "address": "0xA8399e221a583A57F54Abb5bA22f31b5D6C09f32",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "Ethereum_SpokePool",
            "address": "0x5c7BCd6E7De5423a257D81B442095A1a6ced35C5",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xc186fA914353c44b2E33eBE05f21846F1048bEda"],
              "implementations": ["0x48Dcf75EA18233BA947E4480dCd70594720449C1"]
            },
            "chain": "ethereum",
            "description": "Contract enabling depositors to transfer assets from Ethereum to L2s, and relayers to fulfill transfer from L2s to Ethereum. Deposit orders are fulfilled by off-chain relayers with the fillV3Relay() function. Relayers are later refunded with destination token out of this contract when the data worker submits a proof that the relayer correctly submitted a relay on this SpokePool."
          },
          {
            "name": "PolygonTokenBridger",
            "address": "0x48d990AbDA20afa1fD1da713AbC041B60a922c65",
            "description": "Contract deployed on Ethereum and Polygon PoS to facilitate token transfers from Polygon to the HubPool."
          },
          {
            "name": "AcrossConfigStore",
            "address": "0x3B03509645713718B78951126E0A6de6f10043f5",
            "description": "Contract storing configurations such as token rate models and minimum transfer thresholds, meant for off-chain consumption."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a Spoke Pool contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "HubPool Multisig",
          "description": "This is a Gnosis Safe with 3 / 5 threshold. It uses the following modules: OptimisticGovernor. Can invoke admin functions of HubPool contract, and by implication of other contracts.",
          "accounts": [
            {
              "address": "0xB524735356985D2f267FA010D681f061DfF03715",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x1d933Fd71FF07E69f066d50B39a7C34EB3b69F05",
              "type": "EOA"
            },
            {
              "address": "0x837219D7a9C666F5542c4559Bf17D7B804E5c5fe",
              "type": "EOA"
            },
            {
              "address": "0x996267d7d1B7f5046543feDe2c2Db473Ed4f65e9",
              "type": "EOA"
            },
            {
              "address": "0xcc400c09ecBAC3e0033e4587BdFAABB26223e37d",
              "type": "EOA"
            },
            {
              "address": "0x868CF19464e17F76D6419ACC802B122c22D2FD34",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "BondToken transfer proposers",
          "accounts": [
            {
              "address": "0xf7bAc63fc7CEaCf0589F25454Ecf5C2ce904997c",
              "type": "EOA"
            }
          ],
          "description": "Allowed to propose BondToken transfers."
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Across deep dive",
          "url": "https://li.fi/knowledge-hub/across-a-deep-dive/",
          "thumbnail": "lifi-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "allbridge",
      "createdAt": "1675164709",
      "display": {
        "name": "Allbridge",
        "slug": "allbridge",
        "description": "Allbridge Core enables the transfer of value between blockchains by offering cross-chain swaps of native stablecoins using liquidity pools.",
        "detailedDescription": "For its stablecoin liquidity network it is using either of its own AMB, Circle CCTP or Wormhole to pass messages. Allbridge TokenBridge is a token bridge implemented      as a separate contract. Core system parameters can be changed by an EOA, risking the loss of all funds stored in the system contracts.",
        "category": "Hybrid",
        "links": {
          "websites": ["https://allbridge.io/"],
          "apps": ["https://core.allbridge.io/", "https://app.allbridge.io/"],
          "documentation": [
            "https://docs.allbridge.io/",
            "https://docs-core.allbridge.io/"
          ],
          "repositories": ["https://github.com/allbridge-io"],
          "socialMedia": [
            "https://x.com/Allbridge_io",
            "https://allbridge.medium.com/",
            "https://t.me/allbridge_announcements",
            "https://discord.com/invite/ASuPY8d3E6"
          ]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0xBBbD1BbB4f9b936C3604906D7592A644071dE884",
            "newVersion": true,
            "sinceTimestamp": "1636635220",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xBBbD1BbB4f9b936C3604906D7592A644071dE884",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Lock-Mint token bridge",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x7DBF07Ad92Ed4e26D5511b4F285508eBF174135D",
            "newVersion": true,
            "sinceTimestamp": "1662596190",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x7DBF07Ad92Ed4e26D5511b4F285508eBF174135D",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "USDT liquidity pool on Ethereum",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xa7062bbA94c91d565Ae33B893Ab5dFAF1Fc57C4d",
            "newVersion": true,
            "sinceTimestamp": "1669206935",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xa7062bbA94c91d565Ae33B893Ab5dFAF1Fc57C4d",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "USDC liquidity pool on Ethereum",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "chain": "arbitrum",
            "includeInTotal": false,
            "address": "0x690e66fc0F8be8964d40e55EdE6aEBdfcB8A21Df",
            "sinceTimestamp": "1687868331",
            "tokens": ["USDC"]
          },
          {
            "chain": "arbitrum",
            "includeInTotal": false,
            "address": "0x47235cB71107CC66B12aF6f8b8a9260ea38472c7",
            "sinceTimestamp": "1704638642",
            "tokens": ["USDT"]
          },
          {
            "chain": "base",
            "includeInTotal": false,
            "address": "0xDA6bb1ec3BaBA68B26bEa0508d6f81c9ec5e96d5",
            "sinceTimestamp": "1706798147",
            "tokens": ["USDC"]
          },
          {
            "chain": "optimism",
            "includeInTotal": false,
            "address": "0x3B96F88b2b9EB87964b852874D41B633e0f1f68F",
            "sinceTimestamp": "1702912935",
            "tokens": ["USDC"]
          },
          {
            "chain": "optimism",
            "includeInTotal": false,
            "address": "0xb24A05d54fcAcfe1FC00c59209470d4cafB0deEA",
            "sinceTimestamp": "1704638475",
            "tokens": ["USDT"]
          }
        ]
      },
      "technology": {
        "canonical": false,
        "destination": [
          "Aurora",
          "Avalanche",
          "BNB Chain",
          "Celo",
          "Ethereum",
          "Fantom",
          "Fuse",
          "Harmony",
          "HECO",
          "Klaytn",
          "Near",
          "Polygon",
          "Solana",
          "Terra Classic",
          "Tezos",
          "XRPL",
          "Waves",
          "Stellar"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "\n      For USDC and USDT, Allbridge 'Core' offers three message protocols (AMBs) to choose from: Allbridge, Wormhole and Circle CCTP (USDC only). \n      These two token classes can also simultaneously be swapped while bridging, tapping into the Allbridges multichain liquidity pools.\n      \n      For other supported tokens, Allbridge offers a token bridge mode that locks tokens in the escrow on Ethereum and mints them at the destination. \n      The crosschain messages in this case are passed via either Allbridge AMB or Wormhole.",
          "references": [
            {
              "text": "Docs: Wormhole architecture",
              "href": "https://docs.wormhole.com/wormhole/explore-wormhole/components"
            }
          ],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "Validation process takes place in external network called the Guardian Network. Nodes in the network, called Guardians, observe the Core Contract on each supported chain and produce VAAs (Verified Action Approvals, essentially signed messages) when those contracts receive an interaction. Based on the VAA user can withdraw funds on the other end of the bridge.",
          "references": [
            {
              "text": "AllbridgeMessenger contract: function receiveMessage()",
              "href": "https://etherscan.io/address/0x203e8785b4d4312c4152D0c42Ba3FA8BD79086dA#code#F1#L97"
            },
            {
              "text": "WormholeCore contract: function verifyVM()",
              "href": "https://etherscan.io/address/0x3c3d457f1522d3540ab3325aa5f1864e34cba9d0#code#F9#L28"
            },
            {
              "text": "CCTP Risk Management Network",
              "href": "https://docs.chain.link/ccip/concepts#risk-management-network"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "the circle oracle network fails to facilitate a transfer via the Circle CCTP.",
              "isCritical": true
            },
            {
              "category": "Users can be censored if",
              "text": "the Wormhole guardians and / or Allbridge validators decide to stop processing certain transactions.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "the Wormhole guardians and / or Allbridge validators allow to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "the Wormhole guardians and / or Allbridge validators sign a fraudulent message allowing themselves to withdraw all locked funds.",
              "isCritical": true
            }
          ]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Various AMBs",
          "description": "Allbridge taps into three different crosschain messaging protocols: Their in-house AMB with two validators, Wormhole AMB and Circle CCTP.",
          "sentiment": "warning"
        },
        "sourceUpgradeability": {
          "value": "YES",
          "description": "Allbridge contracts are immutable but all critical parameters can be changed by an EOA",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "warning"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "LPBridge",
            "address": "0x609c690e8F7D68a59885c9132e812eEbDaAf0c9e",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The main contract for the Allbridge liquidity network."
          },
          {
            "name": "TokenBridge",
            "address": "0xBBbD1BbB4f9b936C3604906D7592A644071dE884",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The main contract for the Allbridge token bridge."
          },
          {
            "name": "Validator",
            "address": "0x93746538D4519C809827205Bd1C2c7a0E15bd74b",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "This contract is responsible for validating incoming messages to the token bridge."
          },
          {
            "name": "FeeOracle",
            "address": "0xba6d8dE08f13A3D22FCEC54752812Dd4dcf2E1f6",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "This contract is responsible for calculating bridge fees."
          },
          {
            "name": "GasOracle",
            "address": "0x0BdF6139F2841A7856Ca154D851182C52F5b96e0",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "This contract is responsible for calculating crosschain gas fees."
          },
          {
            "name": "AllbridgeMessenger",
            "address": "0x203e8785b4d4312c4152D0c42Ba3FA8BD79086dA",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract used to receive messages via allbridge AMB."
          },
          {
            "name": "WormholeMessenger",
            "address": "0x7f02294f065A605C8D21D9812b8d1De7E5E1da74",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract used to receive messages via Wormhole AMB."
          },
          {
            "name": "CctpBridge",
            "address": "0xC51397b75B783E31469bFaADE79913F3f82210d6",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract used to receive messages via Circle CCTP."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "name": "TokenBridge Admin",
          "description": "Allowed to grant and revoke all roles in the TokenBridge (Can steal all funds).",
          "accounts": [
            {
              "address": "0x4BE5ef97B7cfD37F536324c7F18A2FfdE5892074",
              "type": "EOA"
            },
            {
              "address": "0xF62e459Aa6a959c4224A7315F85e4703f462918A",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "TokenBridge Manager",
          "description": "Allowed to set Validators, unlockSigners and unpause in the TokenBridge (Can steal all funds).",
          "accounts": [
            {
              "address": "0x4BE5ef97B7cfD37F536324c7F18A2FfdE5892074",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "TokenBridge Token Manager",
          "description": "Allowed add and remove token support in the TokenBridge.",
          "accounts": [
            {
              "address": "0x4BE5ef97B7cfD37F536324c7F18A2FfdE5892074",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "TokenBridge Stop Manager",
          "description": "Can pause the TokenBridge.",
          "accounts": [
            {
              "address": "0x83f53C078bF81F6d8B79E01e2eD36c473A960c5E",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Allbridge Owner EOA.",
          "description": "Owner of all system contracts except TokenBridge, privileged to update messengers and other bridge parameters. As a result this account can drain all funds from the pools.",
          "accounts": [
            {
              "address": "0x01a494079DCB715f622340301463cE50cd69A4D0",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "AllbridgeMessenger EOA.",
          "description": "EOA delivering crosschain messages to the AllbridgeMessenger contract.",
          "accounts": [
            {
              "address": "0x7234dB900E907398EdfAdA744d5Bf8A842B335BA",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "WormholeMessenger EOA.",
          "description": "EOA delivering crosschain messages to the WormholeMessenger contract.",
          "accounts": [
            {
              "address": "0x26f9AA5a00825d37E4ebBa0844fcCF1f852640D5",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "CctpBridge messenger EOA.",
          "description": "EOA delivering crosschain messages to the WormholeMessenger contract.",
          "accounts": [
            {
              "address": "0xb7C522Adb3429e2C7474df324c7a3744A5803414",
              "type": "EOA"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "amarok",
      "createdAt": "1680097524",
      "display": {
        "name": "Connext",
        "slug": "connext",
        "description": "Connext is a multilayered system that aggregates various native AMBs in a Hub-and-Spoke architecture with Ethereum being the Hub receiving    messages from other domains. It implements a liquidity network on top of its Hub-and-Spoke architecture.",
        "category": "Liquidity Network",
        "links": {
          "apps": [
            "https://bridge.connext.network/",
            "https://connextscan.io/"
          ],
          "websites": ["https://blog.connext.network/"],
          "documentation": ["https://docs.connext.network/"],
          "repositories": ["https://github.com/connext/monorepo"],
          "socialMedia": [
            "https://x.com/EverclearOrg",
            "https://discord.gg/connext"
          ]
        }
      },
      "milestones": [
        {
          "name": "Connext Amarok mainnet deployment",
          "link": "https://blog.connext.network/connexts-amarok-upgrade-is-live-683099d61cbb",
          "date": "2023-02-02T00:00:00Z",
          "description": "Connext Amarok mainnet deployment.",
          "type": "general"
        },
        {
          "name": "Connext Amarok announced",
          "link": "https://blog.connext.network/announcing-the-amarok-network-upgrade-5046317860a4",
          "date": "2022-05-11T00:00:00Z",
          "description": "The new, modular architecture for Connext Amarok has been announced.",
          "type": "general"
        },
        {
          "name": "Bacco Upgrade",
          "date": "2023-12-07T00:00:00Z",
          "link": "https://medium.com/connext/introducing-the-bacco-network-upgrade-73ad19cee9ed",
          "type": "general"
        }
      ],
      "config": {
        "associatedTokens": ["NEXT"],
        "escrows": [
          {
            "address": "0x8898B472C54c31894e3B9bb83cEA802a5d0e63C6",
            "sinceTimestamp": "1671625595",
            "tokens": ["USDC", "WETH", "USDT", "DAI", "Metis", "alUSD"],
            "chain": "ethereum"
          },
          {
            "address": "0xC8140dA31E6bCa19b287cC35531c2212763C2059",
            "sinceTimestamp": "1671625595",
            "tokens": ["ezETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x22f424Bca11FE154c403c277b5F8dAb54a4bA29b",
            "sinceTimestamp": "1693790555",
            "tokens": ["NEXT"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "canonical": false,
        "destination": [
          "Gnosis",
          "Optimism",
          "Arbitrum",
          "Polygon",
          "BSC",
          "Base",
          "Linea",
          "Metis",
          "PolygonZkEVM",
          "xLayer",
          "Wormhole",
          "Mantle",
          "Mode"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "\n      The bridge can operate in one of two modes: Optimistic or Native. In both modes, so-called routers can accelerate the bridging for users by fronting liquidity (for token transfers) or a bond (for crosschain contract calls) at the destination. The routers are reimbursed after the message has arrived at the destination through one of the two modes.\n      \n      In optimistic mode the messages (bridging transactions) go through the central Connext sequencer, who reads them from the source chains, then sequences them and calculates an aggregate root offchain. This aggregate root can be proposed by a relayer at the destination triggering a `disputeBlocks` window where any watcher can turn the system back into native mode, invalidating the proposed root. Only the owner can set the system back into optimistic mode. Non-invalidated roots get finalized after `disputeBlocks`. In summary, optimistic mode skips the hub domain (Ethereum in the case of an L2-to-L2 transfer) and native arbitrary message bridges (AMBs) completely.\n      \n      In native mode, messages from various spoke domains are aggregated and periodically sent to Ethereum (hub domain) using the native (non-Connext) AMBs. When delivered to the hub domain, these message roots are aggregated again into a root-of-root of messages before being delivered to their destination (spoke domains). A custom `delayBlocks` value can be set individually in message-receiving Connext contracts to grant a time delay in which Connext-permissioned watchers could invalidate a potentially fraudulent message from the AMBs.\n      \n      In the case of a Connext router having accelerated a message by fronting liquidity, they will have to wait a certain time to get their liquidity back. In native mode, this is the time it takes to pass the message via AMBs and then verify / invalidate it during the `delayBlocks` period. In optimistic mode, it is the time to pass it via the offchain sequencer and finalize / dispute it during the `disputeBlocks` period. In both cases this reconciliation of funds for the router takes longer than the bridging for the user, while native mode has the longest delay for reconciliation.\n      \n      Although the values can be different for every message-receiving contract on each chain, current examples are 120 blocks for `delayBlocks` and 120 blocks for `disputeBlocks` on the MainnetSpokeConnector on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Validation",
          "description": "\n      For speed, users mainly depend on the bids of routers to fulfill their bridging transactions at the destination. But ultimately, after a message has been passed to the destination via the optimistic or native way and the delay period has passed for watchers to invalidate it, there is no router needed to execute at the destination. This means that the users are ultimately dependent on the correct functioning of the sequencer or the AMBs, and the watchers. Note that for Optimistic Rollups (Arbitrum, Optimism) the AMB is (during Connext native mode) only used  as a transport layer, and the 7-day optimistic challenge period is ignored.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "watchers disconnect certain connectors or pause the whole bridge.",
              "isCritical": false
            },
            {
              "category": "Funds can be stolen if",
              "text": "native AMBs that Connext uses or the centralized sequencer (in optimistic mode) forges messages and this is not caught by the watchers.",
              "isCritical": false
            },
            {
              "category": "Funds can be stolen if",
              "text": "connectors to optimistic rollups receive a fraudulent message within 7-day fraud-proof window and this is not caught by the watchers.",
              "isCritical": true
            }
          ]
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "ConnextBridge",
            "address": "0x8898B472C54c31894e3B9bb83cEA802a5d0e63C6",
            "upgradeability": {
              "proxyType": "EIP2535 diamond proxy",
              "admins": [],
              "implementations": [
                "0xe37d4F73ef1C85dEf2174A394f17Ac65DD3cBB81",
                "0x3606b0D9c84224892C7407d4e8DCfd7E9E2126A2",
                "0x5Ccd25372A41eeB3D4E5353879Bb28213dF5a295",
                "0x086B5A16D7Bd6B2955fCC7d5F9AA2a1544b67e0d",
                "0x7993Bb17D8D8A0676Cc1527f8b4CE52A2B490352",
                "0xcCb64fDf1c0Cc1aac1C39E5968E82f89c1B8C769",
                "0xBe8D8Ac9a44fBa6cb7A7E02c1E6576E06C7da72D",
                "0x9AB5F562Dc2aCcCd1b80d6564B770786e38f0686",
                "0x6369F971fd1f1f230B8584151Ed7747FF710Cc68",
                "0x324c5834cD3bD19c4991F4fC5b3a0Ff5257a692b",
                "0x44e799f47A5599f5c9158d1F2457E30A6D77aDb4",
                "0x3Bcf4185443A339517aD4e580067f178d1B68E1D"
              ],
              "immutable": false
            },
            "chain": "ethereum",
            "description": "The main Connext contract. Following Diamond design pattern, it contains multiple Facets that implement        various parts of the bridge functionality."
          },
          {
            "name": "RootManager",
            "address": "0x523AB7424AD126809b1d7A134eb6E0ee414C9B3A",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract responsible for maintaining list of domains and building root-of-roots of messages. It keeps tracks of all hub connectors that connect to specific domain."
          },
          {
            "name": "WatcherManager",
            "address": "0x79e6E0242405A66B2dd8B96DEd3b2F0216Fd417d",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract maintaining a list of Watchers able to stop the bridge if fraud is detected."
          },
          {
            "name": "MainnetSpokeConnector",
            "address": "0x02fdF04AF077687CDA03Bd3162388b7972A4a1Cc",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract that receives messages from other Domains on Ethereum."
          },
          {
            "name": "PolygonHubConnector",
            "address": "0xE8cF9EbB1cFB137c692a0a4E470E257B9417d116",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Polygon via Polygon FxChannel AMB."
          },
          {
            "name": "PolygonZkHubConnector",
            "address": "0x7ed49D0a13255802A281C08688563bd8D5f726b1",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to PolygonZkEVM via PolygonZkEVM AMB (shared PolygonZkEVMBridge)."
          },
          {
            "name": "xLayerZkHubConnector",
            "address": "0x279fDA9AdDB854541f0bb86733d924e28c24c625",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to PolygonZkEVM via X Layer AMB (shared PolygonZkEVMBridge)."
          },
          {
            "name": "GnosisHubConnector",
            "address": "0xF1c78967584D5E0ffF66dA103b8eb06c82EC020d",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Gnosis via Gnosis AMB."
          },
          {
            "name": "OptimismHubConnector",
            "address": "0x5c2149869146DeA55cDD1CF2DD828e4e1548bb2A",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Optimism via Optimism AMB transport layer. Note that it reads messages from Optimism        as soon as Optimism state root is recorded on Ethereum w/out waiting for the 7-day fraud proof delay window."
          },
          {
            "name": "BaseHubConnector",
            "address": "0x23b7abe4cc664F24Eb68E80cFAdc572857799a94",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Base via OP stack AMB."
          },
          {
            "name": "MantleHubConnector",
            "address": "0x5B0E1a507E786f0a7c11C972ad5F4dd254661e24",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Mantle via OP stack AMB."
          },
          {
            "name": "MetisHubConnector",
            "address": "0x9Ba7D2Ab079Bd1924859e2fECDAD1bEBe5B119Fa",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Metis via Optimism AMB."
          },
          {
            "name": "ArbitrumHubConnector",
            "address": "0x83096c7455f24E593aaC9A7c73f849d36d3EEb82",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Optimism via Arbitrum AMB transport layer. Note that it reads messages from Arbitrum as soon as Arbitrum state root is recorded on Ethereum w/out waiting for the 7-day fraud proof delay window."
          },
          {
            "name": "WormholeHubConnector",
            "address": "0xae6B9cDE6191b710F5A18D82f751Ba52B78a99DA",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages using Wormhole."
          },
          {
            "name": "NewWormholeHubConnector",
            "address": "0xf5a3372ed529FCD0690b6013EAaE04170ec0626b",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages using Wormhole, duplicate of WormholeHubConnector."
          },
          {
            "name": "LineaHubConnector",
            "address": "0x56Ab287e5c33Ee70158c951f34818bd095446255",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Linea via Linea AMB."
          },
          {
            "name": "ModeHubConnector",
            "address": "0x7b2bE683266909A6a4068e743083dd40621d663E",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract for sending/receiving messages from mainnet to Mode Network via OP stack AMB."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Connext Multisig",
          "description": "This is a Gnosis Safe with 8 / 12 threshold. It uses the following modules: OptimisticGovernor. Owner of the main Connext Bridge Diamond Proxy. Can upgrade the functionality of any system component with no delay. Maintains the list of Watchers.",
          "accounts": [
            {
              "address": "0x4d50a469fc788a3c0CdC8Fd67868877dCb246625",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xdFa28361aC40679cC5D8EFa74c0421961397f2Eb",
              "type": "EOA"
            },
            {
              "address": "0xc840e73B856f52E5491d6016daf5C7AE5e6beECD",
              "type": "EOA"
            },
            {
              "address": "0x450BCD84a040E6975a8092114A09cD37fA140873",
              "type": "EOA"
            },
            {
              "address": "0x8D09e20b835009E5320cC11E6a6F00aF451aD669",
              "type": "EOA"
            },
            {
              "address": "0x43A257c61e9Ef4750e426eC0770589509469b156",
              "type": "EOA"
            },
            {
              "address": "0x6B44Dba00e92DD035976607CBF62bf1CC6320EC5",
              "type": "EOA"
            },
            {
              "address": "0xe4d19c67ca0E9E3888158062De24321a0B272e73",
              "type": "EOA"
            },
            {
              "address": "0xC832bB8015762B4857459551057EB61c68B93608",
              "type": "EOA"
            },
            {
              "address": "0x320CBa820f33251d480Dcb79F7a9b1cc757aC12e",
              "type": "EOA"
            },
            {
              "address": "0x1b526192C541DE6E23D73b4Afc4b6B45A75aeAdD",
              "type": "EOA"
            },
            {
              "address": "0xf8d8aF083aC452b05b0D2eb4499AD900324b5754",
              "type": "EOA"
            },
            {
              "address": "0x9b903Ae440CB1f01c342466D6DB6b57A5BF98C3f",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Connext Fee Multisig",
          "description": "This is a Gnosis Safe with 1 / 5 threshold.  Collects fees from the bridge. Can manage Routers through its RouterAdmin role.",
          "accounts": [
            {
              "address": "0x7bE978Cc84612E08f7844672B0E6A6F367FE2b6A",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x9b903Ae440CB1f01c342466D6DB6b57A5BF98C3f",
              "type": "EOA"
            },
            {
              "address": "0xade09131C6f43fe22C2CbABb759636C43cFc181e",
              "type": "EOA"
            },
            {
              "address": "0x7fB1B8D2C4a8186426Fb12a4Ae483f0093ED2315",
              "type": "EOA"
            },
            {
              "address": "0xb71C02f99c42424257745827F1C2beBD7Fa1e936",
              "type": "EOA"
            },
            {
              "address": "0xD7a8070F0875915dB9b9E03bD47A0b973d19130b",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Watchers",
          "description": "Permissioned set of actors who can pause certain bridge components. On Ethereum L1 Watchers can pause RootManager and MainnetSpokeConnector, i.e. modules receiving messages. They can also remove connectors from the RootManager. List of watchers is maintained by the Connext MultiSig.",
          "accounts": [
            {
              "address": "0x56dD71fffD089EdAdbA8eCdaaDb94269713f8f4d",
              "type": "EOA"
            },
            {
              "address": "0x151Ea574C62b505aEe2F89f33D8c152E28A956b0",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Sequencer",
          "description": "Permissioned actor that collects bids from all chains, aggregates them and randomly selects router(s) to fulfill them. The sequencer will post batches of these bids to a relayer network, which will submit them to the destination chain",
          "accounts": [
            {
              "address": "0x4fFA5968857a6C8242E4A6Ded2418155D33e82E7",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Relayers",
          "description": "Permissioned set of actors who can perform certain bridge operations as a service.",
          "accounts": [
            {
              "address": "0x75C6A865c30da54e365Cb5Def728890B3DD8BDC4",
              "type": "Contract"
            },
            {
              "address": "0xaBcC9b596420A9E9172FD5938620E265a0f9Df92",
              "type": "Contract"
            },
            {
              "address": "0x0ae392879A228B2484D9B1F80A5D0B7080FE79C2",
              "type": "Contract"
            },
            {
              "address": "0x43100A190C3FeAE37Cb1f5d880e8fa8d81BE5CB9",
              "type": "Contract"
            },
            {
              "address": "0x935AaAe0f5b02007c08512F0629a9d37Af2E1A47",
              "type": "Contract"
            },
            {
              "address": "0x9B077C59fDe7de5AdCeF8093Bc38B61d43FC7007",
              "type": "Contract"
            },
            {
              "address": "0xE2Fc8F14B6cEb1AD8165623E02953eDB100288bE",
              "type": "Contract"
            },
            {
              "address": "0xe8a5eE73f3c8F1Cd55915f6Eb5Fc7df4206f3C78",
              "type": "Contract"
            },
            {
              "address": "0x43728A95386D64384C76Afd416Dcc8118869BA6c",
              "type": "Contract"
            },
            {
              "address": "0x62B1a88CCc6BC5e6FF91FB2FCD29Ab4F819b35C6",
              "type": "Contract"
            },
            {
              "address": "0xcDbF9D438670D19d1Fb3954Abc8a13666b302b28",
              "type": "Contract"
            },
            {
              "address": "0x75bA5Af8EFFDCFca32E1e288806d54277D1fde99",
              "type": "Contract"
            },
            {
              "address": "0xB4F8D176466f5F544bAd53737bffAaeA17185c05",
              "type": "Contract"
            },
            {
              "address": "0xF9D64d54D32EE2BDceAAbFA60C4C438E224427d0",
              "type": "Contract"
            }
          ]
        },
        {
          "name": "Routers",
          "description": "Permissioned set of actors who can front liquidity, speeding up message delivery.",
          "accounts": [
            {
              "address": "0xF26c772C0fF3a6036bDdAbDAbA22cf65ECa9F97c",
              "type": "EOA"
            },
            {
              "address": "0x97b9dcB1AA34fE5F12b728D9166ae353d1e7f5C4",
              "type": "EOA"
            },
            {
              "address": "0x8cb19CE8EEDF740389D428879a876A3B030B9170",
              "type": "EOA"
            },
            {
              "address": "0x0e62f9fa1F9b3E49759Dc94494F5bC37a83d1FAD",
              "type": "EOA"
            },
            {
              "address": "0x58507fed0Cb11723dFb6848c92C59Cf0BBEB9927",
              "type": "EOA"
            },
            {
              "address": "0x7ce49752fFA7055622f444df3c69598748cb2E5f",
              "type": "EOA"
            },
            {
              "address": "0x33b2aD85f7DbA818e719FB52095dC768E0eD93ec",
              "type": "EOA"
            },
            {
              "address": "0x048a5EcC705C280b2248aefF88fd581AbbEB8587",
              "type": "EOA"
            },
            {
              "address": "0x975574980a5Da77f5C90bC92431835D91B73669e",
              "type": "EOA"
            },
            {
              "address": "0x6FD84ba95525c4cCd218F2f16F646A08B4b0a598",
              "type": "EOA"
            },
            {
              "address": "0x6892d4D1f73A65B03063B7d78174dC6350Fcc406",
              "type": "EOA"
            },
            {
              "address": "0x32D63da9F776891843C90787CEC54ADA23ABd4C2",
              "type": "EOA"
            },
            {
              "address": "0xFaAB88015477493cFAa5DFAA533099C590876F21",
              "type": "EOA"
            },
            {
              "address": "0x63Cda9C42db542bb91a7175E38673cFb00D402b0",
              "type": "EOA"
            },
            {
              "address": "0xBE7BC00382a50A711D037eAeCAD799bb8805Dfa8",
              "type": "EOA"
            },
            {
              "address": "0x22831e4f21cE65b33EF45df0e212b5bEbF130E5a",
              "type": "EOA"
            },
            {
              "address": "0xEca085906cb531bdf1F87eFA85c5bE46aA5C9d2c",
              "type": "EOA"
            },
            {
              "address": "0xC4Ae07F276768A3b74AE8c47bc108a2aF0e40eBa",
              "type": "EOA"
            },
            {
              "address": "0x9584Eb0356a380b25D7ED2C14c54De58a25f2581",
              "type": "EOA"
            },
            {
              "address": "0x6273c0965A1dB4F8A6277d490B4fD48715a42b96",
              "type": "EOA"
            },
            {
              "address": "0x49a9E7ec76Bc8fDF658d09557305170d9F01D2fA",
              "type": "EOA"
            },
            {
              "address": "0x5d527765252003AceE6545416F6a9C8D15ae8402",
              "type": "EOA"
            },
            {
              "address": "0x76CF58cE587bC928fcc5aD895555fd040E06C61a",
              "type": "EOA"
            },
            {
              "address": "0x96D38b113b1bC6a21d1137676f2f05DfcAce24e8",
              "type": "EOA"
            },
            {
              "address": "0xBa11aA59645a56031fedBcCF60D4f111534f2502",
              "type": "EOA"
            },
            {
              "address": "0x5f4E31F4F402E368743bF29954f80f7C4655EA68",
              "type": "EOA"
            },
            {
              "address": "0xc770eC66052fe77ff2eF9edF9558236e2D1C41Ef",
              "type": "EOA"
            },
            {
              "address": "0xc82C7d826b1eD0b2A4E9A2bE72B445416f901FD1",
              "type": "EOA"
            },
            {
              "address": "0xd839958F37f89F80c9520c2f3F4abE29168EeF1B",
              "type": "EOA"
            },
            {
              "address": "0x79EfFa11d95931A7e1717f9Eb655eE43e35Ef265",
              "type": "EOA"
            },
            {
              "address": "0x1660846ee9A3023034924FB02F85F632AEd66810",
              "type": "EOA"
            }
          ]
        }
      ],
      "riskView": {
        "validatedBy": {
          "value": "Various AMBs",
          "description": "For BNB Multichain is used, for other chains their native AMBs are used.",
          "sentiment": "warning"
        },
        "sourceUpgradeability": {
          "value": "YES",
          "description": "Connext can be upgraded by a 8 / 12 MultiSig",
          "sentiment": "bad"
        }
      }
    },
    {
      "type": "bridge",
      "id": "ankr",
      "createdAt": "1710858245",
      "isUnderReview": true,
      "display": {
        "name": "Ankr",
        "slug": "ankr",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://ankr.com/staking/bridge/"],
          "documentation": ["https://ankr.com/docs/bridge/overview/"],
          "repositories": ["https://github.com/Ankr-network"],
          "socialMedia": [
            "https://twitter.com/ankrstaking",
            "https://t.me/ankrstaking",
            "https://discord.com/invite/GGzJ6A6fEg",
            "https://medium.com/ankr-network"
          ]
        },
        "description": "Ankr Bridge allows you to transfer Ankr Liquid Staking tokens between networks where while remaining a valid stake and continuing to accumulate rewards."
      },
      "config": {
        "associatedTokens": ["ANKR"],
        "escrows": [
          {
            "address": "0xc437DF90B37C1dB6657339E31BfE54627f0e7181",
            "sinceTimestamp": "1646203700",
            "tokens": ["ANKR", "ankrETH", "ankrMATIC"],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "A withdrawal requires a proof signed by an admin-defined consensus EOA.",
          "sentiment": "bad"
        }
      },
      "technology": {
        "destination": [
          "Arbitrum",
          "Avalanche",
          "Optimism",
          "Fantom",
          "Polygon",
          "Mode"
        ]
      }
    },
    {
      "type": "bridge",
      "id": "avalanche",
      "createdAt": "1662628329",
      "display": {
        "name": "Avalanche Bridge",
        "slug": "avalanche",
        "description": "Avalanche Bridge is an externally validated bridge. It uses a set of Wardens using secure SGX Enclave to sign transfers. On Ethereum side it uses periodically rotated EOA address for an Escrow. In the announcement, 3 out of 4 Warden signatures are required, however the exact number is impossible to verify for an external observer.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://avax.network/"],
          "explorers": ["https://subnets.avax.network/"],
          "apps": ["https://bridge.avax.network/"],
          "repositories": ["https://github.com/ava-labs"],
          "socialMedia": [
            "https://twitter.com/avax",
            "https://t.me/avalancheavax",
            "https://discord.gg/RwXY7P6",
            "https://linkedin.com/company/avalancheavax",
            "https://facebook.com/avalancheavax",
            "https://youtube.com/@Avalancheavax",
            "https://reddit.com/r/avax/"
          ]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0xE78388b4CE79068e89Bf8aA7f218eF6b9AB0e9d0",
            "sinceTimestamp": "1634135918",
            "tokens": [
              "ETH",
              "USDC",
              "WETH",
              "WBTC",
              "USDT",
              "DAI",
              "LINK",
              "WOO",
              "AAVE",
              "BUSD",
              "SUSHI",
              "SHIB",
              "UNI",
              "GRT",
              "MKR"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0x8EB8a3b98659Cce290402893d0123abb75E3ab28",
            "sinceTimestamp": "1657207546",
            "tokens": [
              "ETH",
              "USDC",
              "WETH",
              "WBTC",
              "USDT",
              "DAI",
              "LINK",
              "WOO",
              "AAVE",
              "BUSD",
              "SUSHI",
              "SHIB",
              "UNI",
              "GRT",
              "MKR"
            ],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "6/8 Intel SGX",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "EOA",
          "description": "Avalanche Bridge uses EOA for Escrow",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred end up as wrapped ERC20 proxies, the contract is named BridgeToken",
          "sentiment": "bad"
        }
      },
      "technology": {
        "destination": ["Avalanche"],
        "canonical": true,
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Avalanche Bridge is a Token Bridge that locks tokens in the escrow account and mints tokens on Avalanche network. When bridging back to Ethereum tokens are burned on Avalanche and transferred back to the receiver on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "Outgoing transfers on Ethereum side are being watched by external entity which informs Avalanche side of the bridge about incoming transfer. The mechanism in other direction works very similar, users can burn tokens signaling external entity intention to transfer, which later informs Ethereum Bridge Wardens about incoming transfer.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "wardens decide to maliciously takeover them or there is an external exploit which will result in signing malicious transaction.",
              "isCritical": true
            },
            {
              "category": "Users can be censored if",
              "text": "wardens decide to censor certain transactions.",
              "isCritical": true
            },
            {
              "category": "Funds can be lost if",
              "text": "wardens loose the private key.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "wardens decide to stop processing transfers.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        },
        "destinationToken": {
          "name": "Destination tokens are wrapped",
          "description": "Tokens transferred end up as wrapped ERC20 proxies. The contract is named BridgeToken.",
          "references": [],
          "risks": [],
          "isIncomplete": true
        }
      },
      "contracts": { "addresses": [], "risks": [] },
      "permissions": [
        {
          "name": "Bridge Wardens",
          "description": "Off-chain Multisig 6/8 using Intel SGX, which controls all the funds deposited to the bridge. There is no possibility to verify whether Intel SGX technology is being used.",
          "accounts": [
            {
              "address": "0x8EB8a3b98659Cce290402893d0123abb75E3ab28",
              "type": "EOA"
            }
          ]
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Avalanche Bridge deep dive",
          "url": "https://li.fi/knowledge-hub/avalanche-bridge-a-deep-dive/",
          "thumbnail": "lifi-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "aptos",
      "createdAt": "1667124468",
      "display": {
        "name": "Aptos (LayerZero)",
        "slug": "aptos",
        "links": {
          "websites": [
            "https://theaptosbridge.com/bridge",
            "https://layerzero.network/"
          ],
          "repositories": [
            "https://github.com/LayerZero-Labs/LayerZero-Aptos-Contract",
            "https://github.com/aptos-labs"
          ],
          "socialMedia": [
            "https://x.com/Aptos",
            "https://discord.com/invite/aptosnetwork",
            "https://linkedin.com/company/aptos-foundation/",
            "https://t.me/aptos"
          ]
        },
        "description": "Aptos Bridge is built on top of LayerZero protocol and is a token bridge for transferring assets from Ethereum to Aptos. It leverages an oracle and relayer for cross-chain security for the protocol.",
        "category": "Token Bridge"
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be independently confirmed by oracle attesting to source chain checkpoints and Relayer providing merkle proof of the transfer event.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Token Bridge contracts are not upgradable but the owner (EOA) can remove all the funds after 1 week delay. LayerZero contracts are upgradable without delay.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": ["Aptos"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Aptos Bridge is a Token Bridge. It locks tokens in Ethereum escrow and mints tokens on Aptos.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Oracles and Relayers",
          "description": "Aptos Bridge is built on top of LayerZero protocol. LayerZero relies on Oracles to periodically submit source chain block hashes to the destination chain.        Once block hash is submitted, Relayers can provide the merkle proof for the transfers. Token Bridge owner can withdraw all funds from the bridge escrow        after placing the bridge in an emergency withdrawal mode that will allow them to transfer all tokens out after 1 week delay.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "oracles or relayers fail to facilitate the transfer.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "oracles and relayers collude to submit fraudulent block hash and relay fraudulent transfer .",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "token bridge owner (currently EOA) enables emergency withdrawal and users do not exit with their funds within a week.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "token bridge owner (currently EOA) sets WETH contract address to a malicious contract that will allow the owner to steal user's ETH.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x50002CdFe7CCb0C41F519c6Eb0653158d11cd907",
            "sinceTimestamp": "1666143827",
            "tokens": ["USDC", "USDT", "WETH"],
            "chain": "ethereum"
          }
        ]
      },
      "contracts": {
        "addresses": [
          {
            "name": "TokenBridge",
            "address": "0x50002CdFe7CCb0C41F519c6Eb0653158d11cd907",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Aptos Token Bridge."
          },
          {
            "address": "0x902F09715B6303d4173037652FA7377e5b98089E",
            "name": "LayerZero Relayer",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA658742d33ebd2ce2F0bdFf73515Aa797Fd161D9"],
              "implementations": ["0x76A15d86FbBe691557C8b7A9C4BebF1d8AFE00A7"]
            }
          },
          {
            "address": "0x5a54fe5234E811466D5366846283323c954310B2",
            "name": "LayerZero Oracle",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x967bAf657ec4d4b1cb00b06f7Cc6E8BA604e3AC8"],
              "implementations": ["0xA0Cc33Dd6f4819D473226257792AFe230EC3c67f"]
            }
          },
          {
            "name": "Endpoint",
            "address": "0x66A71Dcef29A0fFBDBE3c6a460a3B5BC225Cd675",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "LayerZero Ethereum Endpoint."
          },
          {
            "name": "UltraLightNodeV2",
            "address": "0x4D73AdB72bC3DD368966edD0f0b2148401A178E2",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "LayerZero UltraLight Node V2. Used by oracles to checkpoint source chain block hashes."
          },
          {
            "name": "TreasuryV2",
            "address": "0x3773E1E9Deb273fCdf9f80bc88bB387B1e6Ce34d",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "LayerZero Treasury."
          },
          {
            "address": "0x07245eEa05826F5984c7c3C8F478b04892e4df89",
            "name": "LayerZero Proof Library"
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ],
        "isIncomplete": true
      },
      "permissions": [
        {
          "name": "Aptos Multisig",
          "description": "This is a Gnosis Safe with 3 / 6 threshold.  Bridge owner, can setup tokens, fees, WETH token address (potentially malicious). Can withdraw all the funds from the Escrow after unlocking emergency withdrawal with 1 week delay.",
          "accounts": [
            {
              "address": "0x65bb797c2B9830d891D87288F029ed8dACc19705",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x2E1078e128e8AA6A70eC8d1B17A79Fc4B457d437",
              "type": "EOA"
            },
            {
              "address": "0x565cFd7224bbc2a81a6e2a1464892ecB27efB070",
              "type": "EOA"
            },
            {
              "address": "0x1D7C6783328C145393e84fb47a7f7C548f5Ee28d",
              "type": "EOA"
            },
            {
              "address": "0x79e2b9C1F6C9ed1375C93AaF139e6C4537f48523",
              "type": "EOA"
            },
            {
              "address": "0xF05F4211ad15A8e49b49C0436067CFFfEa783aA4",
              "type": "EOA"
            },
            {
              "address": "0xf02CC4dc84aC59Bd6089BAddcEB9d4Ef3AEFb0f0",
              "type": "EOA"
            }
          ]
        },
        {
          "accounts": [
            {
              "address": "0x902F09715B6303d4173037652FA7377e5b98089E",
              "type": "Contract"
            }
          ],
          "name": "LayerZero Relayer",
          "description": "Contract authorized to relay messages and - as a result - withdraw funds from the bridge."
        },
        {
          "accounts": [
            {
              "address": "0x76F6d257CEB5736CbcAAb5c48E4225a45F74d6e5",
              "type": "EOA"
            }
          ],
          "name": "LayerZero Relayer Admin owner",
          "description": "Can upgrade LayerZero relayer contract with no delay."
        },
        {
          "accounts": [
            {
              "address": "0x7B80f2924E3Ad59a55f4bcC38AB63480599Be6c8",
              "type": "EOA"
            }
          ],
          "name": "LayerZero Oracle Admin owner",
          "description": "Can upgrade LayerZero oracle contract with no delay."
        },
        {
          "name": "LayerZero Multisig",
          "description": "This is a Gnosis Safe with 2 / 5 threshold.  The owner of Endpoint, UltraLightNode and Treasury contracts. Can switch to a new UltraLightNode for an Endpoint. Can switch proof library for an UltraLightNode and change Treasury.",
          "accounts": [
            {
              "address": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327",
              "type": "EOA"
            },
            {
              "address": "0xe095F2590eF1Ab39601445025847Ed8E4B40D687",
              "type": "EOA"
            },
            {
              "address": "0xBb6633cc267951E938F9B6421E4F54aa5b2c1936",
              "type": "EOA"
            },
            {
              "address": "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
              "type": "EOA"
            },
            {
              "address": "0x67FC8c432448f9a8d541C17579EF7a142378d5aD",
              "type": "EOA"
            }
          ]
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Security models: isolated vs shared",
          "url": "https://medium.com/l2beat/circumventing-layer-zero-5e9f652a5d3e",
          "thumbnail": "l2beat-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "beamer-bridge-v2",
      "createdAt": "1688643599",
      "display": {
        "name": "Beamer Bridge V2",
        "slug": "beamerbridgev2",
        "category": "Liquidity Network",
        "warning": "The bridge is currently paused.",
        "links": {
          "websites": ["https://beamerbridge.com"],
          "apps": ["https://app.beamerbridge.com"],
          "repositories": ["https://github.com/beamer-bridge/beamer"],
          "socialMedia": [
            "https://twitter.com/BeamerBridge",
            "https://discord.gg/beamerbridge",
            "https://medium.com/@BeamerBridge"
          ]
        },
        "description": "Beamer Bridge is an optimistic rollup-to-rollup bridge that enables direct ERC-20 asset transfers between any two EVM compatible rollups, without transitioning to L1.",
        "detailedDescription": "It uses actors called Agents to fulfill user transfer requests on the destination chain. Users lock their assets on the source chain, and Agents provide the assets on the destination chain. Agents later receive the locked capital on the source chain by proving that they actually provided the assets on the destination chain. There is no liquidity pool, every agent participates in the cross-chain transfer by providing their own capital. Claims can ultimately be challenged on L1 using the rollups canonical bridges."
      },
      "config": {
        "escrows": [
          {
            "address": "0x7faEa6562a6cE991149F0167baF283E9aAc7Dc50",
            "newVersion": true,
            "sinceTimestamp": "1678964183",
            "tokens": ["USDC", "WETH", "DAI", "USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x7faEa6562a6cE991149F0167baF283E9aAc7Dc50",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Optimistically",
          "description": "Claims are considered valid if no challenge is submitted within the claim period (24h). The dispute can either be resolved by the participants or escalated by making use of the canonical bridge.",
          "sentiment": "warning"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": ["Mainnet", "Optimism", "Arbitrum"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "The user initiates transaction to contract on Rollup 1, locking fees and assets. An Agent sends assets to user on Rollup 2. At this stage, the user is done and receives their assets on target rollup. The agent initiates the claim on the rollup, and if no one challenges the claim, the agent can withdraw the assets after 24h.",
          "references": [
            {
              "text": "Beamer Bridge V2 Architecture",
              "href": "https://docs.beamerbridge.com/"
            }
          ],
          "risks": []
        },
        "validation": {
          "name": "Optimistic validation with fallback to canonical bridge",
          "description": "Claims are considered valid if no challenge is submitted within the claim period (24h). The dispute can either be resolved by the participants using an auction system or escalated by making use of the canonical bridge.",
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "an agent claim is left unchallenged for 24 hours or the L1 dispute resolution is not triggered.",
              "isCritical": false,
              "_ignoreTextFormatting": true
            }
          ],
          "references": [
            {
              "text": "Beamer Bridge V2 Architecture",
              "href": "https://docs.beamerbridge.com/"
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Only tokens that have been bridged using native chain bridges are supported.",
          "references": [],
          "risks": []
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "Resolver",
            "address": "0xCb60516819a28431233195A8b7E0227C288B61AD",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "This contract resides on the L1 chain and is tasked with receiving thefill or non-fill proofs from the target L2 chain and forwarding them to the RequestManager on the source L2 chain."
          },
          {
            "name": "RequestManager",
            "address": "0x7faEa6562a6cE991149F0167baF283E9aAc7Dc50",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "When a user wants to perform a transfer from Ethereum to a rollup they deposit their funds in the request manager. An agent fills the request on the target chain and can later claim the funds locked in the RequestManager. The contract is pausable by Owner. The contract is currently paused.",
            "pausable": { "paused": true, "pausableBy": ["Owner"] }
          },
          {
            "name": "FillManager",
            "address": "0xD5EF34B499b6d64817CC70C3b0B8D9f807F06C29",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Agents filling requests from a Rollup to Ethereum use this contract to transfer the funds to the user."
          },
          {
            "name": "EthereumL2Messenger",
            "address": "0x3222C9a1e5d7856FCBc551A30a63634e7Fd634Da",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The Ethereum L2 Messenger stores messages coming from the FillManager for a potential future L1 resolution. It takes over the job of the canonical bridges for rollups which is storing all messages going from the FillManager to the Resolution contract on L1."
          },
          {
            "name": "EthereumL1Messenger",
            "address": "0x12B8489913E2afBCed131d52c345C380BBB65baf",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The Ethereum L1 Messenger contracts forwards messages to the RequestManager."
          },
          {
            "name": "OptimismL1Messenger",
            "address": "0x4C366b0CA6F21BDFBb5c0554d818DD50C0519b34",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The messenger contracts establish an interface for communication with the RequestManager and FillManager contracts via the rollups. The Optimism L1 Messenger is responsible for relaying the messages to the Optimism chain."
          },
          {
            "name": "ArbitrumL1Messenger",
            "address": "0x5911621aF8826d1AAA5B8B28d63c1e0096f7c0e3",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The messenger contracts establish an interface for communication with the RequestManager and FillManager contracts via the rollups. The Arbitrum L1 Messenger is responsible for relaying the messages to the Arbitrum chain."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "name": "Owner",
          "description": "Can invoke admin functions on the contracts such as adding new tokens, whitelisting agents or pausing the contracts.",
          "accounts": [
            {
              "address": "0x42405d66fdA09dbDaC90Ff25fC5a4C2353f43E70",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Liquidity Providers",
          "description": "Addresses allowed to fill requests.",
          "accounts": [
            {
              "address": "0xdC256EC77E97448d29D88118e55C82067150b768",
              "type": "Contract"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "cbridge",
      "createdAt": "1662628329",
      "display": {
        "name": "cBridge (Celer)",
        "slug": "cbridge",
        "description": "Celer cBridge offers cross-chain token bridging in two modes: Token Bridge and Liquidity Network. It also offers AMB facility - ability to pass arbitrary messages across chains.",
        "detailedDescription": " It leverages the \"State Guardian Network\" aka SGN to perform cross-chain communication.      For Liquidity Network, liquidity providers need to rely on SGN to remove their funds from the network.",
        "category": "Hybrid",
        "links": {
          "websites": ["https://celer.network/"],
          "apps": ["https://cbridge.celer.network/"],
          "explorers": [
            "https://cbridge-analytics.celer.network/",
            "https://celerscan.com/"
          ],
          "documentation": ["https://cbridge-docs.celer.network/"],
          "repositories": ["https://github.com/celer-network"],
          "socialMedia": [
            "https://discord.gg/uGx4fjQ",
            "https://t.me/celernetwork",
            "https://twitter.com/CelerNetwork"
          ]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820",
            "sinceTimestamp": "1638346811",
            "tokens": ["ETH", "USDC", "WETH", "USDT", "MASK", "BUSD", "LYRA"],
            "chain": "ethereum"
          },
          {
            "address": "0xB37D31b2A74029B5951a2778F959282E2D518595",
            "sinceTimestamp": "1639553135",
            "tokens": [
              "USDC",
              "WETH",
              "USDT",
              "FRAX",
              "DAI",
              "RLY",
              "WBTC",
              "CELR",
              "FXS",
              "WXT"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0x7510792A3B1969F9307F3845CE88e39578f2bAE1",
            "sinceTimestamp": "1651661389",
            "tokens": ["WETH", "PSTAKE"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": [
          "BNB Chain",
          "Avalanche",
          "Polygon",
          "Arbitrum",
          "Optimism",
          "Fantom",
          "Gnosis Chain",
          "Metis",
          "Boba Network"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Celer cBridge is a hybrid solution able to work in two modes: Token Bridge and Liquidity Network, depending on the token and destination chain. More information is provided in Destination Tokens section.",
          "references": [
            {
              "text": "Bridging models",
              "href": "https://cbridge-docs.celer.network/introduction/fungible-token-bridging-models"
            }
          ],
          "risks": [
            {
              "category": "Funds can be frozen if",
              "text": "validators (SGN) decide to not process a withdrawal request from liquidity providers.",
              "isCritical": true
            }
          ]
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "Validation process takes place in an external network called SGN that is operated by validators running on Tendermint consensus protocol. Nodes in the network observe contracts on each supported chain and sign messages when everything is correct. Based on the signature user can withdraw funds from the bridge.",
          "references": [
            {
              "text": "State Guardian Network (SGN)",
              "href": "https://cbridge-docs.celer.network/introduction/state-guardian-network"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators (SGN) decide to stop processing certain transactions.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators (SGN) allow to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators (SGN) sign a fraudulent message allowing themselves to withdraw all locked funds.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Celer cBridge works in two token bridging models: xAsset and xLiquidity. xAsset model, the canonical mapping bridge, is intended for a token that is deployed on Ethereum but is not deployed on the destination chain. In this case cBridge will deploy a mapped version of the token on destination via lock-mint model. xLiquidity model, the pool-based bridge, is intended for token already deployed on Ethereum and destination. When users transfer between these chains they will be depositing their tokens into the pool on Ethereum and withdrawing a matching number of tokens from the pool on the destination chain based on a bridge rate generated by the StableSwap price curve. Additionally, it is worth pointing out that Celer introduced xAsset V2, the standard allowing for seamless cross-chain bridged assets transfers, without the need to return to source chain for liquidity. It is accomplished by changing the lock-mint model from V1 to burn-mint model in V2. What is more, Celer introduced \"Open Canonical Token Bridge Standard\" aiming to prevent bridge vendor lock-in.",
          "references": [
            {
              "text": "Bridging models",
              "href": "https://cbridge-docs.celer.network/introduction/fungible-token-bridging-models"
            },
            {
              "text": "Open Canonical Token Bridge Standard",
              "href": "https://blog.celer.network/2021/12/13/say-no-to-vendor-lock-in-calling-for-an-open-canonical-token-bridge-standard/"
            },
            {
              "text": "xAsset V2",
              "href": "https://www.cryptoninjas.net/2022/06/03/celer-cbridge-launches-xasset-v2-for-omnidirectional-cross-chain-transfers-for-bridged-tokens/"
            },
            {
              "text": "StableSwap",
              "href": "https://curve.fi/files/stableswap-paper.pdf"
            }
          ],
          "risks": []
        }
      },
      "riskView": {
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "warning"
        },
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be signed by external actors set by the governance.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "MessageBus",
            "address": "0x4066D196A423b2b3B8B054f4F40efB47a74E200C",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x520d812604E7b2ce71819FDBFE9aC40E56327F8f"],
              "implementations": ["0x479ec366ae4EC016cE25B918BdEa8f78d4fa5dd8"]
            },
            "chain": "ethereum",
            "description": "Contract providing cross-chain AMB facility. It connects with Liquidity Network and Token Bridges to processes certain types of messages."
          },
          {
            "name": "Liquidity Network",
            "address": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract providing cross-chain swaps, allows user to deposit funds and withdraw them. Additionally user can add liquidity to this address to generate yield. The contract is pausable by Full Pausers, Partial Pausers.",
            "pausable": {
              "paused": false,
              "pausableBy": ["Full Pausers", "Partial Pausers"]
            }
          },
          {
            "name": "OriginalTokenVault",
            "address": "0xB37D31b2A74029B5951a2778F959282E2D518595",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract serving as token bridge, user can deposit funds and later withdraw them from this escrow. The contract is pausable by Full Pausers, Partial Pausers.",
            "pausable": {
              "paused": false,
              "pausableBy": ["Full Pausers", "Partial Pausers"]
            }
          },
          {
            "name": "OriginalTokenVaultV2",
            "address": "0x7510792A3B1969F9307F3845CE88e39578f2bAE1",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract serving as token bridge, user can deposit funds and later withdraw them from this escrow. The contract is pausable by Full Pausers, Partial Pausers.",
            "pausable": {
              "paused": false,
              "pausableBy": ["Full Pausers", "Partial Pausers"]
            }
          },
          {
            "name": "PeggedTokenBridge",
            "address": "0x16365b45EB269B5B5dACB34B4a15399Ec79b95eB",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract minting/burning tokens when receiving a message from Token Bridge. The contract is pausable by Full Pausers, Partial Pausers.",
            "pausable": {
              "paused": false,
              "pausableBy": ["Full Pausers", "Partial Pausers"]
            }
          },
          {
            "name": "PeggedTokenBridgeV2",
            "address": "0x52E4f244f380f8fA51816c8a10A63105dd4De084",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract minting/burning tokens when receiving a message from Token Bridge. The contract is pausable by Full Pausers, Partial Pausers.",
            "pausable": {
              "paused": false,
              "pausableBy": ["Full Pausers", "Partial Pausers"]
            }
          },
          {
            "name": "TransferAgent",
            "address": "0x9b274BC73940d92d0Af292Bde759cbFCCE661a0b",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Routing contract that transfers assets cross-chain using either Liquidity Network or Token Bridge."
          },
          {
            "name": "Sentinel",
            "address": "0xF140024969F6c76494a78518D9a99c8776B55f70",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x8E339115b295DeD49880eA62C1F06d1dbec3496b"],
              "implementations": ["0xaE41e6a597f4c65646e94E330D8BAd218Bec7896"]
            },
            "chain": "ethereum",
            "description": "Contract storing additional governors and pausers."
          }
        ],
        "references": [],
        "risks": []
      },
      "permissions": [
        {
          "name": "Bridge Governance",
          "description": "The owner of the main bridge contract, can update bridge parameters such as Token Bridge and Liquidity Network addresses.",
          "accounts": [
            {
              "address": "0x606d8cFd3f4Ed07314F5A1F1802dd4663308b175",
              "type": "Contract"
            }
          ]
        },
        {
          "name": "Bridge Governance (2)",
          "description": "The owner of both PeggedTokenBridges, the Liquidity Network, the TransferAgent and Sentinel is a governance contract with the permissions to manage: signers responsible for messages relaying, pausers with the ability to pause the bridge as well as governance of the system.",
          "accounts": [
            {
              "address": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
              "type": "Contract"
            }
          ]
        },
        {
          "name": "Governors",
          "description": "Can modify bridge operational parameters such as minimal and maximal send amounts, max slippage and transfer delay.",
          "accounts": [
            {
              "address": "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
              "type": "EOA"
            },
            {
              "address": "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
              "type": "EOA"
            },
            {
              "address": "0x40C11BddeB38Dec685Eed3586BAeBf086fac9dA0",
              "type": "EOA"
            },
            {
              "address": "0xF140024969F6c76494a78518D9a99c8776B55f70",
              "type": "Contract"
            },
            {
              "address": "0xED9fdF5B16F9F254bec5Ad389B80B48225186655",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Full pausers",
          "description": "Can pause and unpause the system.",
          "accounts": [
            {
              "address": "0xDfE4F07D1F36B8d559b25082460a4f6A72531de2",
              "type": "EOA"
            },
            {
              "address": "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
              "type": "EOA"
            },
            {
              "address": "0x2FB8783C14A71C08bFC1dE8Fc3D715Dd93039BF2",
              "type": "EOA"
            },
            {
              "address": "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
              "type": "EOA"
            },
            {
              "address": "0xF140024969F6c76494a78518D9a99c8776B55f70",
              "type": "Contract"
            }
          ]
        },
        {
          "name": "Partial pausers",
          "description": "Can pause the system.",
          "accounts": [
            {
              "address": "0xED9fdF5B16F9F254bec5Ad389B80B48225186655",
              "type": "EOA"
            },
            {
              "address": "0xDfE4F07D1F36B8d559b25082460a4f6A72531de2",
              "type": "EOA"
            },
            {
              "address": "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
              "type": "EOA"
            },
            {
              "address": "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
              "type": "EOA"
            },
            {
              "address": "0x2FB8783C14A71C08bFC1dE8Fc3D715Dd93039BF2",
              "type": "EOA"
            },
            {
              "address": "0xE45CB56CEe56Dd1A94F7E5fBDFaa5BaFB3C053d3",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Sentinel Admin",
          "description": "Can add and remove governors and pausers from the system.",
          "accounts": [
            {
              "address": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
              "type": "Contract"
            }
          ]
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "How HTLC bridge works?",
          "url": "https://twitter.com/bkiepuszewski/status/1437031523455229964",
          "thumbnail": "l2beat-03.jpg"
        },
        {
          "title": "cBridge deep dive",
          "url": "https://li.fi/knowledge-hub/cbridge-a-deep-dive/",
          "thumbnail": "lifi-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "connext",
      "createdAt": "1662628329",
      "isArchived": true,
      "display": {
        "name": "Connext (Legacy)",
        "slug": "connext-legacy",
        "category": "Liquidity Network",
        "links": {
          "websites": [
            "https://bridge.connext.network/",
            "https://connext.network/"
          ],
          "apps": ["https://bridge.connext.network/"],
          "explorers": ["https://connextscan.io/"],
          "socialMedia": [
            "https://twitter.com/connextnetwork",
            "https://discord.gg/pm4TPr4w5g",
            "https://blog.connext.network/"
          ],
          "documentation": ["https://docs.connext.network/"]
        },
        "description": "Connext Bridge is a cross-chain bridge that performs atomic swap between user and a liquidity provider (on separate chains) to perform asset swap. Liquidity Providers (Routers) bid for user requests in an off-chain auction."
      },
      "config": {
        "escrows": [
          {
            "address": "0x31eFc4AeAA7c39e54A33FDc3C46ee2Bd70ae0A09",
            "sinceTimestamp": "1636004546",
            "tokens": ["USDC", "USDT", "DAI", "WBTC"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": [
          "Avalanche",
          "BNB Chain",
          "Polygon",
          "Avalanche",
          "Fantom",
          "Gnosis Chain",
          "Arbitrum One",
          "Arbitrum Nova"
        ],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "description": "Connext Bridge is a cross-chain bridge that uses liquidity providers that participate in an auction with each other to fulfill a user token transfer request. Specifically, when a user intends to perform a cross-chain token transfer, they initially broadcast this intent off-chain to Routers (which are registered and run by liquidity providers, with their liquidity kept in Connext Bridge escrow on selected chains). Routers that are able and willing to commit to fulfill the transfer need to respond off-chain with a bid during a short period of time. Upon selection of a bid, the user and the Router start a peer-to-peer atomic swap process. The user communicates with TransactionManager contract on the source chain to lock their tokens and commit to the selected bid. This event triggers selected Router to lock corresponding amount on the destination chain. The user waits for this event and then relays a signed message to the destination contract (via a Relayer) to claim those funds, while the Router uses the same signed message to claim funds on the source chain. There is a timeout for this process - when it passes, both the user and the Router can reclaim their locked funds.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "liquidity providers decide to never bid to fulfill transfers of a given user."
            },
            {
              "category": "Funds can be frozen if",
              "text": "liquidity provider (Router) decides to not cooperate, living user's funds locked for a limited period of time (e.g. 72 hours)."
            }
          ]
        },
        "validation": {
          "name": "Validation",
          "description": "A user and a Router (liquidity provider) engage in a peer-to-peer atomic swap process and both are expected to monitor each other's actions during the \"Prepare\" (lock) and \"Fulfill\" (claim) phases. When a Relayer is used to send a message to the destination chain, the user needs to verify that it happens, and that it happens in a timely manner.",
          "references": [
            {
              "text": "Docstring for TransactionManager.sol",
              "href": "https://etherscan.deth.net/address/0x31efc4aeaa7c39e54a33fdc3c46ee2bd70ae0a09#code"
            }
          ],
          "risks": []
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "User",
          "description": "Transfer is done via peer-to-peer atomic swap",
          "sentiment": "good"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "TransactionManager",
            "address": "0x31eFc4AeAA7c39e54A33FDc3C46ee2Bd70ae0A09",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and logic for cross-chain transactions."
          },
          {
            "name": "FulfillInterpreter",
            "address": "0x5b9E4D0Dd21f4E071729A9eB522A2366AbeD149a",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract enabling execution of arbitrary calldata on a destination chain."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "name": "Owner of TransactionManager",
          "description": "Can add and remove Routers and supported assets.",
          "accounts": [
            {
              "address": "0x155B15a7e9Ff0e34cEaF2439589D5C661ADC9493",
              "type": "EOA"
            }
          ]
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Connext deep dive",
          "url": "https://li.fi/knowledge-hub/connext-network-a-deep-dive/",
          "thumbnail": "lifi-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "debridge",
      "createdAt": "1673362295",
      "display": {
        "name": "deBridge",
        "slug": "debridge",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://debridge.finance"],
          "documentation": ["https://docs.debridge.finance"],
          "repositories": ["https://github.com/debridge-finance"],
          "explorers": ["https://explorer.debridge.finance"],
          "socialMedia": [
            "https://twitter.com/deBridgeFinance",
            "https://discord.gg/debridge",
            "https://blog.debridge.finance",
            "https://reddit.com/r/debridge/",
            "https://linkedin.com/company/debridge-finance"
          ],
          "apps": ["https://app.debridge.finance"]
        },
        "description": "deBridge is an interoperability layer that enables messaging between various blockchains. For the typical token transfer, \"deToken\" is minted on the destination chain."
      },
      "config": {
        "escrows": [
          {
            "address": "0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
            "sinceTimestamp": "1637595390",
            "tokens": [
              "USDC",
              "WETH",
              "FRAX",
              "ETH",
              "USDT",
              "WBTC",
              "DAI",
              "MATIC",
              "RAI"
            ],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": ["Arbitrum", "Avalanche", "BNB Chain", "Polygon"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "deBridge leverages cross-chain messaging to transfer tokens from Ethereum to other chains and vice-versa. The validation of cross-chain transactions is performed by a network of oracles signing the transaction, which would be later evaluated by the smart contract.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "External validators observe events on deBridge supported chains and transfer signed messages to other chains. Message is considered valid when it contains at least minimum amount of signature, currently set to 8.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "nodes decide not to transfer tokens after observing an event on the supported chain.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Tokens transferred end up a their wrapped representation (deTokens).",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded or not securely implemented.",
              "isCritical": true
            }
          ]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Signed off-chain by 8 or more deBridge oracles.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "The bridge can be upgraded by 2/3 MSig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "DeBridgeGate",
            "address": "0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xE4427af3555CD9303D728C491364FAdFDD7494Fe"],
              "implementations": ["0x797161BCC625155D2302251404ccB93c2632658e"]
            },
            "chain": "ethereum",
            "description": "The main point of cross-chain interactions, this contract allows user to send message to other chain and claim funds when bridging back to Ethereum."
          },
          {
            "name": "SignatureVerifier",
            "address": "0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xE4427af3555CD9303D728C491364FAdFDD7494Fe"],
              "implementations": ["0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4"]
            },
            "chain": "ethereum",
            "description": "Contract responsible for checking off-chain signatures performed by the oracles, currently there are needed at least 8 confirmations."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Admin Multisig",
          "description": "This is a Gnosis Safe with 5 / 8 threshold.  Admin for all upgradable proxy smart contracts. It can change the implementations of all proxies through the ProxyAdmin contract.",
          "accounts": [
            {
              "address": "0x6bec1faF33183e1Bc316984202eCc09d46AC92D5",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xbA7cE717928A6C51ab530aD9AdB69bA6E76D09B5",
              "type": "EOA"
            },
            {
              "address": "0xC351f905d810Cb33c54fE771e1bE4ec5A5048c2D",
              "type": "EOA"
            },
            {
              "address": "0xD4Aa80C7a35B2C996Ef3F83baf91D5721c86dA2C",
              "type": "EOA"
            },
            {
              "address": "0x874B1d14bF4FE455C9eCAcDf66b629e10664c6E1",
              "type": "EOA"
            },
            {
              "address": "0xE9666D80e5617bA1470E2cA09F2D9B0C8CCd56B7",
              "type": "EOA"
            },
            {
              "address": "0x6f572a24c5C009fC8C844Fab5352edf79F132FBD",
              "type": "EOA"
            },
            {
              "address": "0xd725E456D5beD8275E297C4Dd11135e3C5cDe544",
              "type": "EOA"
            },
            {
              "address": "0x24C0E1C19c8eC997b781dF4B4A0f812aE9667c96",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Oracles",
          "description": "Accounts permitted to sign the message coming from other chain. Currently at least 8 of them are need to sign the message.",
          "accounts": [
            {
              "address": "0x4bC16662A2cE381E7bb54Dc577c05619C5E67526",
              "type": "EOA"
            },
            {
              "address": "0x1c0720B124e7251e881a0fbCfe259d085C59f205",
              "type": "EOA"
            },
            {
              "address": "0x573F5E2940789B378BA09cf7d3fD010C422a9ff5",
              "type": "EOA"
            },
            {
              "address": "0x59CE95b8955F0E7Be128d5Af77161B36f6084214",
              "type": "EOA"
            },
            {
              "address": "0xbCF516826eD7F3b0E487C7ca6A87b3b4EccDD4DC",
              "type": "EOA"
            },
            {
              "address": "0xf27Af436A6F2d9C64B4CA40a483eC46acDc33fe8",
              "type": "EOA"
            },
            {
              "address": "0x6436BBcA322b8cD0c56d8b9aD7837b13960dA426",
              "type": "EOA"
            },
            {
              "address": "0x874f46124C1DAaD4749B94f82eD142754826240E",
              "type": "EOA"
            },
            {
              "address": "0xDD523FD4DebcF0dB6f0B2c2D30D075CaaeE023e0",
              "type": "EOA"
            },
            {
              "address": "0x83f81E7f9E284AAFFEDED797008663595f7342bF",
              "type": "EOA"
            },
            {
              "address": "0x4CA2191cDE585d65EB6AFC09D23D60b8A0AB677D",
              "type": "EOA"
            },
            {
              "address": "0xebec9bc53f9C65f69DB8591B9f240BbCDb563c54",
              "type": "EOA"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "davos",
      "createdAt": "1710858245",
      "isUnderReview": true,
      "display": {
        "name": "Davos",
        "slug": "davos",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://davos.xyz/app/bridge"],
          "documentation": ["https://docs.davos.xyz/"],
          "repositories": ["https://github.com/davos-money/davos-contracts"],
          "socialMedia": [
            "https://twitter.com/Davos_Protocol",
            "https://t.me/davosprotocol",
            "https://discord.gg/davos-protocol-978896437612019722",
            "https://medium.com/@Davos_Protocol",
            "https://linkedin.com/company/davosprotocol"
          ]
        },
        "description": "Davos bridge is a multi-chain token bridge that allows users to transfer DUSD between different blockchains. It burns the original tokens and mints new ones on the destination chain."
      },
      "config": {
        "escrows": [
          {
            "address": "0x6DeF4570251E1f435E121b3Ee47174496D851C99",
            "sinceTimestamp": "1685433000",
            "tokens": [],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "A withdrawal requires a proof signed by an admin-defined consensus EOA.",
          "sentiment": "bad"
        }
      },
      "technology": {
        "destination": [
          "Arbitrum",
          "Avalanche",
          "Optimism",
          "Polygon",
          "Linea",
          "BNB Chain",
          "Polygon zkEVM"
        ]
      }
    },
    {
      "type": "bridge",
      "id": "eclipse",
      "createdAt": "1725359142",
      "display": {
        "name": "Eclipse",
        "slug": "eclipse",
        "description": "Eclipse is a sidechain powered by the Solana Virtual Machine (SVM).",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://eclipse.xyz/"],
          "apps": [],
          "documentation": ["https://docs.eclipse.xyz/"],
          "explorers": ["https://explorer.eclipse.xyz/"],
          "repositories": ["https://github.com/Eclipse-Laboratories-Inc"],
          "socialMedia": [
            "https://twitter.com/eclipsefnd",
            "https://discord.gg/eclipse-labs",
            "https://mirror.xyz/eclipsemainnet.eth"
          ]
        }
      },
      "config": {
        "escrows": [
          {
            "chain": "ethereum",
            "address": "0xD7E4b67E735733aC98a88F13d087D8aac670E644",
            "sinceTimestamp": "1722140987",
            "tokens": ["ETH"]
          }
        ]
      },
      "technology": {
        "destination": ["Eclipse"],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "description": "Eclipse implements a custom deposit-only bridge. There is no functionality to withdraw assets back to Ethereum.",
          "references": [
            {
              "text": "EtherBridge.sol - Etherscan source code, deposit() function, no withdraw function",
              "href": "https://etherscan.io/address/0x338017e0f208b4eaf8cd4bbdc8bdabefd0e39be9#code"
            },
            {
              "text": "Mailbox.sol - Etherscan source code, receiveMessage() function calls EtherBridge",
              "href": "https://etherscan.io/address/0x4cef0fa54dc06ce0ea198dab2f57d28a9dee712b#code"
            }
          ],
          "risks": []
        },
        "validation": {
          "name": "Third party validation",
          "description": "Deposits are processed by the bridge operators on the Eclipse side. There is no mechanism to send messages back to Ethereum.",
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "the bridge operators decide not to mint tokens after observing a deposit.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "the Treasury owner decides to transfer the funds locked on L1."
            }
          ],
          "references": [
            {
              "text": "Treasury.sol - Etherscan source code, emergencyWithdraw() function",
              "href": "https://etherscan.io/address/0xa8e15d2b1bf6b0fd3bc9ead06323c0730b67f8d4#code"
            }
          ]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Centralized operators control the bridge.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Contracts are instantly upgradable.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "EtherBridge",
            "address": "0x83cB71D80078bf670b3EfeC6AD9E5E6407cD0fd1",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x0000000000000000000000000000000000000000"],
              "implementations": ["0x338017E0f208b4EAF8Cd4BbDc8bdabEFd0e39bE9"]
            },
            "chain": "ethereum",
            "description": "Entry point to deposit ETH. It is registered as a module in the Mailbox contract."
          },
          {
            "name": "Mailbox",
            "address": "0xb23B2492f7A9631104A5877F7FFA00633660968d",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x0000000000000000000000000000000000000000"],
              "implementations": ["0x4ceF0fA54dC06CE0eA198DAb2F57D28A9deE712B"]
            },
            "chain": "ethereum",
            "description": "Contract receiving messages from registered modules to send to Eclipse. It doesn’t have any functionality to send messages back to Ethereum."
          },
          {
            "name": "Treasury",
            "address": "0xD7E4b67E735733aC98a88F13d087D8aac670E644",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x7B2c1CbB33c53c3C6a695e36096AD2cfCE1c0efC"],
              "implementations": ["0xa8E15d2B1bf6B0Fd3Bc9Ead06323c0730b67f8d4"]
            },
            "chain": "ethereum",
            "description": "Holds the funds locked on Ethereum."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "AuthorityMultisig",
          "description": "This is a Gnosis Safe with 2 / 4 threshold.  Can pause and upgrade the EtherBridge and Mailbox contracts.",
          "accounts": [
            {
              "address": "0x4720342419C1D316B948690d12C86D5b485C64E0",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x950815d0e585095B06111CD101440fb1E95AB2a5",
              "type": "EOA"
            },
            {
              "address": "0x757210F15AB48f0F8d328984fc321CfA6BB5BFc2",
              "type": "EOA"
            },
            {
              "address": "0xF48C91ca69Aef5ac47E430c3E90DEE1694d246FA",
              "type": "EOA"
            },
            {
              "address": "0xAFa49B46301BaaD9152dD5aF0C05245B0FA58695",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "TreasuryOwner",
          "description": "This is a Gnosis Safe with 3 / 5 threshold.  Can upgrade and transfer funds from the Treasury.",
          "accounts": [
            {
              "address": "0x7B2c1CbB33c53c3C6a695e36096AD2cfCE1c0efC",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xd0615B1D3F24f691153C076d45104eEd3eF8cDb5",
              "type": "EOA"
            },
            {
              "address": "0x0706Ffc1722D53a85ba90f32807880ccee968Fed",
              "type": "MultiSig"
            },
            {
              "address": "0xDecF20b9213f5d7f16196420377d37ef5f8F9686",
              "type": "EOA"
            },
            {
              "address": "0xEe058D13A0c25a1ce2f68eb02dE4CE7E621982D9",
              "type": "EOA"
            },
            {
              "address": "0x3392fd462d9710Fbf3A5703818b9920C119DC080",
              "type": "EOA"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "gravity",
      "createdAt": "1662628329",
      "display": {
        "name": "Gravity",
        "slug": "gravity",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://gravitybridge.net/"],
          "explorers": ["https://mintscan.io/gravity-bridge"],
          "apps": [
            "https://spacestation.zone/",
            "https://bridge.blockscape.network/"
          ],
          "repositories": ["https://github.com/Gravity-Bridge"],
          "documentation": [
            "https://gravitybridge.net/faq",
            "https://github.com/Gravity-Bridge/Gravity-Docs"
          ],
          "socialMedia": [
            "https://twitter.com/gravity_bridge",
            "https://discord.gg/d3DshmHpXA"
          ]
        },
        "description": "Gravity bridge is designed to connect Cosmos and Ethereum ecosystems together. The bridge is using custom blockchain called Cosmos Gravity Bridge for cross-chain message passing."
      },
      "config": {
        "escrows": [
          {
            "address": "0xa4108aA1Ec4967F8b52220a4f7e94A8201F2D906",
            "sinceTimestamp": "1639416372",
            "tokens": ["USDC", "WETH", "DAI", "USDT", "WBTC"],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be approved by 2/3 of the validator set operating in Cosmos Gravity Bridge blockchain.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      },
      "technology": {
        "destination": ["Cosmos"],
        "canonical": false,
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Gravity is a Token Bridge that locks tokens in the escrow contracts on Ethereum and mints tokens on Cosmos. The cross-chain communication is achieved using Gravity Bridge Blockchain with validators watching Ethereum network for events and minting tokens on Cosmos. Validators also approve transfers back to Ethereum via message signing.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "Transfer events on Ethereum are being watched by Validators and when they happen tokens are minted on Cosmos. When bridging back to Ethereum the message is signed by the previously mentioned blockchain and relayed to the Ethereum network where it is checked. If everything is correct the funds are released and send back to the user.",
          "references": [],
          "risks": []
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Tokens transferred end up as wrapped ERC20 proxies.",
          "references": [],
          "risks": [],
          "isIncomplete": true
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "Gravity",
            "address": "0xa4108aA1Ec4967F8b52220a4f7e94A8201F2D906",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract holding locked assets and handling user interactions for transfers and withdrawals."
          }
        ],
        "risks": [],
        "isIncomplete": true
      },
      "permissions": [
        {
          "name": "Cosmos Validators",
          "description": "Control Gravity contract on Ethereum, funds cannot be transfer without the signature of at least 2/3 of the validators set.",
          "accounts": []
        }
      ]
    },
    {
      "type": "bridge",
      "id": "harmony",
      "createdAt": "1662628329",
      "display": {
        "name": "Harmony",
        "slug": "harmony",
        "description": "Externally Validated Token Bridge secured by a multisig.",
        "category": "Token Bridge",
        "links": { "websites": ["https://bridge.harmony.one/erc20"] }
      },
      "config": {
        "escrows": [
          {
            "address": "0xF9Fb1c508Ff49F78b60d3A96dea99Fa5d7F3A8A6",
            "sinceTimestamp": "1610602801",
            "tokens": ["ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xfD53b1B4AF84D59B20bF2C20CA89a6BeeAa2c628",
            "sinceTimestamp": "1602456041",
            "tokens": ["BUSD"],
            "chain": "ethereum"
          },
          {
            "address": "0x2dCCDB493827E15a5dC8f8b72147E6c4A5620857",
            "sinceTimestamp": "1602456188",
            "tokens": [
              "USDC",
              "USDT",
              "WBTC",
              "DAI",
              "FRAX",
              "FXS",
              "SUSHI",
              "AAVE",
              "CRV",
              "WETH",
              "MATIC"
            ],
            "chain": "ethereum"
          }
        ]
      },
      "technology": { "destination": ["Harmony"] },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "2/5 MultiSig",
          "sentiment": "bad"
        }
      },
      "milestones": [
        {
          "name": "Compromised multisig steals funds",
          "date": "2022-06-24T00:00:00.00Z",
          "link": "https://rekt.news/harmony-rekt/",
          "type": "general"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "chainport",
      "createdAt": "1696938823",
      "display": {
        "name": "Chainport",
        "slug": "chainport",
        "description": "ChainPort Cross-Chain Bridge: Port across 15+ Chains.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://chainport.io/"],
          "documentation": ["https://docs.chainport.io/"],
          "socialMedia": ["https://twitter.com/chain_port"]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x7B8FDfCf79E72a9a8e656958647D139C0e16EA19",
            "newVersion": true,
            "sinceTimestamp": "1627899254",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x7B8FDfCf79E72a9a8e656958647D139C0e16EA19",
              "upgradeability": {
                "proxyType": "gnosis safe",
                "admins": [],
                "implementations": [
                  "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
                ],
                "immutable": false
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x450aD18B4442ce2972Af2a7A12439984db4Afaf9",
            "newVersion": true,
            "sinceTimestamp": "1641296925",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x450aD18B4442ce2972Af2a7A12439984db4Afaf9",
              "upgradeability": {
                "proxyType": "gnosis safe",
                "admins": [],
                "implementations": [
                  "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
                ],
                "immutable": false
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xD2238E8c085E5059F8DFC52256530210bc7250F6",
            "sinceTimestamp": "1626181305",
            "tokens": "*",
            "chain": "ethereum"
          },
          {
            "address": "0x873089bC765a1C0AFAd48e34fCd305d17D81be87",
            "sinceTimestamp": "1636903885",
            "tokens": "*",
            "chain": "ethereum"
          },
          {
            "address": "0x763A0CA93AF05adE98A52dc1E5B936b89bF8b89a",
            "newVersion": true,
            "sinceTimestamp": "1626949825",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x763A0CA93AF05adE98A52dc1E5B936b89bF8b89a",
              "upgradeability": {
                "proxyType": "EIP1967 proxy",
                "admins": ["0x63D572d781eD8D18d823462aa2a4D51d7Ac4F29F"],
                "implementations": [
                  "0x118cbd7a4769846AD4928598D1f805a509Cc8c0d"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x894107B7b5051409f279E8300774B2f62Febe057",
            "tokens": "*",
            "sinceTimestamp": "1626181305",
            "chain": "ethereum"
          },
          {
            "address": "0xfE83475880d3592833249BAAacfEC5eD51E29D82",
            "tokens": "*",
            "sinceTimestamp": "1626181305",
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers are controlled by the Chainport Congress.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "The code that secures the system can be changed arbitrarily and without notice.",
          "sentiment": "bad"
        }
      },
      "technology": {
        "destination": [
          "Optimism",
          "Arbitrum",
          "Polygon",
          "BSC",
          "Avax",
          "Ethereum",
          "Fuse",
          "Fantom",
          "Moonriver",
          "Aurora",
          "Cardano",
          "Dogechain",
          "Telos",
          "Milkomeda",
          "Conflux",
          "Base",
          "Meld",
          "opBNB"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Funds are moved between escrows and chains using third party actors.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be frozen if",
              "text": "third party actors decide to not relay selected messages between chains.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "third party actors relay a fake messages."
            }
          ]
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "Vault6",
            "address": "0x763A0CA93AF05adE98A52dc1E5B936b89bF8b89a",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x63D572d781eD8D18d823462aa2a4D51d7Ac4F29F"],
              "implementations": ["0x118cbd7a4769846AD4928598D1f805a509Cc8c0d"]
            },
            "chain": "ethereum",
            "description": "Escrow controlled by the Chainport Congress."
          },
          {
            "name": "ChainportCongress",
            "address": "0xB6b4C7aC240b1f176c5589d064733066a83884a1",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contains the logic to create proposal, vote and execute them."
          },
          {
            "name": "ChainportCongressMembersRegistry",
            "address": "0x1DeE7Be5415F6Fdcc8515cA06AE8d9aFb550aBCa",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Registry of the Chainport Congress members. Acts as a 2-of-3 multisig."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "name": "Congress members",
          "accounts": [
            {
              "address": "0x894107B7b5051409f279E8300774B2f62Febe057",
              "type": "EOA"
            },
            {
              "address": "0x00040D1445683B7Ef71bf2D94CB7Fe2224Eba8d8",
              "type": "EOA"
            },
            {
              "address": "0xbDCaAa95202A56D0c688CEE2E1260fAB2F6e4fF7",
              "type": "EOA"
            }
          ],
          "description": "Members of the Chainport Congress."
        },
        {
          "name": "MultisigVault1",
          "description": "This is a Gnosis Safe with 2 / 3 threshold.  Vault 1.",
          "accounts": [
            {
              "address": "0x7B8FDfCf79E72a9a8e656958647D139C0e16EA19",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xbDCaAa95202A56D0c688CEE2E1260fAB2F6e4fF7",
              "type": "EOA"
            },
            {
              "address": "0x894107B7b5051409f279E8300774B2f62Febe057",
              "type": "EOA"
            },
            {
              "address": "0x00040D1445683B7Ef71bf2D94CB7Fe2224Eba8d8",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "MultisigVault2",
          "description": "This is a Gnosis Safe with 2 / 3 threshold.  Vault 2.",
          "accounts": [
            {
              "address": "0x450aD18B4442ce2972Af2a7A12439984db4Afaf9",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x894107B7b5051409f279E8300774B2f62Febe057",
              "type": "EOA"
            },
            {
              "address": "0xbDCaAa95202A56D0c688CEE2E1260fAB2F6e4fF7",
              "type": "EOA"
            },
            {
              "address": "0xD2238E8c085E5059F8DFC52256530210bc7250F6",
              "type": "EOA"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "hop",
      "createdAt": "1662628329",
      "display": {
        "name": "Hop",
        "slug": "hop",
        "category": "Liquidity Network",
        "links": {
          "websites": ["https://hop.exchange/"],
          "repositories": ["https://github.com/hop-protocol"],
          "socialMedia": [
            "https://twitter.com/HopProtocol",
            "https://medium.com/hop-protocol"
          ]
        },
        "description": "Hop is a Liquidity Network that facilitates fast withdrawals and L2-->L2 token transfer via optimistic message passing."
      },
      "config": {
        "escrows": [
          {
            "address": "0x3666f603Cc164936C1b87e207F36BEBa4AC5f18a",
            "sinceTimestamp": "1623907245",
            "tokens": ["USDC"],
            "chain": "ethereum"
          },
          {
            "address": "0x3d4Cc8A61c7528Fd86C55cfe061a78dCBA48EDd1",
            "sinceTimestamp": "1631654328",
            "tokens": ["DAI"],
            "chain": "ethereum"
          },
          {
            "address": "0x3E4a3a4796d16c0Cd582C382691998f7c06420B6",
            "sinceTimestamp": "1626739308",
            "tokens": ["USDT"],
            "chain": "ethereum"
          },
          {
            "address": "0xb8901acB165ed027E32754E0FFe830802919727f",
            "sinceTimestamp": "1633066189",
            "tokens": ["ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x22B1Cbb8D98a01a3B71D034BB899775A76Eb1cc2",
            "sinceTimestamp": "1628225875",
            "tokens": ["MATIC"],
            "chain": "ethereum"
          },
          {
            "address": "0x914f986a44AcB623A277d6Bd17368171FCbe4273",
            "sinceTimestamp": "1663897247",
            "tokens": ["HOP"],
            "chain": "ethereum"
          },
          {
            "address": "0x893246FACF345c99e4235E5A7bbEE7404c988b96",
            "sinceTimestamp": "1664398079",
            "tokens": ["SNX"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": ["Polygon", "Gnosis", "Optimism", "Arbitrum"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Hop is a Liquidity Network with ability to facilitate fast transfers using Ethereum as a settlement layer. It uses a technical hToken and AMM between hToken and canonical token on         a destination chain to facilitate token transfers. Users are isolated from individual risks related to destination chains.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Optimistic Validation with fallback to native bridge",
          "description": "Messages announcing token withdrawals are sent from the source to the destination chain using native AMB (Arbitrary Messaging Bridge) to Ethereum for a given chain source chain. Depending on a chain, these        can be slow, e.g. 7-days for Optimistic Rollups. Designated actors called Bonders \"pre-announce\" the incoming transfer of a message bundle to the destination chain. For 24 hours anyone        can challenge the validity of the message bundle. If left unchallenged, the bundle is assumed to be valid and Bonder can remove the collateral which make all withdrawals        from this bundle to settle against bridge funds. If challenged, the Bonder's collateral is locked in a bridge until the native message arrives and challenge is resolved.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "AMB of the destination chain censors the message.",
              "isCritical": false,
              "_ignoreTextFormatting": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "Bonder submits invalid message bundle and is left unchallenged for 24 hours.",
              "isCritical": false,
              "_ignoreTextFormatting": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens are upgradeable",
          "description": "Tokens transferred end up as \"representation tokens\" some of them may be upgradable.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Optimistically",
          "description": "Messages are relayed to the destination chain and assumed to be correct unless challenged within the 24 hour fraud proof window.",
          "sentiment": "warning"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "The bridge uses a technical hToken that is minted for Liquidity Providers. The hToken is then swapped for  canonical tokens on the destination chain",
          "sentiment": "good"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "USDC Bridge",
            "address": "0x3666f603Cc164936C1b87e207F36BEBa4AC5f18a",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "DAI Bridge",
            "address": "0x3d4Cc8A61c7528Fd86C55cfe061a78dCBA48EDd1",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "USDT Bridge",
            "address": "0x3E4a3a4796d16c0Cd582C382691998f7c06420B6",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "ETH Bridge",
            "address": "0xb8901acB165ed027E32754E0FFe830802919727f",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "MATIC Bridge",
            "address": "0x22B1Cbb8D98a01a3B71D034BB899775A76Eb1cc2",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "WBTC Bridge",
            "address": "0xb98454270065A31D71Bf635F6F7Ee6A518dFb849",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "SNX Bridge",
            "address": "0x893246FACF345c99e4235E5A7bbEE7404c988b96",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "HOP Bridge",
            "address": "0x914f986a44AcB623A277d6Bd17368171FCbe4273",
            "upgradeability": null,
            "chain": "ethereum"
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "name": "Hop Multisig",
          "description": "This is a Gnosis Safe with 2 / 3 threshold.  Sets bridge parameters including bond size, challenge period length, etc... Manages whitelist of Bonders.",
          "accounts": [
            {
              "address": "0x1ec078551A5ac8F0f51fAc57Ffc48Ea7d9A86E9d",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x9f8d2dafE9978268aC7c67966B366d6d55e97f07",
              "type": "EOA"
            },
            {
              "address": "0x404c2184a4027b0092C5877BC4599099cd63E62D",
              "type": "EOA"
            },
            {
              "address": "0xEb34e93f90fa76c865112F4596eAb65D6F0d2F62",
              "type": "EOA"
            }
          ]
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Hop protocol deep dive",
          "url": "https://li.fi/knowledge-hub/hop-a-deep-dive/",
          "thumbnail": "lifi-01.jpg"
        },
        {
          "title": "How Hop protocol works?",
          "url": "https://twitter.com/bkiepuszewski/status/1437320613358673922",
          "thumbnail": "l2beat-03.jpg"
        },
        {
          "title": "How HTLC bridge works?",
          "url": "https://twitter.com/bkiepuszewski/status/1437031523455229964",
          "thumbnail": "l2beat-04.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "hyphen",
      "createdAt": "1662628329",
      "display": {
        "name": "Hyphen",
        "slug": "hyphen",
        "category": "Liquidity Network",
        "links": {
          "websites": ["https://hyphen.biconomy.io/"],
          "documentation": [
            "https://docs-gasless.biconomy.io/products/hyphen-instant-cross-chain-transfers"
          ],
          "explorers": ["https://hyphen-stats.biconomy.io/"],
          "repositories": ["https://github.com/bcnmy/hyphen-sdk"],
          "socialMedia": [
            "https://discord.gg/yuxXPqu82F",
            "https://twitter.com/biconomy",
            "https://t.me/biconomy",
            "https://medium.com/biconomy"
          ]
        },
        "description": "Hyphen Bridge is a part of the Biconomy chain and ecosystem. It's a cross-chain bridge that uses liquidity pools to perform token swaps."
      },
      "config": {
        "associatedTokens": ["BICO"],
        "escrows": [
          {
            "address": "0x2A5c2568b10A0E826BfA892Cf21BA7218310180b",
            "sinceTimestamp": "1647128990",
            "tokens": ["ETH", "USDC", "USDT", "MATIC", "BICO"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": [
          "Polygon",
          "Avalanche",
          "Optimism",
          "BNB",
          "Arbitrum",
          "Fantom"
        ],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "description": "Hyphen Bridge has LiquidityPool contracts deployed on supported chains and allows anyone to become liquidity provider within predefined limits. Cross-chain token transfer starts by a user depositing tokens to a LiquidityPool contract on the source chain with information of the requested destination chain. Funds (minus fees) are released to the user from a LiquidityPool on the destination chain via a call by an Executor, currently one of four EOAs. Separate off-chain entities called Watch Towers are responsible for watching for user deposits and notifying Executors.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Validation Method",
          "description": "Funds can be released from LiquidityPool to any user by any Executor (currently 1 of 4 EOAs on Ethereum). User needs to trust that Executor performs this action only after validating deposit on the source chain. There are token- and blockchain-dependent limits on maximal single withdrawals.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "the Watch Towers ignore deposits from selected users.",
              "isCritical": true
            },
            {
              "category": "Users can be censored if",
              "text": "the Executors don't act on deposits from selected users.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "an Executor asks LiquidityPool to release funds to a user that hasn't made any corresponding deposit on other chain.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "there's insufficient liquidity of requested token in the destination LiquidityPool."
            },
            {
              "category": "Funds can be frozen if",
              "text": "one of the contracts is paused by it's owner."
            }
          ],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Withdrawals are validated by an EOA.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Contracts can be upgraded.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "LiquidityPool",
            "address": "0x2A5c2568b10A0E826BfA892Cf21BA7218310180b",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x13a4cC0750296bB72Eb0006febec306551A4f472"],
              "implementations": ["0x4906b8E690EB1E09Fec924422452d1105D59d042"]
            },
            "chain": "ethereum"
          },
          {
            "name": "TokenManager",
            "address": "0xe6dbf5861ed9828594Af4C6ea6356411c3A0B168",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x13a4cC0750296bB72Eb0006febec306551A4f472"],
              "implementations": ["0x79E559AC5b499A5676e28f0074e29763F6c2A27e"]
            },
            "chain": "ethereum",
            "description": "Configures limits and other aspects of supported assets."
          },
          {
            "name": "ExecutorManager",
            "address": "0xbd761D917fB77381B4398Bda89C7F0d9A2BD1399",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Manages a list of addresses with Executor role."
          },
          {
            "name": "LiquidityProviders",
            "address": "0xebaB24F13de55789eC1F3fFe99A285754e15F7b9",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x13a4cC0750296bB72Eb0006febec306551A4f472"],
              "implementations": ["0x38391eA26F9EeE3ab81DE3C7eE9e168da5149103"]
            },
            "chain": "ethereum",
            "description": "Liquidity pool logic (not escrow - funds are sent to LiquidityPool)."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "ProxyAdmin owner",
          "description": "Can upgrade implementation of LiquidityPool, TokenManager and LiquidityProviders.",
          "accounts": [
            {
              "address": "0x129443cA2a9Dec2020808a2868b38dDA457eaCC7",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Owner of LiquidityPool, TokenManager, LiquidityProviders and ExecutorManager",
          "description": "Can pause contracts, change configuration and change proxy admin or update Executor list.",
          "accounts": [
            {
              "address": "0xD76b82204BE75Ab9610B04CF27c4F4a34291D5E6",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Executors",
          "description": "Executor is able to release funds from LiquidityPool.",
          "accounts": [
            {
              "address": "0xEEFD474e80B6CAEA43F212D964409c473684E3fe",
              "type": "EOA"
            },
            {
              "address": "0x1439eDA7f9A911b9120E9A0DAfb60eAE317F7685",
              "type": "EOA"
            },
            {
              "address": "0x4Fb5dF81b644e3Bd5Ad0BA07DCE2B67559C764E0",
              "type": "EOA"
            },
            {
              "address": "0x600Be30999eB256F2BEf451b69950f7dC84aC6b1",
              "type": "EOA"
            }
          ]
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Hyphen deep dive",
          "url": "https://li.fi/knowledge-hub/biconomys-hyphen-a-deep-dive/",
          "thumbnail": "lifi-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "immutablezkevm",
      "createdAt": "1707318380",
      "display": {
        "name": "Immutable zkEVM",
        "slug": "immutablezkevm",
        "description": "Immutable zkEVM is a sidechain focused on gaming and powered by Polygon stack. It plans to eventually transition to a ZK Rollup.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://immutable.com/products/immutable-zkevm"],
          "apps": [],
          "documentation": ["https://docs.x.immutable.com/docs/zkEVM/overview"],
          "explorers": [],
          "repositories": [],
          "socialMedia": ["https://twitter.com/Immutable"]
        }
      },
      "config": {
        "associatedTokens": ["IMX"],
        "escrows": [
          {
            "address": "0xBa5E35E26Ae59c7aea6F029B68c6460De2d13eB6",
            "sinceTimestamp": "1702962563",
            "tokens": ["IMX", "USDC", "ETH", "USDT", "GOG"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": ["Immutable zkEVM"],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "description": "Immutable zkEVM bridge makes use of Axelar network to transfer assets between Ethereum and Immutable zkEVM. A deposit starts by a user depositing tokens on the Bridge contract and then the tokens are minted on the destination chain.\n\nWithdrawals to Ethereum can be delayed by a predefined time with a flow rate mechanism that controls outflows of the bridge escrow. The ProxyAdmin or an address with the rate_control role can define so-called buckets for each token: Each bucket has a capacity and a refill rate. All withdrawals that exceed the tokens bucket capacity trigger the withdrawal queue, which delays subsequent withdrawals of *any* of the bridges' assets for a time defined in withdrawalDelay (currently 1d).",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Validators running PoS consensus",
          "description": "Messages are verified by the Validators running the Axelar network which, technically, is a Cosmos chain. As in any standard Cosmos chain, Validators are bonded by staking tokens and can be slashed for misbehavior.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators on Axelar decide to not mint tokens after observing an event on Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators decide to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a withdraw request that wasn't originated on the source chain.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens are not upgradable",
          "description": "Tokens on the destination end up as wrapped ERC20 proxies that are not upgradable, using EIP-1167.",
          "references": [],
          "risks": []
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "2/3 Validators' Stake",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "2/3 Validators' Stake",
          "description": "Contracts are upgradable by the same Validators that validate message transfers.",
          "sentiment": "warning"
        }
      },
      "permissions": [
        {
          "name": "OwnerMultisig",
          "description": "This is a Gnosis Safe with 4 / 6 threshold.  Multisig controlling the ProxyAdmin, potentially stealing all locked funds.",
          "accounts": [
            {
              "address": "0xD2C37fC6fD89563187f3679304975655e448D192",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x37AC4a9Bf184aa1130016525631f3Daec11f7b26",
              "type": "EOA"
            },
            {
              "address": "0x3d395f623D8954d71132F5caC10778CA275806e0",
              "type": "EOA"
            },
            {
              "address": "0xdb6c271060571A96A62E3947E373395C89f765Ba",
              "type": "EOA"
            },
            {
              "address": "0xA28A84676E3Cec39e6F1D06CD0EEF6cAAa2F7f7b",
              "type": "EOA"
            },
            {
              "address": "0x296A19A4e87F5824DBE8DEd53415A4704538bB30",
              "type": "EOA"
            },
            {
              "address": "0xbD8Dc294478ec4dAd9f1b4596bf275f4d0309817",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "ProxyAdmin",
          "accounts": [
            {
              "address": "0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8",
              "type": "Contract"
            }
          ],
          "chain": "ethereum",
          "description": "Contract allowed to upgrade the Bridge, its flow rate control and the Axelar adaptor."
        }
      ],
      "contracts": {
        "addresses": [
          {
            "name": "Bridge",
            "address": "0xBa5E35E26Ae59c7aea6F029B68c6460De2d13eB6",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8"],
              "implementations": ["0x177EaFe0f1F3359375B1728dae0530a75C83E154"]
            },
            "chain": "ethereum",
            "description": "Main escrow for tokens.",
            "upgradableBy": ["ProxyAdmin"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "RootAxelarBridgeAdaptor",
            "address": "0x4f49B53928A71E553bB1B0F66a5BcB54Fd4E8932",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8"],
              "implementations": ["0xE2E91C1Ae2873720C3b975a8034e887A35323345"]
            },
            "chain": "ethereum",
            "description": "Axelar adaptor contract used by the bridge.",
            "upgradableBy": ["ProxyAdmin"],
            "upgradeDelay": "No delay"
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      }
    },
    {
      "type": "bridge",
      "id": "lzomnichain",
      "createdAt": "1677513767",
      "display": {
        "name": "Omnichain (LayerZero)",
        "slug": "omnichain",
        "warning": "The security parameters of each individual token must be individually assessed, and can be changed by the developers. Omnichain tokens are in the early stages of development, use at your own risk.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://layerzero.network/"],
          "repositories": [
            "https://github.com/LayerZero-Labs/",
            "https://github.com/stargate-protocol",
            "https://github.com/harmony-one/layerzero-bridge.frontend"
          ],
          "documentation": [
            "https://layerzero.gitbook.io/docs/technical-reference/mainnet/supported-chain-ids"
          ],
          "socialMedia": ["https://twitter.com/LayerZero_Labs"]
        },
        "description": "This page gathers Omnichain Tokens built on top of LayerZero AMB protocol that have a market cap over 100k USD.",
        "detailedDescription": "Currently they are: STONE, STG, WAGMI, Wrapped EURA, Wrapped LINK, Wrapped USDC and Wrapped BOBA. Risk associated with using any of them varies, depending on the technological decisions made by the developers.       LayerZero as a framework to build omnichain application does not provide any base security as applications can define their own security settings,       however applications and tokens choosing the default security settings will leverage security provided by default Oracle, Relayer, Verification Library and Proof Library.       Default settings are managed by LayerZero team."
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be independently confirmed by oracle attesting to source chain checkpoints and Relayer providing proof of the transfer event.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Omnichain tokens can be individually upgradable and it's security assumptions must be individually assessed for each individual token.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": ["Various"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Omnichain tokens are tokenized Token Bridges. Usually, one chain is designated as main and acts as an token escrow. In this case, transfers from the main chain are done using typical lock-mint model. Transfers between        other (non-main) chains are made using burn-mint model. The implementation details may vary between each individual omnichain token and must be individually assessed.",
          "risks": [],
          "references": []
        },
        "validation": {
          "name": "Oracles and Relayers",
          "description": "Omnichain tokens are built on top of LayerZero protocol. LayerZero relies on Oracles to periodically submit source chain block hashes to the destination chain.        Once block hash is submitted, Relayers can provide the proof for the transfers. The Oracle and Relayer used can be either default LayerZero contracts, or custom built by the token developers.",
          "references": [
            {
              "text": "LayerZero security model analysis",
              "href": "https://medium.com/l2beat/circumventing-layer-zero-5e9f652a5d3e"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "oracles or relayers fail to facilitate the transfer.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "oracles and relayers collude to submit fraudulent block hash and relay fraudulent transfer.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "omnichain token owner changes Oracle/Relayer pair for their own.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x7122985656e38BDC0302Db86685bb972b145bD3C",
            "sinceTimestamp": "1700658000",
            "tokens": ["STONE"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "STONE Token" },
            "chain": "ethereum"
          },
          {
            "address": "0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6",
            "sinceTimestamp": "1647504559",
            "tokens": ["STG"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "STG Token" },
            "chain": "ethereum"
          },
          {
            "address": "0x92CC36D66e9d739D50673d1f27929a371FB83a67",
            "sinceTimestamp": "1695376800",
            "tokens": ["WAGMI"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "WAGMI Token" },
            "chain": "ethereum"
          },
          {
            "address": "0x4Fa745FCCC04555F2AFA8874cd23961636CdF982",
            "sinceTimestamp": "1657699079",
            "tokens": ["EURA"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "Wrapped EURA Token" },
            "chain": "ethereum"
          },
          {
            "address": "0xEe381e476b4335B8584A2026f3E845edaC2c69de",
            "sinceTimestamp": "1663802015",
            "tokens": ["LINK"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "Wrapped LINK Token" },
            "chain": "ethereum"
          },
          {
            "address": "0x4F52b41a778761bd2EEa5b7b7ed8cBDAA02cEF3E",
            "sinceTimestamp": "1665428735",
            "tokens": ["USDC"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "Wrapped USDC Token" },
            "chain": "ethereum"
          },
          {
            "address": "0x1A36E24D61BC1aDa68C21C2Da1aD53EaB8E03e55",
            "sinceTimestamp": "1663003197",
            "tokens": ["BOBA"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "Wrapped BOBA Token" },
            "chain": "ethereum"
          },
          {
            "address": "0xB0003eB166654f7e57c0463F8D1a438eB238c490",
            "sinceTimestamp": "1661794745",
            "tokens": ["BOBA"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "Wrapped BOBA Token" },
            "chain": "ethereum"
          },
          {
            "address": "0x6F537839714761388B6d7ED61Bc09579d5dA2F41",
            "sinceTimestamp": "1660932033",
            "tokens": ["BOBA"],
            "newVersion": true,
            "useContractName": true,
            "contract": { "name": "Wrapped BOBA Token" },
            "chain": "ethereum"
          }
        ]
      },
      "contracts": {
        "addresses": [
          {
            "name": "TSS Oracle",
            "address": "0x5a54fe5234E811466D5366846283323c954310B2",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x967bAf657ec4d4b1cb00b06f7Cc6E8BA604e3AC8"],
              "implementations": ["0x3eEA8d627ab6983fFFc7027ee623Fd7699343fc1"]
            },
            "chain": "ethereum",
            "description": "Contract used to submit source chain block hashes. One of the default Oracles."
          },
          {
            "name": "Google Cloud Oracle",
            "address": "0xD56e4eAb23cb81f43168F9F45211Eb027b9aC7cc",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract used to submit source chain block hashes. One of the default Oracles."
          },
          {
            "name": "LayerZero Relayer",
            "address": "0x902F09715B6303d4173037652FA7377e5b98089E",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA658742d33ebd2ce2F0bdFf73515Aa797Fd161D9"],
              "implementations": ["0xB830a5AfCBEBb936c30C607a18BbbA9f5B0a592f"]
            },
            "chain": "ethereum",
            "description": "Contract used to provide the merkle proof for the transfers on source chains."
          },
          {
            "multipleAddresses": [
              "0x462F7eC57C6492B983a8C8322B4369a7f149B859",
              "0x07245eEa05826F5984c7c3C8F478b04892e4df89"
            ],
            "name": "Default LayerZero Inbound Proof Libraries",
            "description": "Contracts used to validate messages coming from source chains."
          },
          {
            "name": "Endpoint",
            "address": "0x66A71Dcef29A0fFBDBE3c6a460a3B5BC225Cd675",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract used for cross-chain messaging."
          },
          {
            "name": "UltraLightNodeV2",
            "address": "0x4D73AdB72bC3DD368966edD0f0b2148401A178E2",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Default send and receive library."
          },
          {
            "name": "TreasuryV2",
            "address": "0x3773E1E9Deb273fCdf9f80bc88bB387B1e6Ce34d",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract responsible for fee mechanism."
          },
          {
            "name": "NonceContract",
            "address": "0x5B905fE05F81F3a8ad8B28C6E17779CFAbf76068",
            "upgradeability": null,
            "chain": "ethereum"
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "the source code of unverified contracts contains malicious code.",
            "isCritical": true
          },
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ],
        "isIncomplete": true
      },
      "permissions": [
        {
          "accounts": [
            {
              "address": "0x902F09715B6303d4173037652FA7377e5b98089E",
              "type": "Contract"
            }
          ],
          "name": "Default Relayer",
          "description": "Contract authorized to relay messages and - as a result - withdraw funds from the bridge."
        },
        {
          "accounts": [
            {
              "address": "0xD56e4eAb23cb81f43168F9F45211Eb027b9aC7cc",
              "type": "Contract"
            },
            {
              "address": "0x5a54fe5234E811466D5366846283323c954310B2",
              "type": "Contract"
            }
          ],
          "name": "Default Oracles",
          "description": "Contracts that submit source chain block hashes to the destination chain."
        },
        {
          "name": "LayerZero Multisig",
          "description": "This is a Gnosis Safe with 2 / 5 threshold.  Contract authorize to update default security parameters (Relayer, Oracle, Libraries). Owner of the Endpoint and UltraLightNodeV2 contract.",
          "accounts": [
            {
              "address": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327",
              "type": "EOA"
            },
            {
              "address": "0xe095F2590eF1Ab39601445025847Ed8E4B40D687",
              "type": "EOA"
            },
            {
              "address": "0xBb6633cc267951E938F9B6421E4F54aa5b2c1936",
              "type": "EOA"
            },
            {
              "address": "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
              "type": "EOA"
            },
            {
              "address": "0x67FC8c432448f9a8d541C17579EF7a142378d5aD",
              "type": "EOA"
            }
          ]
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Security models: isolated vs shared",
          "url": "https://medium.com/l2beat/circumventing-layer-zero-5e9f652a5d3e",
          "thumbnail": "l2beat-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "layerzerov2oft",
      "createdAt": "1718891395",
      "display": {
        "name": "LayerZero v2 OFTs",
        "slug": "layerzerov2oft",
        "warning": "The security parameters of each Omnichain Fungible Token must be individually assessed, and can be changed by their developers.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://layerzero.network/"],
          "repositories": [
            "https://github.com/LayerZero-Labs/",
            "https://github.com/stargate-protocol"
          ],
          "documentation": [
            "https://docs.layerzero.network/v2/developers/evm/oft/quickstart"
          ],
          "socialMedia": [
            "https://x.com/layerzero_core",
            "https://t.me/joinchat/VcqxYkStIDsyN2Rh",
            "https://discord.com/invite/ktbvm8Nkcr",
            "https://medium.com/layerzero-official"
          ]
        },
        "description": "This page gathers significant Omnichain Fungible Tokens (OFTs) built on top of LayerZero v2 AMB protocol.",
        "detailedDescription": "Risk associated with using any OFT varies, depending on the technological decisions ([OApp configuration and security stack](https://docs.layerzero.network/v2/developers/evm/protocol-gas-settings/default-config)) made by the developers.       LayerZero as a framework to build omnichain application does not provide any base security as applications can define their own security settings,       however applications and tokens choosing the default security settings will leverage security provided by the current default Verifiers and Executor.       Default settings are managed by LayerZero team."
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "The LayerZero message protocol is used. If all preconfigured verifiers agree on a message, it is considered verified and can be executed by a permissioned Executor at the destination.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Omnichain tokens can be individually upgradable and their security assumptions must be individually assessed for each token contract / OApp.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": [
          "Ethereum",
          "BNB Chain",
          "Avalanche",
          "Polygon",
          "Arbitrum",
          "Optimism",
          "Fantom",
          "DFK",
          "Harmony",
          "Celo",
          "Moonbeam",
          "Fuse",
          "Gnosis",
          "Klaytn",
          "Metis",
          "OKXChain",
          "Polygon zkEVM",
          "Canto",
          "zkSync Era",
          "Moonriver",
          "Solana",
          "Tenet",
          "Arbitrum Nova",
          "Kava",
          "Mantle",
          "Hubble",
          "Linea",
          "Base",
          "Zora",
          "Viction",
          "Loot",
          "Merit Circle",
          "TelosEVM",
          "Astar",
          "Aurora",
          "Orderly",
          "Scroll",
          "Manta",
          "Shimmer",
          "Injective",
          "Rari Chain",
          "Xai",
          "re.al",
          "Blast",
          "Fraxtal",
          "Astar zkEVM",
          "Mode",
          "Merlin",
          "Degen",
          "Skale",
          "Xlayer",
          "Sanko",
          "Bob",
          "Sei",
          "Cyber",
          "Iota",
          "Taiko",
          "Xchain",
          "Etherlink",
          "Tron"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Omnichain Fungible Tokens (OFTs) are individually configurable Token Bridges. This means that an asset is usually locked or burned at its origin to start the bridging. \n      Then a witness event of this is emitted, verified and relayed to the destination by third verfiiers. Finally, a permissioned Executor submits a transaction at the destination chain to mint the bridged asset. \n      \n      The shared feature among all OFTs is the messaging interface, which always uses the LayerZero message protocol (or arbitrary message bridge, AMB). \n      Apart from the OFT standard provided by LayerZero, which extends the ERC-20 standard, implementation details are highly customizable and vary widely. \n      \n      Each OFT is a LayerZero OApp and can be configured to use custom security settings when interacting with the AMB.\n      Among these OApp configuration parameters are the DVN(s) (who will read and verify the interchain messages), the executor (who will deliver and execute the transaction on the destination chain), and the minimum block confirmations needed. \n      These can be set by the Oapp / OFT owner or a delegate that they can define in the EndpointV2 contract.\n      Additionally, the OFT owner can often use other admin functions on the OFT contract that are specific to the ERC-20 implementation (similar to other ERC-20 tokens, like arbitrary minting or pausing functions) and not related to LayerZero.\n      \n      OFTs can either be natively multichain or they can use an adapter. Native OFTs are burned at their origin and minted at their destination when bridging. \n      Adapter OFTs have a main chain, where they are locked in an adapter escrow. This mints a 'native' OFT version of the locked token that can then be bridged on all chains by burn-minting. \n      To receive the original locked token back, a user would have to return to the main chain and unlock it from the adapter escrow.",
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "the OApp owner upgrades the OFT(Adapter) contract maliciously.",
              "isCritical": true
            }
          ],
          "references": [
            {
              "text": "LayerZero V2 docs: Overview",
              "href": "https://docs.layerzero.network/v2/home/v2-overview"
            },
            {
              "text": "LayerZero V2 docs: OFT Quickstart",
              "href": "https://docs.layerzero.network/v2/developers/evm/oft/quickstart"
            }
          ]
        },
        "validation": {
          "name": "Configurable Verifiers",
          "description": "Each crosschain transaction is emitted on the origin chain and must be picked up and verified by preconfigured verifiers (LayerZero calls these DVNs). If they agree on a message, it is considered verified and can be executed by a permissioned Executor at the destination.",
          "references": [
            {
              "text": "Etherscan: Function setConfig() in SendUln302.sol",
              "href": "https://etherscan.io/address/0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1#code#F1#L30"
            },
            {
              "text": "L2Beat Blog: Circumventing Layer Zero",
              "href": "https://medium.com/l2beat/circumventing-layer-zero-5e9f652a5d3e"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "the executor or all required verifiers fail to facilitate the transfer."
            },
            {
              "category": "Funds can be stolen if",
              "text": "the Executor and the Verifiers collude to submit fraudulent block hash and relay fraudulent transfer.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "the OApp owner changes the security stack maliciously.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "there is no custom security stack configured and the LayerZero Multisig changes the default security stack maliciously."
            }
          ]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x58538e6A46E07434d7E7375Bc268D3cb839C0133",
            "newVersion": true,
            "sinceTimestamp": "1712705747",
            "tokens": ["ENA"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x58538e6A46E07434d7E7375Bc268D3cb839C0133",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for ENA on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xCB07992DE144bDeE56fDb66Fff2454B43243b052",
            "newVersion": true,
            "sinceTimestamp": "1718263967",
            "tokens": ["CYBER"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xCB07992DE144bDeE56fDb66Fff2454B43243b052",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow 1 for CYBER on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x3d2fe83ea885C2E43A422C82C738847669708210",
            "newVersion": true,
            "sinceTimestamp": "1716878123",
            "tokens": ["CYBER"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x3d2fe83ea885C2E43A422C82C738847669708210",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow 2 for CYBER on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x17Ce6AEc7FD1aCcB5C0B2712eDDeFf8939BAB91E",
            "newVersion": true,
            "sinceTimestamp": "1716569111",
            "tokens": ["TRESTLE"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x17Ce6AEc7FD1aCcB5C0B2712eDDeFf8939BAB91E",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for TRESTLE on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x0ab9EfCb9DF64D575085A8d1eF7b961b57785aA2",
            "newVersion": true,
            "sinceTimestamp": "1710000539",
            "tokens": ["wTIA"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x0ab9EfCb9DF64D575085A8d1eF7b961b57785aA2",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for Trestle Wrapped TIA on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x6182995916d79DeDb60db1570776F9994fCdCA0a",
            "newVersion": true,
            "sinceTimestamp": "1716348011",
            "tokens": ["PARAM"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x6182995916d79DeDb60db1570776F9994fCdCA0a",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for PARAM on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xAd6cA80Fe4D3c54f6433fF725d744772AaE87711",
            "newVersion": true,
            "sinceTimestamp": "1714491611",
            "tokens": ["WOO"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xAd6cA80Fe4D3c54f6433fF725d744772AaE87711",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for WOO on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x3e52fd3383E1ee6D3959Ce5c6Aa9d1fCb46AbFA6",
            "newVersion": true,
            "sinceTimestamp": "1713954323",
            "tokens": ["MYT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x3e52fd3383E1ee6D3959Ce5c6Aa9d1fCb46AbFA6",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for MYSO Token on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xFE7fe01F8B9A76803aF3750144C2715D9bcf7D0D",
            "newVersion": true,
            "sinceTimestamp": "1712811983",
            "tokens": ["weETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xFE7fe01F8B9A76803aF3750144C2715D9bcf7D0D",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for ether.fi wrapped eETH on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xe4796cCB6bB5DE2290C417Ac337F2b66CA2E770E",
            "newVersion": true,
            "sinceTimestamp": "1710884663",
            "tokens": ["sFRAX"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xe4796cCB6bB5DE2290C417Ac337F2b66CA2E770E",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for sFRX on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x1f55a02A049033E3419a8E2975cF3F572F4e6E9A",
            "newVersion": true,
            "sinceTimestamp": "1710884675",
            "tokens": ["sfrxETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x1f55a02A049033E3419a8E2975cF3F572F4e6E9A",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for sfrxETH on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x23432452B720C80553458496D4D9d7C5003280d0",
            "newVersion": true,
            "sinceTimestamp": "1710884099",
            "tokens": ["FXS"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x23432452B720C80553458496D4D9d7C5003280d0",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for FraxShares on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x801642B6efB861fE624dAD704b7A747779d9B433",
            "newVersion": true,
            "sinceTimestamp": "1710380783",
            "tokens": ["PEAS"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x801642B6efB861fE624dAD704b7A747779d9B433",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for Peapods Finance on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x5d3a1Ff2b6BAb83b63cd9AD0787074081a52ef34",
            "newVersion": true,
            "sinceTimestamp": "1709926703",
            "tokens": ["USDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x5d3a1Ff2b6BAb83b63cd9AD0787074081a52ef34",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for USDe on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x211Cc4DD073734dA055fbF44a2b4667d5E5fE5d2",
            "newVersion": true,
            "sinceTimestamp": "1709929547",
            "tokens": ["sUSDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x211Cc4DD073734dA055fbF44a2b4667d5E5fE5d2",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for staked USDe on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x1762c17f671FA27cE6C59256f5F28242de9274d0",
            "newVersion": true,
            "sinceTimestamp": "1709311259",
            "tokens": ["TBANK"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x1762c17f671FA27cE6C59256f5F28242de9274d0",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for TaoBank token on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x1cd5b73d12CB23b2835C873E4FaFfE83bBCef208",
            "newVersion": true,
            "sinceTimestamp": "1709176895",
            "tokens": ["pxETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x1cd5b73d12CB23b2835C873E4FaFfE83bBCef208",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for Dinero Staked ETH on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xE6C2B672B3eB64A1F460AdcD9676a3B6c67abD4D",
            "newVersion": true,
            "sinceTimestamp": "1708744931",
            "tokens": ["MAVIA"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xE6C2B672B3eB64A1F460AdcD9676a3B6c67abD4D",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for MAVIA on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x85d456B2DfF1fd8245387C0BfB64Dfb700e98Ef3",
            "newVersion": true,
            "sinceTimestamp": "1707185231",
            "tokens": ["rsETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x85d456B2DfF1fd8245387C0BfB64Dfb700e98Ef3",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "OFT adapter escrow for Kelp DAO rsETH on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "contracts": {
        "addresses": [
          {
            "name": "EndpointV2",
            "address": "0x1a44076050125825900e736c501f859c50fE728c",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The central Endpoint contract for LayerZero v2 on Ethereum. OApps like OFT adapters or token contracts register with this Endpoint to define their send and receive libraries and LayerZero-related configurations."
          },
          {
            "name": "SendUln302",
            "address": "0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The default send library for the LayerZero EndpointV2. This contract defines a framework and configuration options for sending messages across the LayerZero Arbitrary Message Bridge (AMB). It also accumulates fees configured by the OApp owners via the Treasury contract. New libraries can be added by the LayerZero Multisig."
          },
          {
            "name": "ReceiveUln302",
            "address": "0xc02Ab410f0734EFa3F14628780e6e695156024C2",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The default receive library for the LayerZero EndpointV2. This contract defines a framework and configuration options for receiving messages across the LayerZero Arbitrary Message Bridge (AMB). New libraries can be added by the LayerZero Multisig."
          },
          {
            "name": "LayerZeroDVN",
            "address": "0x589dEDbD617e0CBcB916A9223F4d1300c294236b",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The LayerZero Verifier delivers their verified messages through this contract. It is one of the default DVNs configured in the LayerZero EndpointV2."
          },
          {
            "name": "GoogleCloudDVN",
            "address": "0xD56e4eAb23cb81f43168F9F45211Eb027b9aC7cc",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The GoogleCloud Verifier delivers their verified messages through this contract. It is one of the default DVNs configured in the LayerZero EndpointV2."
          },
          {
            "name": "PolyhedraDVN",
            "address": "0x8ddF05F9A5c488b4973897E278B58895bF87Cb24",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xe16d201cA134345601631D327a971A3741646B0d"],
              "implementations": ["0xcb75F0dFFf5c5046CAA9dB1DE56645a962FeFFc2"]
            },
            "chain": "ethereum",
            "description": "The Polyhedra Verifier delivers their verified messages through this contract. It is one of the default DVNs configured in the LayerZero EndpointV2."
          },
          {
            "name": "Treasury",
            "address": "0x5ebB3f2feaA15271101a927869B3A56837e73056",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Manages fees and fee recipients for registered OApps. Fees accumulate in the sendLib and OApp owners can withdraw them."
          }
        ],
        "risks": [],
        "references": [
          {
            "text": "LayerZero Docs: OFT Adapter",
            "href": "https://docs.layerzero.network/v2/developers/evm/oft/adapter"
          },
          {
            "text": "LayerZero Docs: Deployed contracts and supported chains",
            "href": "https://docs.layerzero.network/v2/developers/evm/technical-reference/deployed-contracts"
          },
          {
            "text": "LayerZero Docs: DVN addresses",
            "href": "https://docs.layerzero.network/v2/developers/evm/technical-reference/dvn-addresses"
          }
        ]
      },
      "permissions": [
        {
          "name": "LayerZero Multisig",
          "description": "This is a Gnosis Safe with 2 / 5 threshold.  The owner of EndpointV2, both Uln302 and Treasury. Can register and set default MessageLibraries and change the Treasury address.",
          "accounts": [
            {
              "address": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327",
              "type": "EOA"
            },
            {
              "address": "0xe095F2590eF1Ab39601445025847Ed8E4B40D687",
              "type": "EOA"
            },
            {
              "address": "0xBb6633cc267951E938F9B6421E4F54aa5b2c1936",
              "type": "EOA"
            },
            {
              "address": "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
              "type": "EOA"
            },
            {
              "address": "0x67FC8c432448f9a8d541C17579EF7a142378d5aD",
              "type": "EOA"
            }
          ]
        },
        {
          "accounts": [
            {
              "address": "0x173272739Bd7Aa6e4e214714048a9fE699453059",
              "type": "Contract"
            }
          ],
          "name": "Default LayerZero Executor",
          "description": "Messages passed through the LayerZero AMB are, by default, sent to the destination chain by this Executor. This can be changed by the respective OApp owner."
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Security models: isolated vs shared",
          "url": "https://medium.com/l2beat/circumventing-layer-zero-5e9f652a5d3e",
          "thumbnail": "l2beat-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "lightlink",
      "createdAt": "1718443080",
      "display": {
        "name": "LightLink",
        "slug": "lightlink",
        "description": "LightLink is a sidechain that lets dApps and enterprises offer users instant, gasless transactions. It aims at becoming an Ethereum Layer 2.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://lightlink.io"],
          "apps": ["https://phoenix.lightlink.io/apps"],
          "documentation": ["https://docs.lightlink.io"],
          "explorers": ["https://phoenix.lightlink.io"],
          "repositories": ["https://github.com/lightlink-network"],
          "socialMedia": [
            "https://twitter.com/lightlinkchain",
            "https://discord.com/invite/lightlinkchain",
            "https://t.me/lightlinkll",
            "https://linkedin.com/company/lightlinkchain"
          ]
        }
      },
      "config": {
        "associatedTokens": ["LL"],
        "escrows": [
          {
            "address": "0x3ca373F5ecB92ac762f9876f6e773082A4589995",
            "newVersion": true,
            "sinceTimestamp": "1692181067",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x3ca373F5ecB92ac762f9876f6e773082A4589995",
              "upgradeability": {
                "proxyType": "LightLink proxy",
                "admins": ["0x3345702FeA1669Efa1e085610A62F89d159Bc0c8"],
                "implementations": [
                  "0x468b89D930ca7974196D7195033600B658011756"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x63105ee97BfB22Dfe23033b3b14A4F8FED121ee9",
            "newVersion": true,
            "sinceTimestamp": "1692185219",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x63105ee97BfB22Dfe23033b3b14A4F8FED121ee9",
              "upgradeability": {
                "proxyType": "LightLink proxy",
                "admins": ["0x3345702FeA1669Efa1e085610A62F89d159Bc0c8"],
                "implementations": [
                  "0xa8372d6FF00d48A25BaA1AF16d6a86C936708f4E"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "50.00% of Signers Voting Power",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Native & Canonical",
          "description": "ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": ["LightLink"],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "description": "\n      LightLink chain state roots are periodically posted to Ethereum through a CanonicalStateChain contract on L1. After the challenge window of 3d, the published state root is assumed to be correct. During the challenge window, anyone can challenge a block header against some basic validity checks. The challenge fee required is 1.5 ETH.\n      Once challenged, the permissioned defender can respond within 2d to the challenge, by providing the L2 header and the previous L2 header. If the defender does not respond,\n      the block header is considered invalid, the canonical state chain is rolled back to the previous state root, and the challenger can claim back the challenge fee. If the defender successfully responds, the challenger loses the challenge fee to the defender.\n      Since only the block header can be challenged and not the state transition, the system is vulnerable to invalid state roots. Moreover, state roots are not used for L1 bridge withdrawals.\n      Users can deposit tokens on the LightLink chain by sending them to the L1BridgeRegistry contract on Ethereum L1. On the LightLink chain, token minting is then authorized by a permissioned set of signers providing signatures as input to the syncDeposit() function on the L2ERC20Predicate contract.\n      Users can withdraw their funds by submitting a withdraw() transaction to the L2ERC20Predicate contract, which will burn the tokens on the LightLink chain. To then unlock tokens from the bridge on L1, a validator multisig needs to validate the withdrawal based on off-chain validity checks. \n      Users can exit the network once enough validators have signed off on the withdrawal.\n      Currently, a minimum of 2 validators is required to sign off on a withdrawal.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Validation By Signers",
          "description": "For deposits, messages are verified by a permissioned set of signers on the LightLink network, which monitors emitted DepositToken events on L1 and provides signatures to authorize syncDeposit() transactions execution on LightLink.\n         In the same way for withdrawals, the set of signers provides signatures to authorize the withdrawal transactions releasing tokens from the bridge.",
          "references": [
            {
              "text": "LightLink L2 syncDeposit() - L2ERC20Predicate.sol",
              "href": "https://phoenix.lightlink.io/address/0x63105ee97BfB22Dfe23033b3b14A4F8FED121ee9?tab=contract_code"
            },
            {
              "text": "LightLink L1 syncWithdraw()- L1ERC20Predicate.sol",
              "href": "https://etherscan.io/address/0xa8372d6ff00d48a25baa1af16d6a86c936708f4e#code"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators decide to not mint tokens after observing an event on Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators decide to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a withdraw request that wasn't originated on the source chain.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens are upgradable",
          "description": "Tokens on the destination end up as wrapped ERC20 proxies that are upgradable by the LightLinkMultisig, using EIP-1967.",
          "references": [
            {
              "text": "Token Implementation - requireMultisig()",
              "href": "https://phoenix.lightlink.io/address/0x468b89D930ca7974196D7195033600B658011756?tab=contract"
            }
          ],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ]
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "CanonicalStateChain",
            "address": "0x65E325A22c0F519041db69F5693EbAc3b4AE71bE",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xcc90c738acfc1695D19336Bc3E392a46234112BF"],
              "implementations": ["0xeFE38Bd58ADDf23eFab1FFa16312030384929289"]
            },
            "chain": "ethereum",
            "description": "The Canonical State Chain (CSC) contract is the main contract of the LightLink network. It stores the state roots of the LightLink chain on Ethereum L1.",
            "upgradableBy": ["LightLinkAdmin"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "Challenge",
            "address": "0x1c1271bEE8556918092dA9238FcC77ee8be4b5Cd",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xcc90c738acfc1695D19336Bc3E392a46234112BF"],
              "implementations": ["0x4Fc6a6A2e3864709ae6AdCf29280dA01c95Aa10B"]
            },
            "chain": "ethereum",
            "description": "The Challenge contract is used to challenge block headers on the LightLink chain. Currently, data availability challenges and execution challenges are not enabled.",
            "upgradableBy": ["LightLinkAdmin"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "L1BridgeRegistry",
            "address": "0x624631881655a310adcF0d1336658Cc977609b72",
            "upgradeability": {
              "proxyType": "LightLink proxy",
              "admins": ["0x3345702FeA1669Efa1e085610A62F89d159Bc0c8"],
              "implementations": ["0xC48F0e7C3c4E385ae84B4f678A0482E00208cf3E"]
            },
            "chain": "ethereum",
            "description": "The L1BridgeRegistry contract is used to store the address of the LightLink multisig and the address and voting power of the validators managing the bridge."
          },
          {
            "name": "ChainOracle",
            "address": "0x2fbD45A4B57379492450c3D5a8fdcaD68336DB04",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xcc90c738acfc1695D19336Bc3E392a46234112BF"],
              "implementations": ["0x79B3E839333a74137e78b0DaF84FC12512a8c704"]
            },
            "chain": "ethereum",
            "description": "If the DAOracle is set, this contract enables any user to directly upload valid Layer 2 blocks from the data availability layer to the L1.",
            "upgradableBy": ["LightLinkAdmin"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "DaOracle",
            "address": "0x0000000000000000000000000000000000000000",
            "description": "The DABridge contract used to verify shares inclusion in the ChainOracle provideShares() function. If not set, data shares cannot be verified and stored in the ChainOracle contract."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "name": "Validators",
          "description": "Permissioned set of actors that can validate withdrawals from the bridge. Each validators has a voting power assigned that determines the weight of their vote. Currently, the threshold is set to 50.00% of the total voting power.",
          "accounts": [
            {
              "address": "0x12eCE4AA73ee8ea958bE327daE41Dd785c997118",
              "type": "EOA"
            },
            {
              "address": "0xaB0DDC4B1Fc1F24D4F7F67ab87B5dD8e5e0c5AC9",
              "type": "EOA"
            },
            {
              "address": "0xc8225cA10F570d4d7aD6cdb6F0bfEb683dc7C938",
              "type": "EOA"
            },
            {
              "address": "0x6f933814903561F79137099587737DFB24c6E86D",
              "type": "EOA"
            },
            {
              "address": "0xB44C32Dd1ec374224eED43FD827EBE64db16b0df",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Proposer",
          "accounts": [
            {
              "address": "0x514F8211B64f0620349659DeaDB5911a9896E7EC",
              "type": "EOA"
            }
          ],
          "description": "The proposer (\"publisher\") is responsible for pushing new state roots to the CanonicalStateChain contract on L1."
        },
        {
          "name": "LightLinkMultisig",
          "accounts": [
            {
              "address": "0x3345702FeA1669Efa1e085610A62F89d159Bc0c8",
              "type": "MultiSig"
            }
          ],
          "description": "This address is the admin of the L1BridgeRegistry. It can pause the bridge and upgrade the bridge implementation. It also determines the validators of the bridge and their voting power. It is not a Gnosis Safe multisig, but a custom multisig implementation."
        },
        {
          "name": "LightLinkAdmin",
          "accounts": [
            {
              "address": "0xcc90c738acfc1695D19336Bc3E392a46234112BF",
              "type": "EOA"
            }
          ],
          "description": "This address is the owner of all the CanonicalStateChain and Challenge contracts. Can replace the proposer and core system parameters."
        }
      ]
    },
    {
      "type": "bridge",
      "id": "multichain",
      "createdAt": "1662628329",
      "display": {
        "name": "Multichain",
        "slug": "multichain",
        "warning": "THE BRIDGE IS NOT SAFE FOR USE. The Multichain's team urges everyone to refrain from using the bridge as it is under investigation by Chinese law enforcement authorities. [**<u>For more information, please visit this thread.</u>**](https://twitter.com/multichainorg/status/1679768407628185600)",
        "description": "Multichain is an externally validated bridge. It uses a network of nodes running SMPC (Secure Multi Party Computation) protocol. It supports dozens of blockchains and thousands of tokens with both Token Bridge and Liquidity Network.",
        "category": "Hybrid",
        "links": {
          "repositories": ["https://github.com/anyswap"],
          "socialMedia": ["https://twitter.com/MultichainOrg"]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x0615Dbba33Fe61a31c7eD131BDA6655Ed76748B1",
            "sinceTimestamp": "1644997112",
            "tokens": ["WETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x0914D4CCc4154cA864637B0B653Bc5Fd5e1d3ecF",
            "sinceTimestamp": "1645423761",
            "tokens": ["LDO"],
            "chain": "ethereum"
          },
          {
            "address": "0x0aC06321050Defb485340c3509A5405F9d7655c7",
            "sinceTimestamp": "1669715063",
            "tokens": ["WOO"],
            "chain": "ethereum"
          },
          {
            "address": "0x0bd19f6447cd676255C7C7B00428462B3dA67e3a",
            "sinceTimestamp": "1634785736",
            "tokens": ["TUSD"],
            "chain": "ethereum"
          },
          {
            "address": "0x0E1b539Eaf71d5D025f8ce90cA2256b4Cf3e94B1",
            "sinceTimestamp": "1652425690",
            "tokens": ["CRV"],
            "chain": "ethereum"
          },
          {
            "address": "0x10c6b61DbF44a083Aec3780aCF769C77BE747E23",
            "sinceTimestamp": "1630665650",
            "tokens": [
              "YFI",
              "UNI",
              "WBTC",
              "FXS",
              "LINK",
              "DAI",
              "SUSHI",
              "AAVE",
              "FRAX",
              "OCEAN",
              "USDC",
              "SNX",
              "CRV",
              "USDT",
              "ETH"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0x11eb3aA66FE1f2B75cB353D3e874E96968182BdA",
            "sinceTimestamp": "1649060734",
            "tokens": ["MKR"],
            "chain": "ethereum"
          },
          {
            "address": "0x13B432914A996b0A48695dF9B2d701edA45FF264",
            "sinceTimestamp": "1603963154",
            "tokens": [
              "YFI",
              "UNI",
              "LINK",
              "DAI",
              "COMP",
              "OMG",
              "USDT",
              "SUPER",
              "ETH"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0x15a3FE3e6B8a5C01b1BfE72C76660C897368Eec0",
            "sinceTimestamp": "1666256651",
            "tokens": ["VLX"],
            "chain": "ethereum"
          },
          {
            "address": "0x16abA2d28329620F31D44748EC82FA08daA50B86",
            "sinceTimestamp": "1639040499",
            "tokens": ["RACA"],
            "chain": "ethereum"
          },
          {
            "address": "0x183D0dC5867c01bFB1dbBc41d6a9d3dE6e044626",
            "sinceTimestamp": "1632319221",
            "tokens": ["FXS", "FRAX", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x1Cb1284CF62C3E593a8f49EEf3db37AD20467Bed",
            "sinceTimestamp": "1640592543",
            "tokens": ["MATIC"],
            "chain": "ethereum"
          },
          {
            "address": "0x22648C12acD87912EA1710357B1302c6a4154Ebc",
            "sinceTimestamp": "1627612840",
            "tokens": ["USDT"],
            "chain": "ethereum"
          },
          {
            "address": "0x2AC03BF434db503f6f5F85C3954773731Fc3F056",
            "sinceTimestamp": "1654566539",
            "tokens": ["WETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x2F10c5eE93ac666dA72195abA8a49FD6D27fA02F",
            "sinceTimestamp": "1616639421",
            "tokens": ["WBTC"],
            "chain": "ethereum"
          },
          {
            "address": "0x353B98DDc927173005dD8B293B043Bd950cDA468",
            "sinceTimestamp": "1648538090",
            "tokens": ["WBTC", "DAI", "USDC", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x3696f44F2B7FE51486f81D2639Ff895202614711",
            "sinceTimestamp": "1665051467",
            "tokens": ["CRV"],
            "chain": "ethereum"
          },
          {
            "address": "0x373590a576ccb8143f377DB5f1c16F9f8528a8B4",
            "sinceTimestamp": "1647427400",
            "tokens": ["WBTC", "DAI", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x37C24675E4a0DFCE683c51e1746599F1E2517Eb5",
            "sinceTimestamp": "1669713143",
            "tokens": ["AURORA"],
            "chain": "ethereum"
          },
          {
            "address": "0x3D632d9e1a60a0880Dd45E61f279D919b5748377",
            "sinceTimestamp": "1665051467",
            "tokens": ["C98"],
            "chain": "ethereum"
          },
          {
            "address": "0x403BEB734e0C7E87D632a4EA1B290059E3B3A3c9",
            "sinceTimestamp": "1656565231",
            "tokens": ["RAI"],
            "chain": "ethereum"
          },
          {
            "address": "0x46290B0c3A234E3d538050d8F34421797532A827",
            "sinceTimestamp": "1603878054",
            "tokens": [
              "YFI",
              "UNI",
              "LINK",
              "DAI",
              "COMP",
              "OMG",
              "USDT",
              "ETH"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0x4a0A3902e091cdb3AEc4279a6BFAC50297F0A79e",
            "sinceTimestamp": "1665051467",
            "tokens": ["ENJ"],
            "chain": "ethereum"
          },
          {
            "address": "0x4e1581f01046eFDd7a1a2CDB0F82cdd7F71F2E59",
            "sinceTimestamp": "1665051467",
            "tokens": ["eXRD"],
            "chain": "ethereum"
          },
          {
            "address": "0x4E67df0f232C3bc985F8a63326D80ce3d9A40400",
            "sinceTimestamp": "1633717416",
            "tokens": ["WBTC", "LINK", "DAI", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x4e840AADD28DA189B9906674B4Afcb77C128d9ea",
            "sinceTimestamp": "1631162492",
            "tokens": ["SPELL"],
            "chain": "ethereum"
          },
          {
            "address": "0x4f60a160D8C2DDdaAfe16FCC57566dB84D674BD6",
            "sinceTimestamp": "1636969283",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x533e3c0e6b48010873B947bddC4721b1bDFF9648",
            "sinceTimestamp": "1615021976",
            "tokens": [
              "BFC",
              "DAO",
              "FXS",
              "FEG",
              "BUSD",
              "DAI",
              "PEOPLE",
              "FRAX",
              "REQ",
              "OCEAN",
              "ACH",
              "USDT",
              "AMP",
              "ORBS"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0x55F089d5f6aeDfdACBD5E3aCB0e8F31FBAb44088",
            "sinceTimestamp": "1659078034",
            "tokens": ["WBTC", "FXS", "DAI", "FRAX", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x57ed6BD35a6CE815079855CD0b21331d1D5D0A0e",
            "sinceTimestamp": "1637058361",
            "tokens": ["WBTC", "SUSHI", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x6362496Bef53458b20548a35A2101214Ee2BE3e0",
            "sinceTimestamp": "1640670449",
            "tokens": ["ANKR"],
            "chain": "ethereum"
          },
          {
            "address": "0x65e64963b755043CA4FFC88029FfB8305615EeDD",
            "sinceTimestamp": "1604905266",
            "tokens": ["YFI", "LINK", "DAI", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x668b9734FfE9eE8a01d4Ade3362De71E8989EA87",
            "sinceTimestamp": "1616656666",
            "tokens": ["REQ", "AMP"],
            "chain": "ethereum"
          },
          {
            "address": "0x685b63CFE0179b3EFb70A01dCb1D648549AA192d",
            "sinceTimestamp": "1636968291",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0x739ca6D71365a08f584c8FC4e1029045Fa8ABC4B",
            "sinceTimestamp": "1627009838",
            "tokens": ["DAI"],
            "chain": "ethereum"
          },
          {
            "address": "0x7BEB05cf5681f402E762F8569c2Fc138a2172978",
            "sinceTimestamp": "1636610890",
            "tokens": ["KNC"],
            "chain": "ethereum"
          },
          {
            "address": "0x7EA2be2df7BA6E54B1A9C70676f668455E329d29",
            "sinceTimestamp": "1625118609",
            "tokens": ["USDC"],
            "chain": "ethereum"
          },
          {
            "address": "0x7F923dB3d90047D75D078e29b1f8Eac03e30F761",
            "sinceTimestamp": "1652721431",
            "tokens": ["WBTC", "DAI", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x820A9eb227BF770A9dd28829380d53B76eAf1209",
            "sinceTimestamp": "1616747753",
            "tokens": [
              "RAI",
              "FXS",
              "ANKR",
              "FRAX",
              "CRV",
              "AMP",
              "ORBS",
              "ETH"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0x87bCB3038988ca2A89605fFa8f237FB78Df1c3Ae",
            "sinceTimestamp": "1639348524",
            "tokens": ["USDC", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x896be9f48b225154593A84b382d927F9d7Bc2361",
            "sinceTimestamp": "1649403391",
            "tokens": ["WBTC", "DAI", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x8b92eA35171e29948Cc9e49c52AC8dB0549B7D6B",
            "sinceTimestamp": "1636439817",
            "tokens": ["BabyDoge"],
            "chain": "ethereum"
          },
          {
            "address": "0x8BB9Cac776555E0Ac707024Ed729E5AACeAfBE72",
            "sinceTimestamp": "1663224117",
            "tokens": ["FTX Token"],
            "chain": "ethereum"
          },
          {
            "address": "0x8cC49FE67A4bD7a15674c4ffD4E969D94304BBbf",
            "sinceTimestamp": "1640232068",
            "tokens": ["TUSD", "WBTC", "DAI", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x8dFDC61c7c7551D0DEec950A2822eB59cddb8f59",
            "sinceTimestamp": "1642067097",
            "tokens": ["LINK"],
            "chain": "ethereum"
          },
          {
            "address": "0x923e0a17F49Fb03d936F2af2D59D379C615f5447",
            "sinceTimestamp": "1626857654",
            "tokens": ["WBTC", "SAND", "DAI", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x92804831aC036Ca77D57Db8BBA0E522Cd35a8049",
            "sinceTimestamp": "1654567203",
            "tokens": ["DAI"],
            "chain": "ethereum"
          },
          {
            "address": "0x944A05c5acC46c9777ACA7d8dD92B048b1b6D3e0",
            "sinceTimestamp": "1646207244",
            "tokens": ["ORBS"],
            "chain": "ethereum"
          },
          {
            "address": "0x95555E4e4CB2C094914aF53598eFf14b9340881f",
            "sinceTimestamp": "1638350175",
            "tokens": ["WOO"],
            "chain": "ethereum"
          },
          {
            "address": "0x97cFFC8aaDC28cda8Ba901667222d6386A46f705",
            "sinceTimestamp": "1625561599",
            "tokens": ["WETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x9c1F1f8d03f5cca7a5D31b56D90c967B1D8cFAb7",
            "sinceTimestamp": "1648311694",
            "tokens": ["CRV"],
            "chain": "ethereum"
          },
          {
            "address": "0xA024856a51B1D8bFBbc78DDbc98e6d5b94dc24c4",
            "sinceTimestamp": "1651904294",
            "tokens": ["USDT"],
            "chain": "ethereum"
          },
          {
            "address": "0xA5432cbF7097C4E3536731dEc837e3fA676b38C3",
            "sinceTimestamp": "1641456092",
            "tokens": ["SUSHI"],
            "chain": "ethereum"
          },
          {
            "address": "0xa65779AA9a29af831DA49c48899e7146934905C7",
            "sinceTimestamp": "1654756513",
            "tokens": ["OCEAN"],
            "chain": "ethereum"
          },
          {
            "address": "0xaBDA031246BD1De3D7b683455506D3d74a0E1a5B",
            "sinceTimestamp": "1663227083",
            "tokens": ["SRM"],
            "chain": "ethereum"
          },
          {
            "address": "0xB01371072fDcB9B4433b855e16A682B461F94AB3",
            "sinceTimestamp": "1638166360",
            "tokens": ["FTM"],
            "chain": "ethereum"
          },
          {
            "address": "0xbbc4A8d076F4B1888fec42581B6fc58d242CF2D5",
            "sinceTimestamp": "1624013678",
            "tokens": ["MIM"],
            "chain": "ethereum"
          },
          {
            "address": "0xbd40733A2F223fF32195a759a81df25E35DD4dEA",
            "sinceTimestamp": "1647364526",
            "tokens": [
              "MANA",
              "UNI",
              "WBTC",
              "SAND",
              "DAI",
              "AAVE",
              "USDC",
              "AXS",
              "SNX",
              "USDT",
              "ETH"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0xBe008e52c5682A49dd0260735a26Aa221f303456",
            "sinceTimestamp": "1615777535",
            "tokens": ["USDT"],
            "chain": "ethereum"
          },
          {
            "address": "0xC564EE9f21Ed8A2d8E7e76c085740d5e4c5FaFbE",
            "sinceTimestamp": "1613816964",
            "tokens": [
              "TUSD",
              "RAI",
              "GUSD",
              "YFI",
              "BFC",
              "KP3R",
              "WBTC",
              "LEO",
              "FXS",
              "WOO",
              "LINK",
              "DAI",
              "SUSHI",
              "AAVE",
              "FRAX",
              "SHIB",
              "USDC",
              "NEXO",
              "BAND",
              "SNX",
              "WETH",
              "RGT",
              "CRV",
              "CEL",
              "BAL",
              "USDT"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0xcaF5191fc480F43e4DF80106c7695ECA56E48B18",
            "sinceTimestamp": "1637314609",
            "tokens": ["TLOS"],
            "chain": "ethereum"
          },
          {
            "address": "0xcb9d0b8CfD8371143ba5A794c7218D4766c493e2",
            "sinceTimestamp": "1654161593",
            "tokens": ["BAL"],
            "chain": "ethereum"
          },
          {
            "address": "0xCDd83050f045ab31B884f0Dc49581BC7b3e0B84C",
            "sinceTimestamp": "1644314057",
            "tokens": ["WBTC", "DAI", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xCfa8F0Aed0414A98f99f1Ea29ddF23f6E1370c13",
            "sinceTimestamp": "1665307331",
            "tokens": ["CVX"],
            "chain": "ethereum"
          },
          {
            "address": "0xcFD5868fbF612bd8907827f012d71f3C7BA6C943",
            "sinceTimestamp": "1651561187",
            "tokens": ["WBTC"],
            "chain": "ethereum"
          },
          {
            "address": "0xd13eB71515DC48a8a367D12F844e5737bab415dF",
            "sinceTimestamp": "1648780783",
            "tokens": ["BUSD"],
            "chain": "ethereum"
          },
          {
            "address": "0xD22e210785902c39B579565e931517E5Bd34A69a",
            "sinceTimestamp": "1666318835",
            "tokens": ["MATIC"],
            "chain": "ethereum"
          },
          {
            "address": "0xD779967F8B511C5edf39115341B310022900eFED",
            "sinceTimestamp": "1608552536",
            "tokens": ["USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xDd98B79b36c77Ee1F23f37B61e58A61cc3D5aceF",
            "sinceTimestamp": "1661415874",
            "tokens": ["DAO"],
            "chain": "ethereum"
          },
          {
            "address": "0xE4cf417081A0Ab3f964b44D904BC2b534351A9a7",
            "sinceTimestamp": "1644232219",
            "tokens": ["WBTC", "DAI", "USDC", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xe5CF1558A1470cb5C166c2e8651eD0F3c5fb8F42",
            "sinceTimestamp": "1627465318",
            "tokens": ["CTSI"],
            "chain": "ethereum"
          },
          {
            "address": "0xE6B9d092223f39013656702A40dbE6B7DeCc5746",
            "sinceTimestamp": "1640846776",
            "tokens": ["WBTC"],
            "chain": "ethereum"
          },
          {
            "address": "0xeA928a8d09E11c66e074fBf2f6804E19821F438D",
            "sinceTimestamp": "1651563778",
            "tokens": ["USDC"],
            "chain": "ethereum"
          },
          {
            "address": "0xeBE58381406D2c9BC9F68f541D503bA4F1A29fDF",
            "sinceTimestamp": "1655360907",
            "tokens": ["GALA"],
            "chain": "ethereum"
          },
          {
            "address": "0xEC4486a90371c9b66f499Ff3936F29f0D5AF8b7E",
            "sinceTimestamp": "1641969134",
            "tokens": [
              "WBTC",
              "DAI",
              "SUSHI",
              "AAVE",
              "USDC",
              "CRV",
              "USDT",
              "ETH"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0xee9762352f63f4387af40D58291612067727457D",
            "sinceTimestamp": "1651559544",
            "tokens": ["USDT"],
            "chain": "ethereum"
          },
          {
            "address": "0xF49818b5d7dE5B0DBfcCb3Ddcd14e1f0AA1A6f01",
            "sinceTimestamp": "1649317077",
            "tokens": ["alUSD"],
            "chain": "ethereum"
          },
          {
            "address": "0xF62385C78f3BDBff33145703546b0377853AAa77",
            "sinceTimestamp": "1651242878",
            "tokens": ["WBTC", "DAI", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xf751575ED3390f6C02B4358f9E165e7B44877032",
            "sinceTimestamp": "1642151388",
            "tokens": ["TUSD"],
            "chain": "ethereum"
          },
          {
            "address": "0xFaFA220145DfA5C3Ec85B6FA8a75aEE2451CDe5E",
            "sinceTimestamp": "1655109894",
            "tokens": ["BUSD"],
            "chain": "ethereum"
          },
          {
            "address": "0xFc7cc7C7e7985316d23104B9689C511134f59bc8",
            "sinceTimestamp": "1642497683",
            "tokens": ["WBTC", "USDC", "USDT", "ETH"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": [
          "Optimism",
          "Gnosis",
          "Smart Bitcoin Cash",
          "ETHPoW",
          "CLV Parachain",
          "Conflux eSpace",
          "Velas EVM",
          "ThunderCore",
          "Metis Andromeda",
          "Fuse",
          "Huobi ECO Chain",
          "Moonbeam",
          "Moonriver",
          "Boba Network Bobabeam",
          "Polygon",
          "Harmony Shard 0",
          "BitTorrent Chain",
          "Dogechain",
          "Milkomeda C1",
          "Rangers Protocol",
          "Kava EVM",
          "Dithereum",
          "MintMe.com",
          "Cronos Mainnet Beta",
          "Fantom",
          "CMP",
          "Boba Network",
          "RSK",
          "KCC",
          "Fusion",
          "Shiden",
          "Telos EVM",
          "Arbitrum One",
          "Arbitrum Nova",
          "Celo",
          "Oasis Emerald ParaTime",
          "Avalanche C-Chain",
          "IoTeX Network",
          "REI",
          "Goerli",
          "Binance Smart Chain",
          "Syscoin",
          "Ontology",
          "Astar",
          "Ethereum Classic",
          "OKXChain",
          "Godwoken",
          "Klaytn Mainnet Cypress",
          "GateChain",
          "TomoChain",
          "Evmos",
          "Near",
          "XRP"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Multichain (formerly AnySwap) is a Hybrid Bridge that, depending on a token, can act as a Token Bridge or as a Liquidity Network.        It uses multiple escrows on a source chain (one per each destination) in addition to tokenized Liquidity Pools (anyToken contracts) - one anyToken contract per token.        It uses an on-chain Router that, depending on the token/destination will choose either TokenBridge or Liquidity Network to bridge assets.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "Outgoing transfers are being watched by external entities that - utilizing MPC (MultiParty Computation)  - sign off token minting (for Token Bride) or token swap        (for Liquidity Network). Incoming transfers work similarly - tokens burned on a source chain release tokens from escrow on a destination chain.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "MPC nodes decide to maliciously takeover them or there is an external exploit which will result in signing malicious transaction.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            },
            {
              "category": "Users can be censored if",
              "text": "MPC nodes decide to censor certain transactions.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            },
            {
              "category": "Funds can be lost if",
              "text": "MPC nodes lose the private key.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "MPC nodes decide to stop processing transfers.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Type of the token received on the destination chain depends on the token. Users may receive wrapped Token, canonical Token or anyToken that can be considered to be an IOU for the canonical Token.",
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded or not securely implemented.",
              "isCritical": true
            }
          ],
          "references": []
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "2/3rd of MPC.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "No / EOA",
          "description": "Depending on the router configuration escrow contracts are EOAs or Any tokens which cannot be upgraded.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading. Depending on the router configuration either Multichain tokens or Any tokens are minted.",
          "sentiment": "warning"
        }
      },
      "contracts": {
        "isIncomplete": true,
        "addresses": [
          {
            "address": "0x6b7a87899490EcE95443e979cA9485CBE7E71522",
            "name": "AnyswapV4Router",
            "description": "Multichain Liquidity Network Router V4."
          },
          {
            "address": "0xBa8Da9dcF11B50B03fd5284f164Ef5cdEF910705",
            "name": "AnyswapV6Router",
            "description": "Multichain Liquidity Network Router V6."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "accounts": [
            {
              "address": "0x5E583B6a1686f7Bc09A6bBa66E852A7C80d36F00",
              "type": "EOA"
            }
          ],
          "name": "Multichain \"Liquidity Tool\"",
          "description": "Privileged account that received funds from Ethereum source escrow without corresponding burn on the destination chain. These funds were bridged to different chains and used to supply liquidity        for various anyTokens. Users have to trust this account that it never tries to redeem held anyTokens for the underlying canonical token."
        },
        {
          "accounts": [
            {
              "address": "0x2A038e100F8B85DF21e4d44121bdBfE0c288A869",
              "type": "EOA"
            }
          ],
          "name": "Multichain MPC",
          "description": "Account controlled by the MPC nodes. Can set minters for anyTokens. Can access liquidity in anyTokens."
        }
      ],
      "milestones": [
        {
          "name": "Anyswap rebrands to Multichain",
          "date": "2021-12-16T00:00:00Z",
          "link": "https://medium.com/multichainorg/anyswap-to-officially-rebrand-as-multichain-16ee7b961ffa",
          "type": "general"
        },
        {
          "name": "Contracts hacked for $3M",
          "date": "2022-01-18T00:00:00Z",
          "description": "Multiple critical vulnerabilities were found in the contracts.",
          "link": "https://medium.com/multichainorg/multichain-contract-vulnerability-post-mortem-d37bfab237c8",
          "type": "incident"
        },
        {
          "name": "anyCall was introduced",
          "date": "2022-04-11T00:00:00Z",
          "description": "This is the generic cross-chain mechanism that Multichain uses.",
          "link": "https://medium.com/multichainorg/anycall-for-your-cross-chain-dapps-ac0ece9140e9",
          "type": "general"
        },
        {
          "name": "fastMPC was introduced",
          "date": "2022-09-21T00:00:00Z",
          "description": "It is an upgrade of the network that is used to check cross chain messages.",
          "link": "https://multichainorg.medium.com/fastmpc-mainnet-goes-live-running-in-a-decentralized-way-99f9fe2956b8",
          "type": "general"
        },
        {
          "name": "Contracts hacked for $130M",
          "date": "2023-07-07T00:00:00Z",
          "link": "https://blockworks.co/news/multichain-anyswap-exploit",
          "type": "incident"
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Multichain deep dive",
          "url": "https://li.fi/knowledge-hub/multichain-a-deep-dive/",
          "thumbnail": "lifi-01.jpg"
        },
        {
          "title": "Multichain escrow problem",
          "url": "https://twitter.com/bkiepuszewski/status/1572537802512044034",
          "thumbnail": "l2beat-03.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "near",
      "createdAt": "1662628329",
      "display": {
        "name": "Rainbow Bridge",
        "slug": "near",
        "links": {
          "websites": ["https://near.org/"],
          "explorers": [
            "https://explorer.near.org/",
            "https://aurorascan.dev/"
          ],
          "apps": ["https://rainbowbridge.app/"],
          "repositories": ["https://github.com/aurora-is-near/rainbow-bridge"],
          "socialMedia": ["https://twitter.com/auroraisnear"]
        },
        "description": "Rainbow bridge is a light client based bridge between NEAR/AURORA and Ethereum that allows for asset and data movement between these chains. For better gas efficiency from NEAR to Ethereum, it leverages optimistic validation, which adds some trust assumption and latency.",
        "category": "Token Bridge"
      },
      "config": {
        "associatedTokens": ["AURORA"],
        "escrows": [
          {
            "address": "0x23Ddd3e3692d1861Ed57EDE224608875809e127f",
            "sinceTimestamp": "1615826693",
            "tokens": "*",
            "chain": "ethereum"
          },
          {
            "address": "0x6BFaD42cFC4EfC96f529D786D643Ff4A8B89FA52",
            "sinceTimestamp": "1624579200",
            "tokens": ["ETH"],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Destination Chain",
          "description": "Transfers out of the bridge are validated using Optimistic Light Client of Near Chain on Ethereum. Transfers into NEAR are validated by Ethereum light client on NEAR side.",
          "sentiment": "warning"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Bridge cannot be upgraded but 3 / 5 Admin Multisig can move all funds out of the bridge via admin functions with no warning.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading. Tokens minted on AURORA do not appear to be verified on explorer.aurora.dev.",
          "sentiment": "bad"
        }
      },
      "technology": {
        "canonical": true,
        "destination": ["Near", "Aurora"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Rainbow is a Token Bridge that allows transferring assets and passing arbitrary messages between Ethereum, NEAR, and Aurora chains. During token transfers, Rainbow Bridge locks tokens in the escrow contracts on Ethereum and mints tokens on the Aurora or NEAR networks. When bridging back to Ethereum, tokens are burned on Aurora / NEAR and then released from the escrow on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Both inbound and outbound transfers are verified by the light client",
          "description": "Near Rainbow bridge implements a light client for both inbound and outbound transfers. For inbound transfers, checkpoints of NEAR state are submitted every 4 hours.           These are optimistically assumed to be signed by 2/3 of Near Validators. The signatures are not immediately verified by Ethereum due to a different signature scheme           used on NEAR and - as a result - very high gas cost on Ethereum. Checkpoints relayers are required to lock 5.0 ETH in order to submit block headers. If signatures are found to be invalid, checkpoints can be permissionlessly challenged and the relayers' bond is slashed.           Challengers can specify an address to receive half of the slashed bond.           Users can withdraw funds by submitting a Merkle proof of a burn event against the checkpoint.           For outbound transfers, Ethereum light client is implemented on NEAR and a Merkle proof of a lock event must be presented.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "incorrect checkpoint is submitted and nobody challenges it."
            },
            {
              "category": "Funds can be stolen if",
              "text": "bridge administrator removes funds from the bridge escrow.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        },
        "destinationToken": {
          "name": "Destination tokens are not verified",
          "description": "Tokens transferred end up as ERC20 tokens on AURORA or NEAR and they do not appear to be verified.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "NearBridge",
            "address": "0x3FEFc5A4B1c02f21cBc8D3613643ba0635b9a873",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract storing Near state checkpoints."
          },
          {
            "name": "NearProver",
            "address": "0x051AD3F020274910065Dcb421629cd2e6E5b46c4",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract verifying merkle proofs, used for withdrawals."
          },
          {
            "address": "0x23Ddd3e3692d1861Ed57EDE224608875809e127f",
            "name": "ERC20Locker",
            "description": "Escrow contract for ERC20 tokens."
          },
          {
            "address": "0x6BFaD42cFC4EfC96f529D786D643Ff4A8B89FA52",
            "name": "EthCustodian",
            "description": "Escrow contract for ETH tokens."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "BridgeAdminMultisig",
          "description": "This is a Gnosis Safe with 3 / 5 threshold.  Admin can pause/unpause contracts, modify contracts storage and delegate call to any contract. This allows for any arbitrary action including removal of all tokens from escrows.",
          "accounts": [
            {
              "address": "0x2468603819Bf09Ed3Fb6f3EFeff24B1955f3CDE1",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xed9cB50304991951Cbee747900484E9a041DA464",
              "type": "EOA"
            },
            {
              "address": "0xF58096A602C960c841Bd83A29DE21c808a9c1ac9",
              "type": "EOA"
            },
            {
              "address": "0xCFB9C137E21E199757Ae3Ce705B199CB26A3b91d",
              "type": "EOA"
            },
            {
              "address": "0x1180c536465413eE05b206b3a99d4C6a9934D2b7",
              "type": "EOA"
            },
            {
              "address": "0x8F3A347Eb3eB62fEa4975d293e052cD96abd36C6",
              "type": "EOA"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "fraxferry",
      "createdAt": "1712267205",
      "display": {
        "name": "Frax Ferry",
        "slug": "fraxferry",
        "links": {
          "websites": ["https://frax.com/"],
          "explorers": [],
          "apps": ["https://mainnet.frax.com/tools/bridge/"],
          "repositories": ["https://github.com/FraxFinance/frax-solidity"],
          "socialMedia": ["https://twitter.com/fraxfinance"]
        },
        "description": "The Frax Ferry is a permissioned bridge that can be used to transfer tokens between chains.",
        "category": "Liquidity Network"
      },
      "config": {
        "associatedTokens": [
          "FRAX",
          "FXS",
          "frxETH",
          "sfrxETH",
          "FPI",
          "FPIS",
          "sFRAX"
        ],
        "escrows": [
          {
            "address": "0x85c5f05Ae4CB68190C695a22b292C3bA90696128",
            "sinceTimestamp": "1668365795",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x4b8792aF00eaE944484bF572bc33029B2184a50C",
            "sinceTimestamp": "1674284051",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0x5878d03AA50d2c00A921948Ea8Fa5F2d247f6BDB",
            "sinceTimestamp": "1677016691",
            "tokens": ["FPI"],
            "chain": "ethereum"
          },
          {
            "address": "0xCd4aa7DB9D8a995a651498E94f6693A4D26e6C9E",
            "sinceTimestamp": "1677016811",
            "tokens": ["FPIS"],
            "chain": "ethereum"
          },
          {
            "address": "0x505603e2440b44C1602b44D0Eb8385399b3F7bab",
            "sinceTimestamp": "1673214587",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x8afd5082E0C24dEcEA39A9eFb14e4ACF4373D7D6",
            "sinceTimestamp": "1673214839",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x2453b1FbD17ceA069A31C9D16A27f4F93a85Cc0d",
            "sinceTimestamp": "1699757711",
            "tokens": ["sFRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x6ac96F65156281a9383455D704b58A74ea9C9eC4",
            "sinceTimestamp": "1667947727",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0xA381d58e96eC3818c825E1fb264099448945CF8b",
            "sinceTimestamp": "1668366083",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x9Ab224996D25bfDCB91d838F7f1902698Ac0a742",
            "sinceTimestamp": "1674285035",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0xbb6b54F8969a4711527fdF6AB852B6D6cdF368d1",
            "sinceTimestamp": "1683145403",
            "tokens": ["FPI"],
            "chain": "ethereum"
          },
          {
            "address": "0x18A5ca670dC42D0551f00E11A730074f6787f17F",
            "sinceTimestamp": "1683145475",
            "tokens": ["FPIS"],
            "chain": "ethereum"
          },
          {
            "address": "0x94ddd112C9ea0fb534e376BE09A50d310F0612b4",
            "sinceTimestamp": "1683145547",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xF380200B115Caa22D49e6C115b758d6130377620",
            "sinceTimestamp": "1683145619",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x59ae66FB395893E3FD965aDb06A52d06C49dF8A9",
            "sinceTimestamp": "1699758155",
            "tokens": ["sFRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x3eF1d856EA62A2292B8690855042095a7aC48B4b",
            "sinceTimestamp": "1672248143",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0xDAe210BfB0cF8c81EDB4b459e2e0bA14D553e2D9",
            "sinceTimestamp": "1668366227",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x9B62402Eb9A755677dEbdaE3639CB531c0Af0E5d",
            "sinceTimestamp": "1674287039",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0xfbD33d2f3330f063C87b523Ba80D5F7f296E5393",
            "sinceTimestamp": "1677016991",
            "tokens": ["FPI"],
            "chain": "ethereum"
          },
          {
            "address": "0xf18B122c3935Ff49f62C8f1f77Dc42A6F85A0bb5",
            "sinceTimestamp": "1677017087",
            "tokens": ["FPIS"],
            "chain": "ethereum"
          },
          {
            "address": "0xce4DbAF3fa72C962Ee1F371694109fc2a80B03f5",
            "sinceTimestamp": "1673215655",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x621D0e62f26314387f338A2509aFA3Ae3414661A",
            "sinceTimestamp": "1673215763",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xe3e7F354ac948ceBa925181C81618D7c9b3da8C9",
            "sinceTimestamp": "1699758071",
            "tokens": ["sFRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x2d2261f970F605C813f160E8BAEd455E9004A842",
            "sinceTimestamp": "1672248275",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0xfB788F9E20ef426a32A67986654750172A6c1788",
            "sinceTimestamp": "1668366371",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x1313d143BE1ac25aCACEFF39Bf31877bccDb9622",
            "sinceTimestamp": "1674288047",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0xaF4305d05e9B08b1D17894ce1ACE8235528f7EdE",
            "sinceTimestamp": "1674492707",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xB6b0290A39E2F896bBd8fC19cf17FE393e993dE4",
            "sinceTimestamp": "1674492947",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x5e1D94021484642863Ea8E7Cb4F0188e56B18FEE",
            "sinceTimestamp": "1708806587",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x4A6d155df9Ec9A1BB3639e6B7B99E46Fb68D42f6",
            "sinceTimestamp": "1708806875",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0x9A576A3d39c589A861B46864C253288bcA428a6c",
            "sinceTimestamp": "1708806935",
            "tokens": ["FPI"],
            "chain": "ethereum"
          },
          {
            "address": "0x958815f476cD07354c0BC034EE5077B20fD93003",
            "sinceTimestamp": "1708806995",
            "tokens": ["FPIS"],
            "chain": "ethereum"
          },
          {
            "address": "0x5c5f05cF8528FFe925A2264743bFfEdbAB2b0FE3",
            "sinceTimestamp": "1708807403",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x2b4864c2F2A2C275C6C66B90a2ae6BE9fA9cbE47",
            "sinceTimestamp": "1708807475",
            "tokens": ["sFRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0xF1E1deA8F1053FD9C5F47f72F1f03977E17aF242",
            "sinceTimestamp": "1668366491",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x2De1354c98880889643c4cA8B06FA2Fb8Fc1Fd7A",
            "sinceTimestamp": "1674326627",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0x228567c10b7533C88057c10dDeA6349360F122c5",
            "sinceTimestamp": "1673218163",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xbc3A2bF4FA20bE2056DCE5BFB168970BA657F187",
            "sinceTimestamp": "1673218571",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x15ADa72A3B52A88E25DdD2CC2bA1120234e34bb0",
            "sinceTimestamp": "1668385439",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0xFe7ebA20c20C8FF12A337F940Ce7A97c6e2594DE",
            "sinceTimestamp": "1676510819",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0x06Fa869caa1160754C6a0B744Da6454c5EA325d4",
            "sinceTimestamp": "1668366683",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x6650D5183C4Cd294a81B1F724c365b0c42f8270a",
            "sinceTimestamp": "1674326999",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0xC05DE1CB258bAdc152d8EAd3F573CA9A2E812B2a",
            "sinceTimestamp": "1680744863",
            "tokens": ["FPI"],
            "chain": "ethereum"
          },
          {
            "address": "0x8Bf7Af56bB721BC3d015111508593Fcb301546F0",
            "sinceTimestamp": "1680745019",
            "tokens": ["FPIS"],
            "chain": "ethereum"
          },
          {
            "address": "0x2F08F4645d2fA1fB12D2db8531c0c2EA0268BdE2",
            "sinceTimestamp": "1673221427",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x04ba20D2Cc47C63bce1166C2864F0241e4D0a0CC",
            "sinceTimestamp": "1673221535",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x9694dcF5b6CCF6216B05FE64945f62603e2d2367",
            "sinceTimestamp": "1699758239",
            "tokens": ["sFRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x43959A388603DCb6B02Ca084A55d4c7f3b442c57",
            "sinceTimestamp": "1668366839",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0xCa026e80F1E9e44da7ce3eD6aC2E9630260B9276",
            "sinceTimestamp": "1674325883",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0x98f5E4b7D9eDF57A6ED41b334bD40B2eAa6B6e26",
            "sinceTimestamp": "1673220695",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x91Ff54EffF7564BA3884A91d0E293502D8E6fF90",
            "sinceTimestamp": "1673220803",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x86E71075e55F0aaD27D700017E0783458310c98a",
            "sinceTimestamp": "1680647207",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0xBa32Df0b78b1A68F7FA304BbD4Ed7a56A74c525a",
            "sinceTimestamp": "1680647363",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0x45D2d8e4aB0F5af1D29305301A1b31D5d41b3349",
            "sinceTimestamp": "1680647483",
            "tokens": ["FPI"],
            "chain": "ethereum"
          },
          {
            "address": "0xF887C4cFAAfB43d1AA7De204344895591016772c",
            "sinceTimestamp": "1680647591",
            "tokens": ["FPIS"],
            "chain": "ethereum"
          },
          {
            "address": "0x3aaB5C43D4e47f71DEea94a7d541E6C07e21B137",
            "sinceTimestamp": "1680647687",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0xb8686Ef9B7ee9e73dE5d1721E4Da580278F8F4d2",
            "sinceTimestamp": "1680647783",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x602cCfee6B4BA8Eb5e35Cf26e05fDEDE379e578E",
            "sinceTimestamp": "1699758395",
            "tokens": ["sFRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x32dDf80508cfD8feD8ABe375582FC7cfD20372C4",
            "sinceTimestamp": "1682187443",
            "tokens": ["FRAX"],
            "chain": "ethereum"
          },
          {
            "address": "0x27E97F35D80514D5DD1Caa730e22a292E912a214",
            "sinceTimestamp": "1682187515",
            "tokens": ["FXS"],
            "chain": "ethereum"
          },
          {
            "address": "0x0F6136F9aBB7A0c21FbE076771625b39C544BDf5",
            "sinceTimestamp": "1682188319",
            "tokens": ["FPI"],
            "chain": "ethereum"
          },
          {
            "address": "0xFBC512849D4dcEeeFAa1bfce08B3dC9daD755482",
            "sinceTimestamp": "1682188391",
            "tokens": ["FPIS"],
            "chain": "ethereum"
          },
          {
            "address": "0x9f76b097Cd95627bFbD8052A583127FF6e7b3Fa9",
            "sinceTimestamp": "1682188475",
            "tokens": ["frxETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x29396AaE6198130A15F6Ff982C44BC4a7353Ef37",
            "sinceTimestamp": "1682188679",
            "tokens": ["sfrxETH"],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Optimistically",
          "description": "Transfers out of the bridge are considered valid if no challenge is submitted within the challenge period of 11h.",
          "sentiment": "warning"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Admin Multisig can move all funds out of the bridge via admin functions with no warning.",
          "sentiment": "bad"
        }
      },
      "technology": {
        "canonical": true,
        "destination": [
          "Arbitrum",
          "Optimism",
          "Fraxtal",
          "Boba",
          "Polygon zkEVM",
          "ZKsync"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "The Frax Ferry is a permissioned bridge that can be used to transfer tokens between chains. Users can transfer tokens to the bridge escrow on the origin chain, and the bridge administrator (the `Captain`) periodically posts hashes of transaction batches on the destination chains. After the challenge period is expired, the batch is considered valid, and another permissioned account (`First Officer`) executes the transfer of the tokens on the destination chain.",
          "references": [
            {
              "text": "Fraxferry documentation",
              "href": "https://docs.frax.finance/cross-chain/bridge"
            },
            {
              "text": "Fraxferry.sol - Etherscan source code",
              "href": "https://etherscan.io/address/0x5e1D94021484642863Ea8E7Cb4F0188e56B18FEE#code#L851"
            }
          ],
          "risks": []
        },
        "validation": {
          "name": "Both inbound and outbound transfers are verified optimistically",
          "description": "Hashes of transaction batches on the origin chains are posted periodically on the destination chains by the Frax Maintenance Bot EOA (the Captain). After the batch hash is posted on the destination chain, a challenge period begins. If no challenge is submitted within the challenge period of 11h, the batch is considered valid. The authorised bridge First Officer can then execute the transfer of the tokens on the destination chain. No slashing mechanism is implemented. During a challenge period, a batch can be challenged by a permissioned set of watchdogs, the Crew Members, by sending a transaction on the destination chain. Should a batch be disputed, the bridge is paused until it is unpaused by the bridge owner.",
          "references": [
            {
              "text": "Fraxferry - Depart transactions batch function",
              "href": "https://etherscan.io/address/0x5e1D94021484642863Ea8E7Cb4F0188e56B18FEE#code#L851"
            },
            {
              "text": "Fraxferry - Dispute Batch function",
              "href": "https://etherscan.io/address/0x5e1D94021484642863Ea8E7Cb4F0188e56B18FEE#code#L882"
            },
            {
              "text": "Fraxferry - Disembark Batch function",
              "href": "https://etherscan.io/address/0x5e1D94021484642863Ea8E7Cb4F0188e56B18FEE#code#L858"
            }
          ],
          "risks": [
            {
              "category": "Funds can be frozen if",
              "text": "a crew member pauses the contract and owner does not unpause it."
            },
            {
              "category": "Funds can be frozen if",
              "text": "the captain does not post the hash of the transaction batch, or first officer does not disembark to distribute the funds."
            },
            {
              "category": "Funds can be stolen if",
              "text": "incorrect hash is submitted and nobody challenges it."
            },
            {
              "category": "Funds can be stolen if",
              "text": "bridge owner removes funds from the bridge escrow.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens are not upgradable",
          "description": "Tokens on the destination chain are not upgradable. The owner of the token contract sets permissioned Minter addresses that can mint new tokens up to a max cap amount.",
          "references": [
            {
              "text": "Frax token - Arbiscan source code, minter_mint function",
              "href": "https://arbiscan.io/address/0x17fc002b466eec40dae837fc4be5c67993ddbd6f?a=0x5a9bef8cea603aac78a523fb245c1a9264d50706#code#L1636"
            }
          ],
          "risks": []
        }
      },
      "contracts": {
        "addresses": [
          {
            "address": "0x85c5f05Ae4CB68190C695a22b292C3bA90696128",
            "name": "FRAX Ferry Bridge (Arbitrum)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x4b8792aF00eaE944484bF572bc33029B2184a50C",
            "name": "FXS Ferry Bridge (Arbitrum)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0x5878d03AA50d2c00A921948Ea8Fa5F2d247f6BDB",
            "name": "FPI Ferry Bridge (Arbitrum)",
            "description": "FPI Bridge Contract (Escrow)."
          },
          {
            "address": "0xCd4aa7DB9D8a995a651498E94f6693A4D26e6C9E",
            "name": "FPIS Ferry Bridge (Arbitrum)",
            "description": "FPIS Bridge Contract (Escrow)."
          },
          {
            "address": "0x505603e2440b44C1602b44D0Eb8385399b3F7bab",
            "name": "frxETH Ferry Bridge (Arbitrum)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x8afd5082E0C24dEcEA39A9eFb14e4ACF4373D7D6",
            "name": "sfrxETH Ferry Bridge (Arbitrum)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x2453b1FbD17ceA069A31C9D16A27f4F93a85Cc0d",
            "name": "sFRAX Ferry Bridge (Arbitrum)",
            "description": "sFRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x6ac96F65156281a9383455D704b58A74ea9C9eC4",
            "name": "FRAX Ferry Bridge (Aurora)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0xA381d58e96eC3818c825E1fb264099448945CF8b",
            "name": "FRAX Ferry Bridge (Avalanche)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x9Ab224996D25bfDCB91d838F7f1902698Ac0a742",
            "name": "FXS Ferry Bridge (Avalanche)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0xbb6b54F8969a4711527fdF6AB852B6D6cdF368d1",
            "name": "FPI Ferry Bridge (Avalanche)",
            "description": "FPI Bridge Contract (Escrow)."
          },
          {
            "address": "0x18A5ca670dC42D0551f00E11A730074f6787f17F",
            "name": "FPIS Ferry Bridge (Avalanche)",
            "description": "FPIS Bridge Contract (Escrow)."
          },
          {
            "address": "0x94ddd112C9ea0fb534e376BE09A50d310F0612b4",
            "name": "frxETH Ferry Bridge (Avalanche)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0xF380200B115Caa22D49e6C115b758d6130377620",
            "name": "sfrxETH Ferry Bridge (Avalanche)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x59ae66FB395893E3FD965aDb06A52d06C49dF8A9",
            "name": "sFRAX Ferry Bridge (Avalanche)",
            "description": "sFRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x3eF1d856EA62A2292B8690855042095a7aC48B4b",
            "name": "FRAX Ferry Bridge (Boba)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0xDAe210BfB0cF8c81EDB4b459e2e0bA14D553e2D9",
            "name": "FRAX Ferry Bridge (bsc)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x9B62402Eb9A755677dEbdaE3639CB531c0Af0E5d",
            "name": "FXS Ferry Bridge (bsc)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0xfbD33d2f3330f063C87b523Ba80D5F7f296E5393",
            "name": "FPI Ferry Bridge (bsc)",
            "description": "FPI Bridge Contract (Escrow)."
          },
          {
            "address": "0xf18B122c3935Ff49f62C8f1f77Dc42A6F85A0bb5",
            "name": "FPIS Ferry Bridge (bsc)",
            "description": "FPIS Bridge Contract (Escrow)."
          },
          {
            "address": "0xce4DbAF3fa72C962Ee1F371694109fc2a80B03f5",
            "name": "frxETH Ferry Bridge (bsc)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x621D0e62f26314387f338A2509aFA3Ae3414661A",
            "name": "sfrxETH Ferry Bridge (bsc)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0xe3e7F354ac948ceBa925181C81618D7c9b3da8C9",
            "name": "sFRAX Ferry Bridge (bsc)",
            "description": "sFRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x2d2261f970F605C813f160E8BAEd455E9004A842",
            "name": "FRAX Ferry Bridge (evmos)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0xfB788F9E20ef426a32A67986654750172A6c1788",
            "name": "FRAX Ferry Bridge (Fantom)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x1313d143BE1ac25aCACEFF39Bf31877bccDb9622",
            "name": "FXS Ferry Bridge (Fantom)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0xaF4305d05e9B08b1D17894ce1ACE8235528f7EdE",
            "name": "frxETH Ferry Bridge (Fantom)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0xB6b0290A39E2F896bBd8fC19cf17FE393e993dE4",
            "name": "sfrxETH Ferry Bridge (Fantom)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x5e1D94021484642863Ea8E7Cb4F0188e56B18FEE",
            "name": "FRAX Ferry Bridge (Fraxtal)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x4A6d155df9Ec9A1BB3639e6B7B99E46Fb68D42f6",
            "name": "FXS Ferry Bridge (Fraxtal)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0x9A576A3d39c589A861B46864C253288bcA428a6c",
            "name": "FPI Ferry Bridge (Fraxtal)",
            "description": "FPI Bridge Contract (Escrow)."
          },
          {
            "address": "0x958815f476cD07354c0BC034EE5077B20fD93003",
            "name": "FPIS Ferry Bridge (Fraxtal)",
            "description": "FPIS Bridge Contract (Escrow)."
          },
          {
            "address": "0x5c5f05cF8528FFe925A2264743bFfEdbAB2b0FE3",
            "name": "sfrxETH Ferry Bridge (Fraxtal)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x2b4864c2F2A2C275C6C66B90a2ae6BE9fA9cbE47",
            "name": "sFRAX Ferry Bridge (Fraxtal)",
            "description": "sFRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0xF1E1deA8F1053FD9C5F47f72F1f03977E17aF242",
            "name": "FRAX Ferry Bridge (Moonbeam)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x2De1354c98880889643c4cA8B06FA2Fb8Fc1Fd7A",
            "name": "FXS Ferry Bridge (Moonbeam)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0x228567c10b7533C88057c10dDeA6349360F122c5",
            "name": "frxETH Ferry Bridge (Moonbeam)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0xbc3A2bF4FA20bE2056DCE5BFB168970BA657F187",
            "name": "sfrxETH Ferry Bridge (Moonbeam)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x15ADa72A3B52A88E25DdD2CC2bA1120234e34bb0",
            "name": "FRAX Ferry Bridge (Moonriver)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0xFe7ebA20c20C8FF12A337F940Ce7A97c6e2594DE",
            "name": "FXS Ferry Bridge (Moonriver)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0x06Fa869caa1160754C6a0B744Da6454c5EA325d4",
            "name": "FRAX Ferry Bridge (Optimism)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x6650D5183C4Cd294a81B1F724c365b0c42f8270a",
            "name": "FXS Ferry Bridge (Optimism)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0xC05DE1CB258bAdc152d8EAd3F573CA9A2E812B2a",
            "name": "FPI Ferry Bridge (Optimism)",
            "description": "FPI Bridge Contract (Escrow)."
          },
          {
            "address": "0x8Bf7Af56bB721BC3d015111508593Fcb301546F0",
            "name": "FPIS Ferry Bridge (Optimism)",
            "description": "FPIS Bridge Contract (Escrow)."
          },
          {
            "address": "0x2F08F4645d2fA1fB12D2db8531c0c2EA0268BdE2",
            "name": "frxETH Ferry Bridge (Optimism)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x04ba20D2Cc47C63bce1166C2864F0241e4D0a0CC",
            "name": "sfrxETH Ferry Bridge (Optimism)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x9694dcF5b6CCF6216B05FE64945f62603e2d2367",
            "name": "sFRAX Ferry Bridge (Optimism)",
            "description": "sFRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x43959A388603DCb6B02Ca084A55d4c7f3b442c57",
            "name": "FRAX Ferry Bridge (Polygon PoS)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0xCa026e80F1E9e44da7ce3eD6aC2E9630260B9276",
            "name": "FXS Ferry Bridge (Polygon PoS)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0x98f5E4b7D9eDF57A6ED41b334bD40B2eAa6B6e26",
            "name": "frxETH Ferry Bridge (Polygon PoS)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x91Ff54EffF7564BA3884A91d0E293502D8E6fF90",
            "name": "sfrxETH Ferry Bridge (Polygon PoS)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x86E71075e55F0aaD27D700017E0783458310c98a",
            "name": "FRAX Ferry Bridge (Polygon zkEVM)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0xBa32Df0b78b1A68F7FA304BbD4Ed7a56A74c525a",
            "name": "FXS Ferry Bridge (polygonzkEVM)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0x45D2d8e4aB0F5af1D29305301A1b31D5d41b3349",
            "name": "FPI Ferry Bridge (Polygon zkEVM)",
            "description": "FPI Bridge Contract (Escrow)."
          },
          {
            "address": "0xF887C4cFAAfB43d1AA7De204344895591016772c",
            "name": "FPIS Ferry Bridge (Polygon zkEVM)",
            "description": "FPIS Bridge Contract (Escrow)."
          },
          {
            "address": "0x3aaB5C43D4e47f71DEea94a7d541E6C07e21B137",
            "name": "frxETH Ferry Bridge (Polygon zkEVM)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0xb8686Ef9B7ee9e73dE5d1721E4Da580278F8F4d2",
            "name": "sfrxETH Ferry Bridge (Polygon zkEVM)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x602cCfee6B4BA8Eb5e35Cf26e05fDEDE379e578E",
            "name": "sFRAX Ferry Bridge (Polygon zkEVM)",
            "description": "sFRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x32dDf80508cfD8feD8ABe375582FC7cfD20372C4",
            "name": "FRAX Ferry Bridge (ZKsync)",
            "description": "FRAX Bridge Contract (Escrow)."
          },
          {
            "address": "0x27E97F35D80514D5DD1Caa730e22a292E912a214",
            "name": "FXS Ferry Bridge (ZKsync)",
            "description": "FXS Bridge Contract (Escrow)."
          },
          {
            "address": "0x0F6136F9aBB7A0c21FbE076771625b39C544BDf5",
            "name": "FPI Ferry Bridge (ZKsync)",
            "description": "FPI Bridge Contract (Escrow)."
          },
          {
            "address": "0xFBC512849D4dcEeeFAa1bfce08B3dC9daD755482",
            "name": "FPIS Ferry Bridge (ZKsync)",
            "description": "FPIS Bridge Contract (Escrow)."
          },
          {
            "address": "0x9f76b097Cd95627bFbD8052A583127FF6e7b3Fa9",
            "name": "frxETH Ferry Bridge (ZKsync)",
            "description": "frxETH Bridge Contract (Escrow)."
          },
          {
            "address": "0x29396AaE6198130A15F6Ff982C44BC4a7353Ef37",
            "name": "sfrxETH Ferry Bridge (ZKsync)",
            "description": "sfrxETH Bridge Contract (Escrow)."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "name": "Bridge Owner",
          "description": "Address authorized to pause and unpause the bridge, remove posted batches, set the challenge period, and change the bridge `Captain`, `First Officer` and `Crew Members`. It is also allowed to set fees and transfer tokens from the bridge escrow. Note that there are over 60 frax ferry bridges smart contracts, each with its own owner. Please check the owner() method of the specific escrow smart contract you are interested in.",
          "accounts": [
            {
              "address": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
              "type": "MultiSig"
            }
          ]
        },
        {
          "name": "FPI Bridge Owner",
          "description": "Has the same permissions as the above Bridge Owner, but only for the FPI and FPIS bridge contracts.",
          "accounts": [
            {
              "address": "0x6A7efa964Cf6D9Ab3BC3c47eBdDB853A8853C502",
              "type": "MultiSig"
            }
          ]
        },
        {
          "name": "Captain",
          "description": "Address authorized to post batch transaction data from the origin chain. Note that there are over 60 frax ferry bridges smart contracts, each with its own `Captain`. Please check the captain() method of the specific escrow smart contract you are interested in.",
          "accounts": [
            {
              "address": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "First Officer",
          "description": "Address authorized to distribute funds on the destination chain once the challenge period has passed. Note that there are over 60 frax ferry bridges smart contracts, each with its own `firstOfficer`. Please check the firstOfficer() method of the specific escrow smart contract you are interested in.",
          "accounts": [
            {
              "address": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Crew Members",
          "description": "Addresses authorized to dispute batch transaction data on the destination chain. Note that there are over 60 frax ferry bridges smart contracts, each with its own `crew members`. Please check the crewmember() method of the specific escrow smart contract you are interested in.",
          "accounts": [
            {
              "address": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
              "type": "EOA"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "nomad",
      "createdAt": "1662628329",
      "isArchived": true,
      "display": {
        "name": "Nomad",
        "slug": "nomad",
        "warning": "The Nomad token bridge contract has recently been exploited and currently is not operational.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://app.nomad.xyz/", "https://docs.nomad.xyz/"],
          "repositories": ["https://github.com/nomad-xyz/monorepo"],
          "socialMedia": [
            "https://twitter.com/nomadxyz_",
            "https://discord.gg/RurtmJApqm"
          ]
        },
        "description": "Nomad is a general messaging bridge that uses optimistic verification to validate cross-chain bridging transactions."
      },
      "config": {
        "escrows": [
          {
            "address": "0x88A69B4E698A4B090DF6CF5Bd7B2D47325Ad30A3",
            "sinceTimestamp": "1641899423",
            "tokens": "*",
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": ["Avalanche", "Evmos", "Milkomedia C1", "Moonbeam"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Nomad Bridge is a Token Bridge with ability to facilitate fast transfers via additional LP-provided liquidity. For deposits, it locks tokens in the escrow contracts on Ethereum and mints a \"representation token\" on the destination network. When bridging back to Ethereum tokens are burned and then released from the escrow on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Third Party",
          "description": "Messages on the source (home) chain are periodically signed by Updater. Updater cannot censor messages and if it refuses to attest them, it can be changed by the governance.         Once message batch is attested, it is relayed to the destination (replica) by the permissionless Relayers. After the 30m fraud proof window messages can be delivered to the destination         contract. During the fraud proof window, if malicious Updater tries to relay invalid message batch, anyone can submit a fraud proof to the source (home) chain slashing Updater         and stopping home contract. On the destination messages cannot be stopped, so receiving contracts have to be independently notified to not process messages. Currently this mechanism is not implemented.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "updater fails to attest messages and governance does not change the Updater.",
              "isCritical": false
            },
            {
              "category": "Funds can be stolen if",
              "text": "updater manages to relay a fraudulent message batch.",
              "isCritical": false
            },
            {
              "category": "Funds can be stolen if",
              "text": "destination contract does not block receiving fraudulent messages.",
              "isCritical": false
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens are upgradeable",
          "description": "Tokens transferred end up as \"representation tokens\" some of them may be upgradable.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Messages are relayed to the destination chain and assumed to be correct unless challenged within the 30m fraud proof window, but the slashing mechanism is not implemented yet.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Bridge can be upgraded by the Governor MultiSig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "HomeBeaconProxy",
            "address": "0x92d3404a7E6c91455BbD81475Cd9fAd96ACFF4c8",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0xdB378579c2Af11817EEA21474A39F95B5b9DfD7e"],
              "implementations": ["0xf3bb7e2d4B26ae2C3EAC41171840c227f457EA06"]
            },
            "chain": "ethereum",
            "description": "Optics Home. This contract is used to send x-chain messages, such as deposit requests. Messages are regularly signed by the Updater."
          },
          {
            "name": "ReplicaBeaconProxy",
            "address": "0x049b51e531Fd8f90da6d92EA83dC4125002F20EF",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0xdB378579c2Af11817EEA21474A39F95B5b9DfD7e"],
              "implementations": ["0x7f221A1850c12b57fed1f0831dd25399a13b68c2"]
            },
            "chain": "ethereum",
            "description": "Optics Replica. This contract is used to receive x-chain messages, such as withdrawal requests, from Relayers."
          },
          {
            "name": "BridgeRouterBeaconProxy",
            "address": "0x88A69B4E698A4B090DF6CF5Bd7B2D47325Ad30A3",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0xdB378579c2Af11817EEA21474A39F95B5b9DfD7e"],
              "implementations": ["0xe0db61ac718f502B485DEc66D013afbbE0B52F84"]
            },
            "chain": "ethereum",
            "description": "Optics Governance Router. Manages all Optics components."
          },
          {
            "name": "XAppConnectionManager",
            "address": "0xFe8874778f946Ac2990A29eba3CFd50760593B2F",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract managing list of connections to other chains (domains) and list of watchers."
          },
          {
            "name": "GovernanceRouterBeaconProxy",
            "address": "0x3009C99D370B780304D2098196f1EBF779a4777a",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0xdB378579c2Af11817EEA21474A39F95B5b9DfD7e"],
              "implementations": ["0xE9F0a0a787CEEA82f1c8fE7A783826eBD181e707"]
            },
            "chain": "ethereum",
            "description": "Optics Governance Router. Manages all Optics components."
          },
          {
            "name": "UpdaterManager",
            "address": "0x9272C9d5fa902Ef3804EC81e0333Ae420D57f715",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract allowing Home to slash Updater. Currently does nothing, intended for future functionality."
          },
          {
            "name": "UpgradeBeaconController",
            "address": "0xdB378579c2Af11817EEA21474A39F95B5b9DfD7e",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract managing Beacons."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Governor",
          "description": "This is a Gnosis Safe with 3 / 5 threshold.  Manages Optics V1 bridge components via GovernanceRouter contract.",
          "accounts": [
            {
              "address": "0x93277b8f5939975b9E6694d5Fd2837143afBf68A",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x83865712c50f702fA4650C7fadEd90A54242046e",
              "type": "EOA"
            },
            {
              "address": "0x25270d2e6980C5b343C4866Aea904a9A9bCA733F",
              "type": "EOA"
            },
            {
              "address": "0xab0614cE8d53ea2c67B87f8ad4d8Fac7A4a516e5",
              "type": "EOA"
            },
            {
              "address": "0xC69b66cc2811B509829448FBFfb2553c4CBb627e",
              "type": "EOA"
            },
            {
              "address": "0x9bdD76b2a69Db43Fa695a10f5977b8FD891225f3",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "RecoveryManager",
          "description": "This is a Gnosis Safe with 2 / 3 threshold.  Manages Optics V1 bridge recovery via GovernanceRouter contract.",
          "accounts": [
            {
              "address": "0xda2f881f7f4e9D2b9559F97c7670472A85C1986A",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xea24Ac04DEFb338CA8595C3750E20166F3b4998A",
              "type": "EOA"
            },
            {
              "address": "0xDE9cfb1216889Dee0cAB8afB04c63911427659E4",
              "type": "EOA"
            },
            {
              "address": "0xCc20f031B2F06374e4986Af33A36bDda55bed21d",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Updater",
          "accounts": [
            {
              "address": "0xa728bE5Be33E60D9c65677EBa569555536e587E4",
              "type": "EOA"
            }
          ],
          "description": "Permissioned account that can update message roots."
        },
        {
          "name": "XAppConnectionManager Watchers",
          "accounts": [
            {
              "address": "0x9782A3C8128f5D1BD3C9655d03181ba5b420883E",
              "type": "EOA"
            },
            {
              "address": "0x06D8902cfae8235047DC7783875279311798c715",
              "type": "EOA"
            },
            {
              "address": "0xcE941bbAD38B35bD7F6B039Af5AE67F8F0c99960",
              "type": "EOA"
            },
            {
              "address": "0x499B1Fa18E3CaC1c8cDF2B14C458aA70A6a2B68f",
              "type": "EOA"
            },
            {
              "address": "0x9E8e7eb5886A9C77E955Fd5D717581556eb7F98D",
              "type": "EOA"
            }
          ],
          "description": "Watchers can unenroll, i.e. stop receiving messages, from a given Replica."
        }
      ],
      "milestones": [
        {
          "name": "Contracts hacked for $190M",
          "date": "2022-08-02T00:00:00.00Z",
          "link": "https://rekt.news/nomad-rekt/",
          "type": "incident"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "omni",
      "createdAt": "1662628329",
      "display": {
        "name": "Omnibridge",
        "slug": "omni",
        "warning": null,
        "category": "Token Bridge",
        "links": {
          "websites": ["https://omni.gnosischain.com/"],
          "apps": ["https://omni.gnosischain.com/"],
          "documentation": [
            "https://docs.gnosischain.com/bridges/tokenbridge/omnibridge"
          ],
          "explorers": [
            "https://gnosisscan.io/",
            "https://explorer.anyblock.tools/ethereum/poa/xdai/",
            "https://blockscout.com/xdai/mainnet",
            "https://beacon.gnosischain.com/",
            "https://xdai.tokenview.io/"
          ],
          "socialMedia": [
            "https://twitter.com/gnosischain",
            "https://discord.gg/VQb3WzsywU",
            "https://t.me/gnosischain"
          ],
          "repositories": [
            "https://github.com/omni",
            "https://github.com/gnosischain"
          ]
        },
        "description": "Omnibridge is the official bridge of Gnosis Chain.",
        "detailedDescription": "It uses a set of trusted validators to confirm deposits for a Lock-Mint swap. Tokens sent to the bridge escrow can be further sent to yield generating contracts (e.g. AAVE) to accrue interest for external recipient, although this functionality has been disabled at the time of Ethereum Merge."
      },
      "config": {
        "associatedTokens": ["GNO"],
        "escrows": [
          {
            "address": "0x88ad09518695c6c3712AC10a214bE5109a655671",
            "sinceTimestamp": "1596501090",
            "tokens": "*",
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "4 / 7 Validator MultiSig",
          "sentiment": "bad",
          "sources": [
            {
              "contract": "ForeignAMB",
              "references": [
                "https://etherscan.io/address/0x098f51bdfb5D6d319DD4FDf06b64773d25bD1316#code#F14#L94"
              ]
            }
          ]
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Contracts can be upgraded by BridgeGovernance MultiSig",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain. Tokens transferred end up as wrapped ERC677.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": ["Gnosis Chain"],
        "canonical": true,
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "This is a Lock-Mint bridge that takes ownership of tokens in escrow contracts on Ethereum and mints \"representation tokens\" on the Gnosis Chain. When bridging back to Ethereum, tokens are burned on the Gnosis Chain and then released from the escrow on Ethereum. Tokens in Ethereum escrow are not effectively locked, as deposited tokens can be invested to generate yield (interest is intended to go to GnosisDAO). Bridge contract enables its owner (BridgeGovernance) to specify or disable a separate external contract with investment logic. Currently investment contracts have been disabled around the time of the Ethereum Merge. Previously used investment contract sent part of deposited USDC and USDT to Aave. A special care needs to be taken when bridging xDai token that is native to Gnosis Chain.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Incoming transfers are externally verified",
          "description": "Incoming messages to Ethereum are managed by the Arbitrary Message Bridge (AMB), a trusted message relaying mechanism currently validated by a 4 / 7 Validator MultiSig. The GovernanceMultisig is used for updating validator set, signature thresholds, bridge parameters and bridge contracts. For Omnibridge, messages are passed between \"Mediator\" contracts deployed on both chains. When user deposits a token to Mediator escrow on Ethereum, an AMB message is passed to Mediator on Gnosis chain, which mints a \"representation token\", optionally deploying a necessary token contract on Gnosis chain if this is the first time this token is transferred. Transfers from Gnosis chain to Ethereum use the same mechanism in the opposite direction but tokens on Gnosis are burned and tokens on Ethereum are released from escrow. Outgoing messages are verified on the Gnosis chain using a ZK Ethereum light client.",
          "references": [
            {
              "text": "Omnibridge documentation",
              "href": "https://docs.gnosischain.com/bridges/tokenbridge/omnibridge"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators decide to not pass selected messages between chains.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a fake message to Gnosis chain to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a fake message to Ethereum chain allowing a user to withdraw tokens from Ethereum escrow when equivalent amount of tokens has not been deposited and burned on Gnosis chain.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "there's an exploit in contracts that invest user deposit.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "validators don't relay messages between chains."
            },
            {
              "category": "Funds can be frozen if",
              "text": "there's insufficient liquidity of requested token in escrow and Aave."
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Users receive wrapped ERC677 tokens on Gnosis Chain. There's a separate bridge for xDai and Omnibridge should not be used, as it mints non-native \"representation version\" of xDai.",
          "references": [],
          "risks": []
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "ForeignAMB",
            "address": "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e",
            "upgradeability": {
              "proxyType": "Eternal Storage proxy",
              "admins": ["0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6"],
              "implementations": ["0x098f51bdfb5D6d319DD4FDf06b64773d25bD1316"]
            },
            "chain": "ethereum",
            "description": "Arbitrary Message Bridge validated by the BridgeValidators. The contract is pausable by BridgeGovernance.",
            "upgradableBy": ["BridgeGovernance"],
            "upgradeDelay": "No delay",
            "pausable": { "paused": false, "pausableBy": ["BridgeGovernance"] }
          },
          {
            "name": "MultiTokenMediator",
            "address": "0x88ad09518695c6c3712AC10a214bE5109a655671",
            "upgradeability": {
              "proxyType": "Eternal Storage proxy",
              "admins": ["0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6"],
              "implementations": ["0x8eB3b7D8498a6716904577b2579e1c313d48E347"]
            },
            "chain": "ethereum",
            "description": "Mediator contract and escrow.",
            "upgradableBy": ["BridgeGovernance"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "BridgeValidators",
            "address": "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064",
            "upgradeability": {
              "proxyType": "Eternal Storage proxy",
              "admins": ["0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6"],
              "implementations": ["0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218"]
            },
            "chain": "ethereum",
            "description": "Bridge validators contract, acts as a 4 / 7 multisig.",
            "upgradableBy": ["BridgeGovernance"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "AAVEInterestERC20",
            "address": "0x87D48c565D0D85770406D248efd7dc3cbd41e729",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract that was used to invest token deposits to Aave.",
            "upgradableBy": ["BridgeGovernance"],
            "upgradeDelay": "No delay"
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "BridgeGovernance",
          "description": "This is a Gnosis Safe with 8 / 16 threshold.  Can update the contracts and parameters of the bridge.",
          "accounts": [
            {
              "address": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
              "type": "MultiSig"
            },
            {
              "address": "0xb8173f558f75EE263013fd6294177bf75279a21e",
              "type": "EOA"
            },
            {
              "address": "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
              "type": "EOA"
            },
            {
              "address": "0xAC0622953d25e1a6c4e0f32Ffc1A9C1cE350B60E",
              "type": "EOA"
            },
            {
              "address": "0x86Da253817DC599059e3AD5A1F098F7b96aBf34c",
              "type": "EOA"
            },
            {
              "address": "0x1685324Bf373670ad5C9c56bd88A1dc1C063b0f9",
              "type": "EOA"
            },
            {
              "address": "0x0101016044726994aFd16f4A99f0d960090D35e7",
              "type": "EOA"
            },
            {
              "address": "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
              "type": "EOA"
            },
            {
              "address": "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
              "type": "EOA"
            },
            {
              "address": "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
              "type": "EOA"
            },
            {
              "address": "0xd945325557f1FB4374fBf10Ae86D385632Df870A",
              "type": "EOA"
            },
            {
              "address": "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
              "type": "EOA"
            },
            {
              "address": "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
              "type": "EOA"
            },
            {
              "address": "0xd26a3F686D43f2A62BA9eaE2ff77e9f516d945B9",
              "type": "EOA"
            },
            {
              "address": "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
              "type": "EOA"
            },
            {
              "address": "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Bridge validators",
          "accounts": [
            {
              "address": "0x3e0A20099626F3d4d4Ea7B0cE0330e88d1Fe65D6",
              "type": "EOA"
            },
            {
              "address": "0xfA98B60E02A61B6590f073cAD56e68326652d094",
              "type": "EOA"
            },
            {
              "address": "0xbDc141c8D2343f33F40Cb9edD601CcF460CD0dDe",
              "type": "EOA"
            },
            {
              "address": "0x674c97db4cE6caC04A124d745979f3E4cBa0E9f0",
              "type": "EOA"
            },
            {
              "address": "0x258667E543C913264388B33328337257aF208a8f",
              "type": "EOA"
            },
            {
              "address": "0x459A3bd49F1ff109bc90b76125533699AaAAf9A6",
              "type": "EOA"
            },
            {
              "address": "0x105CD22eD3D089Bf5589C59b452f9dE0796Ca52d",
              "type": "EOA"
            }
          ],
          "description": "List of actors that can validate incoming messages."
        }
      ]
    },
    {
      "type": "bridge",
      "id": "opticsV1",
      "createdAt": "1662628329",
      "display": {
        "name": "Optics V1",
        "slug": "opticsv1",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://old.optics.app/"],
          "repositories": ["https://github.com/celo-org/optics-monorepo"],
          "socialMedia": ["https://twitter.com/CeloOrg"]
        },
        "description": "Optics is a general messaging bridge that uses optimistic verification to validate cross-chain bridging transactions.",
        "detailedDescription": "Version 2 of the bridge was deployed after Celo governance lost control over the governors MultiSig keys."
      },
      "config": {
        "escrows": [
          {
            "address": "0x6a39909e805A3eaDd2b61fFf61147796ca6aBB47",
            "newVersion": true,
            "sinceTimestamp": "1631142795",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x6a39909e805A3eaDd2b61fFf61147796ca6aBB47",
              "upgradeability": {
                "proxyType": "Optics Beacon proxy",
                "admins": ["0xbB6d6333FAFd2cae7ef4c5EFBF8f048F2F109D1B"],
                "implementations": [
                  "0x67364232A8f8dA6f22dF3bE3408ef9872132F2A6"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "technology": {
        "destination": ["Celo", "Polygon"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Optics Bridge is a Token Bridge with ability to facilitate fast transfers via additional LP-provided liquidity. For deposits, it locks tokens in the escrow contracts on Ethereum and mints a \"representation token\" on the destination network. When bridging back to Ethereum tokens are burned and then released from the escrow on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Third Party",
          "description": "Messages on the source (home) chain are periodically signed by Updater. Updater cannot censor messages and if it refuses to attest them, it can be changed by the governance.         Once message batch is attested, it is relayed to the destination (replica) by the permissionless Relayers. After the 3h fraud proof window messages can be delivered to the destination         contract. During the fraud proof window, if malicious Updater tries to relay invalid message batch, anyone can submit a fraud proof to the source (home) chain slashing Updater         and stopping home contract. On the destination messages cannot be stopped, so receiving contracts have to be independently notified to not process messages. Currently this mechanism is not implemented.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "updater fails to attest messages and governance does not change the Updater.",
              "isCritical": false
            },
            {
              "category": "Funds can be stolen if",
              "text": "updater manages to relay a fraudulent message batch.",
              "isCritical": false
            },
            {
              "category": "Funds can be stolen if",
              "text": "destination contract does not block receiving fraudulent messages.",
              "isCritical": false
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens are upgradeable",
          "description": "Tokens transferred end up as \"representation tokens\" some of them may be upgradable.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Messages are relayed to the destination chain and assumed to be correct unless challenged within the 3h fraud proof window, but the slashing mechanism is not implemented yet.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Bridge can be upgraded by the Governor MultiSig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "HomeBeaconProxy",
            "address": "0xf25C5932bb6EFc7afA4895D9916F2abD7151BF97",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0xbB6d6333FAFd2cae7ef4c5EFBF8f048F2F109D1B"],
              "implementations": ["0xfAc41463ef1E01546F2130F92184a053A0E3Fa14"]
            },
            "chain": "ethereum",
            "description": "Optics Home. This contract is used to send x-chain messages, such as deposit requests. Messages are regularly signed by the Updater."
          },
          {
            "name": "ReplicaBeaconProxy",
            "address": "0x7725EadaC5Ee986CAc8317a1d2fB16e59e079E8b",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0xbB6d6333FAFd2cae7ef4c5EFBF8f048F2F109D1B"],
              "implementations": ["0xFC4060e4Fd5979f848b8EDc8505d2f89D83b9E04"]
            },
            "chain": "ethereum",
            "description": "Optics Replica. This contract is used to receive x-chain messages, such as withdrawal requests, from Relayers."
          },
          {
            "name": "BridgeRouterBeaconProxy",
            "address": "0x6a39909e805A3eaDd2b61fFf61147796ca6aBB47",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0xbB6d6333FAFd2cae7ef4c5EFBF8f048F2F109D1B"],
              "implementations": ["0x67364232A8f8dA6f22dF3bE3408ef9872132F2A6"]
            },
            "chain": "ethereum",
            "description": "Optics Governance Router. Manages all Optics components."
          },
          {
            "name": "XAppConnectionManager",
            "address": "0xcEc158A719d11005Bd9339865965bed938BEafA3",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract managing list of connections to other chains (domains) and list of watchers."
          },
          {
            "name": "GovernanceRouterBeaconProxy",
            "address": "0x42303634F37956687fB7ff2c6146AC842481A052",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0xbB6d6333FAFd2cae7ef4c5EFBF8f048F2F109D1B"],
              "implementations": ["0xDFb2A95900d6b7c8AA95F2E46563a5FCFb5505A1"]
            },
            "chain": "ethereum",
            "description": "Optics Governance Router. Manages all Optics components."
          },
          {
            "name": "UpdaterManager",
            "address": "0x2CC80EE8a3f9c85309866F4C6BDF82f6846891EC",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract allowing Home to slash Updater. Currently does nothing, intended for future functionality."
          },
          {
            "name": "UpgradeBeaconController",
            "address": "0xbB6d6333FAFd2cae7ef4c5EFBF8f048F2F109D1B",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract managing Beacons."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Governor",
          "description": "This is a Gnosis Safe with 3 / 7 threshold.  Manages Optics V1 bridge components via GovernanceRouter contract.",
          "accounts": [
            {
              "address": "0x5Fa96B622D1F4e920b92040c10fA297ca496ad37",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x7d7cd2ED526F99D05A05a93CCf42C1ADdBe78552",
              "type": "EOA"
            },
            {
              "address": "0x63c079444e07D82d33399DE7D56d6E48740494c7",
              "type": "EOA"
            },
            {
              "address": "0x5c95FED053997f30b7Aa69979C208a5D15479f5D",
              "type": "EOA"
            },
            {
              "address": "0x229D3A236158482728f1dc107E3b01514053307b",
              "type": "EOA"
            },
            {
              "address": "0xBcd15f82Ae461335257d0851A18948784cF79E9d",
              "type": "MultiSig"
            },
            {
              "address": "0xB98E1f5358cd8A285a34ae59898309baA2E2e712",
              "type": "EOA"
            },
            {
              "address": "0x07f5bFE05C5C4BF4a86af7BAf667e3737A3BA18F",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "RecoveryManager",
          "description": "This is a Gnosis Safe with 4 / 7 threshold.  Manages Optics V1 bridge recovery via GovernanceRouter contract.",
          "accounts": [
            {
              "address": "0x2bB2a5A724170357cb691841F40d26A950d8C33D",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xFCcD3516d6BB62b009088aDae1E349430dDF6e77",
              "type": "EOA"
            },
            {
              "address": "0x63c079444e07D82d33399DE7D56d6E48740494c7",
              "type": "EOA"
            },
            {
              "address": "0xa725898D6F73C512f803B564A89DFbd96cF298EC",
              "type": "EOA"
            },
            {
              "address": "0xd85DC9A21378EF738A248236E970c2e0be89C9c2",
              "type": "EOA"
            },
            {
              "address": "0xeE2b1e23e71052860C14f69E84AAF78478606D63",
              "type": "EOA"
            },
            {
              "address": "0x7d7cd2ED526F99D05A05a93CCf42C1ADdBe78552",
              "type": "EOA"
            },
            {
              "address": "0x7519Db53B63d72721470319A5F4462D587Bb3008",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Updater",
          "accounts": [
            {
              "address": "0xDB2091535eb0Ee447Ce170DDC25204FEA822dd81",
              "type": "EOA"
            }
          ],
          "description": "Permissioned account that can update message roots."
        },
        {
          "name": "XAppConnectionManager Watchers",
          "accounts": [
            {
              "address": "0xeE42B7757798cf495CDaA8eDb0CC237F07c60C81",
              "type": "EOA"
            }
          ],
          "description": "Watchers can unenroll, i.e. stop receiving messages, from a given Replica."
        }
      ]
    },
    {
      "type": "bridge",
      "id": "opticsV2",
      "createdAt": "1662628329",
      "display": {
        "name": "Optics V2",
        "slug": "opticsv2",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://optics.app/"],
          "repositories": ["https://github.com/celo-org/optics-monorepo"],
          "socialMedia": ["https://twitter.com/CeloOrg"]
        },
        "description": "Optics is a general messaging bridge that uses optimistic verification to validate cross-chain bridging transactions.",
        "detailedDescription": "Version 2 of the bridge was deployed after Celo governance lost control over the governors MultiSig keys."
      },
      "config": {
        "escrows": [
          {
            "address": "0x4fc16De11deAc71E8b2Db539d82d93BE4b486892",
            "newVersion": true,
            "sinceTimestamp": "1637963549",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x4fc16De11deAc71E8b2Db539d82d93BE4b486892",
              "upgradeability": {
                "proxyType": "Optics Beacon proxy",
                "admins": ["0x4F50a7081792063693F46A6402390b9647562457"],
                "implementations": [
                  "0x688A54c4b1C5b917154Ea2f61B8A4A4CbDfF4738"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "technology": {
        "destination": ["Celo", "Polygon"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Optics Bridge is a Token Bridge with ability to facilitate fast transfers via additional LP-provided liquidity. For deposits, it locks tokens in the escrow contracts on Ethereum and mints a \"representation token\" on the destination network. When bridging back to Ethereum tokens are burned and then released from the escrow on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Third Party",
          "description": "Messages on the source (home) chain are periodically signed by Updater. Updater cannot censor messages and if it refuses to attest them, it can be changed by the governance.         Once message batch is attested, it is relayed to the destination (replica) by the permissionless Relayers. After the 30m fraud proof window messages can be delivered to the destination         contract. During the fraud proof window, if malicious Updater tries to relay invalid message batch, anyone can submit a fraud proof to the source (home) chain slashing Updater         and stopping home contract. On the destination messages cannot be stopped, so receiving contracts have to be independently notified to not process messages. Currently this mechanism is not implemented.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "updater fails to attest messages and governance does not change the Updater.",
              "isCritical": false
            },
            {
              "category": "Funds can be stolen if",
              "text": "updater manages to relay a fraudulent message batch.",
              "isCritical": false
            },
            {
              "category": "Funds can be stolen if",
              "text": "destination contract does not block receiving fraudulent messages.",
              "isCritical": false
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens are upgradeable",
          "description": "Tokens transferred end up as \"representation tokens\" some of them may be upgradable.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Messages are relayed to the destination chain and assumed to be correct unless challenged within the 30m fraud proof window, but the slashing mechanism is not implemented yet.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Bridge can be upgraded by the Governor MultiSig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "HomeBeaconProxy",
            "address": "0xa73a3a74C7044B5411bD61E1990618A1400DA379",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0x4F50a7081792063693F46A6402390b9647562457"],
              "implementations": ["0xfc6E146384b5c65f372d5b20537F3e8727aD3723"]
            },
            "chain": "ethereum",
            "description": "Optics Home. This contract is used to send x-chain messages, such as deposit requests. Messages are regularly signed by the Updater."
          },
          {
            "name": "ReplicaBeaconProxy",
            "address": "0x27658c5556A9a57f96E69Bbf6d3B8016f001a785",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0x4F50a7081792063693F46A6402390b9647562457"],
              "implementations": ["0x8F6b6aDB49cDCa3b9F6947F61a1201242C3d827F"]
            },
            "chain": "ethereum",
            "description": "Optics Replica. This contract is used to receive x-chain messages, such as withdrawal requests, from Relayers."
          },
          {
            "name": "BridgeRouterBeaconProxy",
            "address": "0x4fc16De11deAc71E8b2Db539d82d93BE4b486892",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0x4F50a7081792063693F46A6402390b9647562457"],
              "implementations": ["0x688A54c4b1C5b917154Ea2f61B8A4A4CbDfF4738"]
            },
            "chain": "ethereum",
            "description": "Optics Governance Router. Manages all Optics components."
          },
          {
            "name": "XAppConnectionManager",
            "address": "0x8A926cE79f83A5A4C234BeE93feAFCC85b1E40cD",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract managing list of connections to other chains (domains) and list of watchers."
          },
          {
            "name": "GovernanceRouterBeaconProxy",
            "address": "0xcbcF180dbd02460dCFCdD282A0985DdC049a4c94",
            "upgradeability": {
              "proxyType": "Optics Beacon proxy",
              "admins": ["0x4F50a7081792063693F46A6402390b9647562457"],
              "implementations": ["0xe552861e90a42ddDC66b508A18a85bCEAbFcB835"]
            },
            "chain": "ethereum",
            "description": "Optics Governance Router. Manages all Optics components."
          },
          {
            "name": "UpdaterManager",
            "address": "0x81B97dfBB743c343983e9bE7B863dB636DbD7373",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract allowing Home to slash Updater. Currently does nothing, intended for future functionality."
          },
          {
            "name": "UpgradeBeaconController",
            "address": "0x4F50a7081792063693F46A6402390b9647562457",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract managing Beacons."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Governor",
          "accounts": [],
          "description": "A multisig on Celo Network that manages all Optics V1 bridge components."
        },
        {
          "name": "RecoveryManager",
          "description": "This is a Gnosis Safe with 4 / 7 threshold.  Manages Optics V1 bridge recovery via GovernanceRouter contract.",
          "accounts": [
            {
              "address": "0x2bB2a5A724170357cb691841F40d26A950d8C33D",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xFCcD3516d6BB62b009088aDae1E349430dDF6e77",
              "type": "EOA"
            },
            {
              "address": "0x63c079444e07D82d33399DE7D56d6E48740494c7",
              "type": "EOA"
            },
            {
              "address": "0xa725898D6F73C512f803B564A89DFbd96cF298EC",
              "type": "EOA"
            },
            {
              "address": "0xd85DC9A21378EF738A248236E970c2e0be89C9c2",
              "type": "EOA"
            },
            {
              "address": "0xeE2b1e23e71052860C14f69E84AAF78478606D63",
              "type": "EOA"
            },
            {
              "address": "0x7d7cd2ED526F99D05A05a93CCf42C1ADdBe78552",
              "type": "EOA"
            },
            {
              "address": "0x7519Db53B63d72721470319A5F4462D587Bb3008",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Updater",
          "accounts": [
            {
              "address": "0x5Ef6e0F6A7E1f866612D806041799a9D762b62c0",
              "type": "EOA"
            }
          ],
          "description": "Permissioned account that can update message roots."
        },
        {
          "name": "XAppConnectionManager Watchers",
          "accounts": [
            {
              "address": "0xD0D09d9CF712ccE87141Dfa22a3aBBDb7B1c296e",
              "type": "EOA"
            }
          ],
          "description": "Watchers can unenroll, i.e. stop receiving messages, from a given Replica."
        }
      ]
    },
    {
      "type": "bridge",
      "id": "orbit",
      "createdAt": "1663234549",
      "display": {
        "name": "Orbit Bridge",
        "slug": "orbit",
        "warning": "Orbit Bridge has been hacked on 1 Jan 2024 and is potentially not safe to use.",
        "category": "Token Bridge",
        "links": {
          "websites": [
            "https://bridge.orbitchain.io/",
            "https://orbitchain.io/about"
          ],
          "apps": ["https://bridge.orbitchain.io/"],
          "socialMedia": [
            "https://twitter.com/Orbit_Chain",
            "https://t.me/OrbitChainGlobal",
            "https://discord.gg/orbit-chain"
          ],
          "documentation": ["https://bridge-docs.orbitchain.io/"],
          "repositories": ["https://github.com/orbit-chain"],
          "explorers": [
            "https://bridge.orbitchain.io/history/token/ALL",
            "https://explorer.orbitchain.io"
          ]
        },
        "description": "Orbit Bridge is part of the Orbit Chain project. It is a cross-chain bridge that allows users to transfer tokens between supported blockchains.",
        "detailedDescription": "Tokens are deposited on the source chain and \"representation tokens\" are minted on the destination chain. Deposited tokens are not precisely locked and can be used in DeFi protocols by Orbit Farm. Accrued interest is not passed directly to token depositors."
      },
      "config": {
        "associatedTokens": ["ORC"],
        "escrows": [
          {
            "address": "0x1Bf68A9d1EaEe7826b3593C20a0ca93293cb489a",
            "sinceTimestamp": "1603950507",
            "tokens": ["ETH", "USDT", "DAI", "USDC", "WBTC", "MATIC"],
            "chain": "ethereum"
          },
          {
            "address": "0xBe03a2569d10fd10bDbfE84f5f2E22D9cec4aCd0",
            "sinceTimestamp": "1603950507",
            "tokens": ["cDAI"],
            "chain": "ethereum"
          },
          {
            "address": "0x830433dE03ABedE062660CC629e1A2c714272474",
            "sinceTimestamp": "1603950507",
            "tokens": ["cUSDC"],
            "chain": "ethereum"
          },
          {
            "address": "0xd910f6F23889919fAd9C8cE3171dd557cE0308Da",
            "sinceTimestamp": "1603950507",
            "tokens": ["cWBTC"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": [
          "Orbit",
          "Klaytn",
          "BNB",
          "Avalanche",
          "Celo",
          "Fantom",
          "destination",
          "HECO",
          "ICON",
          "OKC",
          "Polygon"
        ],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "description": "Orbit Bridge is a cross-chain bridge that allows users to transfer tokens between different blockchains. Tokens are deposited on the source chain and \"representation tokens\" are minted on the destination chain. When a user deposits tokens to an escrow contract on Ethereum, a message is relayed to a group o validators via Orbit Hub contract on Orbit chain to a minter contract on a destination chain, where \"representation tokens\" are minted. Deposited tokens are not locked and can be used in DeFi by Orbit Farm. When a user deposits minted tokens on the destination chain, they are burned and a message is relayed to validators through Orbit Hub contract on Orbit chain to the ETH vault bridge contract, which releases the tokens if at least 6 / 9 validators have signed and liquidity is available. The source code of the farm contracts is not verified on Etherscan.",
          "references": [
            {
              "text": "Bridging transactions",
              "href": "https://bridge-docs.orbitchain.io/bridging-transaction"
            }
          ],
          "risks": [],
          "isIncomplete": true
        },
        "validation": {
          "name": "Validation",
          "description": "Orbit Bridge actors include Operators and Validators. Operators relay data between Orbit Chain and supported chains, while Validators build multi-sig based consensus on validity of transactions.",
          "references": [
            {
              "text": "Orbit Bridge - How it works",
              "href": "https://bridge-docs.orbitchain.io/how-it-works"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators decide to not pass selected messages between chains.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a fake message to a destination chain to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a fake message to Ethereum chain allowing a user to withdraw tokens from Ethereum escrow when equivalent amount of tokens has not been deposited and burned on destination chain.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "there's an exploit in contracts that invest user deposit.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "validators don't relay messages between chains."
            },
            {
              "category": "Funds can be frozen if",
              "text": "there's insufficient liquidity of requested token in escrow."
            }
          ],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "MultiSig, quorum depends on destination",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Contract can be upgraded by the 6 / 9 Orbit MultiSig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading. Tokens are minted as Orbit Bridge specific oTokens.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "ETH Vault",
            "address": "0x1Bf68A9d1EaEe7826b3593C20a0ca93293cb489a",
            "upgradeability": {
              "proxyType": "call implementation proxy",
              "admins": [],
              "implementations": ["0xC3430BC8C2C05FC6b42114BF7F82a3e2f3Ee9454"]
            },
            "chain": "ethereum",
            "description": "Bridge contract, Proxy, Escrow, Governance."
          },
          {
            "name": "USDT Farm",
            "address": "0x378F1CD69e1012cfe8FbeAfFeC02630190fda4d9",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xFb504CD4eD46024B83c4337044995CF112205f18"],
              "implementations": ["0xdbF3C7e0a1493B81B295547ae3D0711417481A55"]
            },
            "chain": "ethereum",
            "description": "USDT Compound Farm."
          },
          {
            "name": "DAI Farm",
            "address": "0xBe03a2569d10fd10bDbfE84f5f2E22D9cec4aCd0",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xFb504CD4eD46024B83c4337044995CF112205f18"],
              "implementations": ["0xdbF3C7e0a1493B81B295547ae3D0711417481A55"]
            },
            "chain": "ethereum",
            "description": "DAI Compound Farm."
          },
          {
            "name": "USDC Farm",
            "address": "0x830433dE03ABedE062660CC629e1A2c714272474",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xFb504CD4eD46024B83c4337044995CF112205f18"],
              "implementations": ["0xdbF3C7e0a1493B81B295547ae3D0711417481A55"]
            },
            "chain": "ethereum",
            "description": "USDC Compound Farm."
          },
          {
            "name": "WBTC Farm",
            "address": "0xd910f6F23889919fAd9C8cE3171dd557cE0308Da",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xFb504CD4eD46024B83c4337044995CF112205f18"],
              "implementations": ["0xdbF3C7e0a1493B81B295547ae3D0711417481A55"]
            },
            "chain": "ethereum",
            "description": "WBTC Compound Farm."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Bridge contract Governance",
          "accounts": [
            {
              "address": "0x35f720fd3042EC8b05b7c8C8c0B33e45d71ad5Ba",
              "type": "EOA"
            },
            {
              "address": "0x98A86EB9Ff3B473E61B7b7a82Dd2c328323A66D0",
              "type": "EOA"
            },
            {
              "address": "0x86cec292d5d5DB6bA16722F0B01291426C4b61E2",
              "type": "EOA"
            },
            {
              "address": "0x501A0F1436555E124c14ad9c1E48742F734B5179",
              "type": "EOA"
            },
            {
              "address": "0x8257E89eaBAFb01589351e431EB328E0dDc51fcD",
              "type": "EOA"
            },
            {
              "address": "0x8c7aa8Bf53f881703e7a9672C863Eb6147e43214",
              "type": "EOA"
            },
            {
              "address": "0xDF91c9BF46DD6f214AAB47F7AC9d64c22596d930",
              "type": "EOA"
            },
            {
              "address": "0xE1A22D823bDb4A9Ed2Bdd1743628533Fa0C7f704",
              "type": "EOA"
            },
            {
              "address": "0x1e3B165817b0f2935E1599eD5449a28f67D399EC",
              "type": "EOA"
            }
          ],
          "description": "Participants of the Bridge Governance: 6 / 9 Orbit Multisig. They have admin access to the proxies' functions and can upgrade the bridge implementation without delay."
        },
        {
          "name": "Policy Admin",
          "accounts": [
            {
              "address": "0x09F3320e8d2dBD8913659bAb28940bb4f041eaD8",
              "type": "Contract"
            }
          ],
          "description": "Can set bridging fees, gas limits and can pause / unpause the bridge or censor individual withdrawals."
        }
      ],
      "milestones": [
        {
          "name": "Orbit Bridge hacked for $81.5M",
          "date": "2024-01-01T00:00:00.00Z",
          "link": "https://digifinex.medium.com/orbit-bridge-hacked-for-81-5-million-orbit-chain-ecosystem-plummets-1fe5b8d85ff3",
          "type": "incident"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "orbiter",
      "createdAt": "1662628329",
      "display": {
        "name": "Orbiter",
        "slug": "orbiter",
        "category": "Liquidity Network",
        "links": {
          "websites": ["https://orbiter.finance/"],
          "documentation": ["https://docs.orbiter.finance/"],
          "repositories": ["https://github.com/Orbiter-Finance"],
          "socialMedia": [
            "https://twitter.com/Orbiter_Finance",
            "https://orbiter-finance.medium.com/",
            "https://discord.gg/hJJvXP7C73",
            "https://reddit.com/r/OrbiterFinance/",
            "https://youtube.com/channel/UC8oEJxM3_4IAYtEeAzR2bog"
          ]
        },
        "description": "Orbiter Bridge is a cross-rollup bridge that uses liquidity provided by Makers on supported chains to perform swaps."
      },
      "config": {
        "escrows": [
          {
            "address": "0x80C67432656d59144cEFf962E8fAF8926599bCF8",
            "sinceTimestamp": "1649170157",
            "tokens": ["ETH"],
            "chain": "ethereum"
          },
          {
            "address": "0x41d3D33156aE7c62c094AAe2995003aE63f587B3",
            "sinceTimestamp": "1635067681",
            "tokens": ["USDC"],
            "chain": "ethereum"
          },
          {
            "address": "0xd7Aa9ba6cAAC7b0436c91396f22ca5a7F31664fC",
            "sinceTimestamp": "1654853887",
            "tokens": ["USDT"],
            "chain": "ethereum"
          },
          {
            "address": "0x095D2918B03b2e86D68551DCF11302121fb626c9",
            "sinceTimestamp": "1666335431",
            "tokens": ["DAI"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": [
          "ZKsync",
          "Polygon",
          "Arbitrum",
          "Arbitrum Nova",
          "Loopring",
          "Optimism",
          "ZKSpace",
          "Immutable X",
          "Metis",
          "dYdX",
          "Boba",
          "Starknet",
          "BNB Chain"
        ],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "description": "Orbiter Bridge is a cross-rollup bridge that uses liquidity provided by Makers to perform swaps. Makers provide liquidity to their own accounts (EOAs) on supported chains. A user performing a swap deposits tokens to Maker's EOA on source chain and that Maker is supposed to release corresponding tokens from their EOA on the destination chain. Currently only Orbiter team is acting as Makers.",
          "references": [
            {
              "text": "Documentation - Maker System",
              "href": "https://docs.orbiter.finance/makersystem"
            },
            {
              "text": "Documentation - Technology",
              "href": "https://docs.orbiter.finance/technology"
            }
          ],
          "risks": []
        },
        "validation": {
          "name": "Validation",
          "description": "Even though the Orbiter team has plans to deploy a set of contracts that will i.e. require independent makers to post bonds as safeguard against not meeting their obligations, currently the system relies on trust that Orbiter Makers will disburse required tokens on the destination chain after seeing user's deposit on the source chain.",
          "references": [
            {
              "text": "Documentation - Maker System",
              "href": "https://docs.orbiter.finance/makersystem"
            }
          ],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "selected Maker decides to misuse user's funds.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "selected Maker doesn't act on user deposit.",
              "isCritical": true
            },
            {
              "category": "Users can be censored if",
              "text": "selected Maker doesn't act on user deposit.",
              "isCritical": true
            }
          ]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Withdrawals are validated by EOA.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "contracts": {
        "addresses": [
          {
            "address": "0xD9D74a29307cc6Fc8BF424ee4217f1A587FBc8Dc",
            "name": "OBSource",
            "description": "Proxies transfers into Makers' accounts (when using custom frontend via SDK)."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "accounts": [
            {
              "address": "0x80C67432656d59144cEFf962E8fAF8926599bCF8",
              "type": "EOA"
            }
          ],
          "name": "ETH escrow",
          "description": "Maker account for ETH deposits/withdrawals"
        },
        {
          "accounts": [
            {
              "address": "0x41d3D33156aE7c62c094AAe2995003aE63f587B3",
              "type": "EOA"
            }
          ],
          "name": "USDC escrow",
          "description": "Maker account for USDC deposits/withdrawals"
        },
        {
          "accounts": [
            {
              "address": "0xd7Aa9ba6cAAC7b0436c91396f22ca5a7F31664fC",
              "type": "EOA"
            }
          ],
          "name": "USDT escrow",
          "description": "Maker account for USDT deposits/withdrawals"
        },
        {
          "accounts": [
            {
              "address": "0x095D2918B03b2e86D68551DCF11302121fb626c9",
              "type": "EOA"
            }
          ],
          "name": "DAI escrow",
          "description": "Maker account for DAI deposits/withdrawals"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "polygon-pos",
      "createdAt": "1664808578",
      "display": {
        "name": "Polygon PoS",
        "slug": "polygon-pos",
        "links": {
          "websites": ["https://polygon.technology"],
          "explorers": ["https://polygonscan.com"],
          "apps": ["https://wallet.polygon.technology"],
          "repositories": ["https://github.com/maticnetwork/"],
          "socialMedia": [
            "https://twitter.com/0xPolygon",
            "https://forum.polygon.technology/",
            "https://reddit.com/r/0xPolygon/",
            "https://facebook.com/0xPolygon.Technology",
            "https://linkedin.com/company/0xpolygon/",
            "https://youtube.com/c/PolygonTV",
            "https://instagram.com/0xpolygon/"
          ]
        },
        "description": "Polygon PoS it the official bridge provided by the Polygon team to bridge assets from Ethereum to Polygon chain. The bridge is validated by Polygon validators and allows for asset as well as data movement between Polygon and Ethereum.",
        "category": "Token Bridge"
      },
      "config": {
        "associatedTokens": ["POL", "MATIC"],
        "escrows": [
          {
            "address": "0x401F6c983eA34274ec46f84D70b31C151321188b",
            "newVersion": true,
            "sinceTimestamp": "1590850640",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x401F6c983eA34274ec46f84D70b31C151321188b",
              "upgradeability": {
                "proxyType": "EIP897 proxy",
                "admins": [],
                "implementations": [
                  "0xb00aa68b87256E2F22058fB2Ba3246EEc54A44fc"
                ],
                "immutable": false
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": ["PolygonMultisig"],
              "upgradeDelay": "No delay"
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf",
            "newVersion": true,
            "sinceTimestamp": "1598436664",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf",
              "upgradeability": {
                "proxyType": "Polygon proxy",
                "admins": ["0xCaf0aa768A3AE1297DF20072419Db8Bb8b5C8cEf"],
                "implementations": [
                  "0xB1fd4ae726c64A793588001EB465c46BD1BdF1cB"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": ["PolygonMultisig"],
              "upgradeDelay": "No delay"
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x9923263fA127b3d1484cFD649df8f1831c2A74e4",
            "newVersion": true,
            "sinceTimestamp": "1613100777",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x9923263fA127b3d1484cFD649df8f1831c2A74e4",
              "upgradeability": {
                "proxyType": "Polygon proxy",
                "admins": ["0xCaf0aa768A3AE1297DF20072419Db8Bb8b5C8cEf"],
                "implementations": [
                  "0x94D40724d6aA4AB313065006E4bA8CA448dcDfae"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": ["PolygonMultisig"],
              "upgradeDelay": "No delay"
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30",
            "newVersion": true,
            "sinceTimestamp": "1598437971",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30",
              "upgradeability": {
                "proxyType": "Polygon proxy",
                "admins": ["0xCaf0aa768A3AE1297DF20072419Db8Bb8b5C8cEf"],
                "implementations": [
                  "0xeB185ED8f664D105903EF434E5becd214a8AC874"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": ["PolygonMultisig"],
              "upgradeDelay": "No delay"
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x21ada4D8A799c4b0ADF100eB597a6f1321bCD3E4",
            "newVersion": true,
            "sinceTimestamp": "1627373890",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x21ada4D8A799c4b0ADF100eB597a6f1321bCD3E4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": ["PolygonMultisig"],
              "upgradeDelay": "No delay"
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xa45b966996374E9e65ab991C6FE4Bfce3a56DDe8",
            "newVersion": true,
            "sinceTimestamp": "1590840981",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xa45b966996374E9e65ab991C6FE4Bfce3a56DDe8",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Destination Chain",
          "description": "Transfers need to be confirmed by 2/3 of Polygon PoS Validators stake.",
          "sentiment": "warning"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "The bridge can be upgraded by 5/9 MSig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading. Tokens transferred end up as ERC20 proxies, some of them are upgradable. The contract is named UChildERC20Proxy.",
          "sentiment": "warning"
        }
      },
      "technology": {
        "destination": ["Polygon"],
        "canonical": true,
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "This is a very typical Token Bridge that locks tokens in the escrow contracts on Ethereum and mints tokens on the Polygon network. When bridging back to Ethereum tokens are burned on Polygon and then released from the escrow on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Outbound transfers are externally verified, inbound require merkle proof",
          "description": "Validators on the Polygon network watch for events on Ethereum, and when they see that tokens have been locked they mint new tokens on Polygon. Around every 30 minutes validators submit new Polygon state checkpoints to the Ethereum smart contracts. To withdraw tokens, users need to present a merkle proof of a burn event that is verified against the checkpoints.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators on Polygon decide to not mint tokens after observing an event on Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators decide to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators submit a fraudulent checkpoint allowing themselves to withdraw all locked funds.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        },
        "destinationToken": {
          "name": "Destination tokens are upgradeable",
          "description": "Tokens transferred end up as wrapped ERC20 proxies, some of them are upgradable. The contract is named UChildERC20Proxy.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "RootChain",
            "address": "0x86E4Dc95c7FBdBf52e33D563BbDB00823894C287",
            "upgradeability": {
              "proxyType": "EIP897 proxy",
              "admins": [],
              "implementations": ["0x536c55cFe4892E581806e10b38dFE8083551bd03"],
              "immutable": false
            },
            "chain": "ethereum",
            "description": "Contract storing Polygon PoS chain checkpoints. Note that validity of these checkpoints is not verified, it is assumed to be valid if signed by 2/3 of the Polygon Validators.",
            "upgradableBy": ["PolygonMultisig"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "StateSender",
            "address": "0x28e4F3a7f651294B9564800b2D01f35189A5bFbE",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Smart contract allowing whitelisted addresses to send messages to contracts on Polygon PoS chain."
          },
          {
            "name": "RootChainManager",
            "address": "0xA0c68C638235ee32657e8f720a23ceC1bFc77C77",
            "upgradeability": {
              "proxyType": "Polygon proxy",
              "admins": ["0xCaf0aa768A3AE1297DF20072419Db8Bb8b5C8cEf"],
              "implementations": ["0x8F372f5404514cec63A3F88BAac772Cc620F2281"]
            },
            "chain": "ethereum",
            "description": "Main configuration contract to manage tokens, token types, escrows (predicates) for given token types.          It also serves as an entry point for deposits and withdrawals effectively acting as a token router.",
            "upgradableBy": ["PolygonMultisig"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "StakeManager",
            "address": "0x5e3Ef299fDDf15eAa0432E6e66473ace8c13D908",
            "upgradeability": {
              "proxyType": "Polygon proxy",
              "admins": ["0xCaf0aa768A3AE1297DF20072419Db8Bb8b5C8cEf"],
              "implementations": ["0x97a3500083348A147F419b8a65717909762c389f"]
            },
            "chain": "ethereum",
            "description": "Main configuration contract to manage stakers and their voting power and validate checkpoint signatures.",
            "upgradableBy": ["PolygonMultisig"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "StakingInfo",
            "address": "0xa59C847Bd5aC0172Ff4FE912C5d29E5A71A7512B",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contains logging and getter functions about staking on Polygon."
          },
          {
            "name": "SlashingManager",
            "address": "0x01F645DcD6C796F6BC6C982159B32fAaaebdC96A",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "A contract priviliged to slash validators in StakeManager via slash() method.",
            "upgradableBy": ["PolygonMultisig"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "Registry",
            "address": "0x33a02E6cC863D393d6Bf231B697b82F6e499cA71",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Maintains the addresses of the contracts used in the system."
          },
          {
            "name": "StateSender",
            "address": "0x28e4F3a7f651294B9564800b2D01f35189A5bFbE",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Smart contract containing the logic for syncing the state of registered bridges to the other chain."
          },
          {
            "name": "DepositManager",
            "address": "0x401F6c983eA34274ec46f84D70b31C151321188b",
            "upgradeability": {
              "proxyType": "EIP897 proxy",
              "admins": [],
              "implementations": ["0xb00aa68b87256E2F22058fB2Ba3246EEc54A44fc"],
              "immutable": false
            },
            "chain": "ethereum",
            "description": "Contract to deposit and escrow ETH, ERC20 or ERC721 tokens. Currently only used for POL.",
            "upgradableBy": ["PolygonMultisig"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "WithdrawManager",
            "address": "0x2A88696e0fFA76bAA1338F2C74497cC013495922",
            "upgradeability": {
              "proxyType": "EIP897 proxy",
              "admins": [],
              "implementations": ["0x31f9c8c786aD7cc70ad10cF136B36681d340b792"],
              "immutable": false
            },
            "chain": "ethereum",
            "description": "Contract handling users' withdrawal finalization for tokens escrowed in DepositManager.",
            "upgradableBy": ["PolygonMultisig"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "ERC20PredicateBurnOnly",
            "address": "0x626fb210bf50e201ED62cA2705c16DE2a53DC966",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract used to initiate ERC20 token withdrawals. The function to handle Plasma proofs is empty, meaning exits cannot be challenged."
          },
          {
            "name": "ERC721PredicateBurnOnly",
            "address": "0x36C2503d53C6948331144b85D1e74a3B96731d1b",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract used to initiate ERC721 token withdrawals. The function to handle Plasma proofs is empty, meaning exits cannot be challenged."
          },
          {
            "name": "EventsHub",
            "address": "0x6dF5CB08d3f0193C768C8A01f42ac4424DC5086b",
            "upgradeability": {
              "proxyType": "Polygon proxy",
              "admins": ["0xCaf0aa768A3AE1297DF20072419Db8Bb8b5C8cEf"],
              "implementations": ["0x0672777617CAA1E778083a4f74eBC997262C9EdD"]
            },
            "chain": "ethereum",
            "description": "Contains events used by other contracts in the system.",
            "upgradableBy": ["PolygonMultisig"],
            "upgradeDelay": "No delay"
          },
          {
            "name": "ExitNFT",
            "address": "0xDF74156420Bd57ab387B195ed81EcA36F9fABAca",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "NFTs used to represent a withdrawal in the withdrawal PriorityQueue (Only used for tokens initially deposited via DepositManager)."
          },
          {
            "name": "Timelock",
            "address": "0xCaf0aa768A3AE1297DF20072419Db8Bb8b5C8cEf",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract enforcing delay on code upgrades. The current delay is 0s."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "PolygonMultisig",
          "description": "This is a Gnosis Safe with 5 / 9 threshold.  Can propose and execute code upgrades.",
          "accounts": [
            {
              "address": "0xFa7D2a996aC6350f4b56C043112Da0366a59b74c",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xA7499Aa6464c078EeB940da2fc95C6aCd010c3Cc",
              "type": "EOA"
            },
            {
              "address": "0x1aE033D45ce93bbB0dDBF71a0Da9de01FeFD8529",
              "type": "EOA"
            },
            {
              "address": "0x0D2600C228D9Bcc9757B64bBb232F86A912B7b03",
              "type": "EOA"
            },
            {
              "address": "0xD0FD9303fe99EdFAF5eD4A2c1657a347d8053C9a",
              "type": "EOA"
            },
            {
              "address": "0x39415255619783A2E71fcF7d8f708A951d92e1b6",
              "type": "EOA"
            },
            {
              "address": "0xb771380f912E4b5F6beDdf81314C383c13F16ab5",
              "type": "EOA"
            },
            {
              "address": "0x803B74766D8f79195D4DaeCF6f2aac31Dba78F25",
              "type": "EOA"
            },
            {
              "address": "0x80D63799b1e08a80f73FB7a83264b5c31600bF3a",
              "type": "EOA"
            },
            {
              "address": "0x8Eab5aEfe2755E1bAD2052944Ea096AEbdA1d602",
              "type": "EOA"
            }
          ]
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Is Polygon a side-chain?",
          "url": "https://twitter.com/bkiepuszewski/status/1380404149888675840",
          "thumbnail": "l2beat-03.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "polynetwork",
      "createdAt": "1662628329",
      "display": {
        "name": "Poly Bridge",
        "slug": "polynetwork",
        "warning": null,
        "links": {
          "websites": ["https://bridge.poly.network/", "https://poly.network/"],
          "apps": ["https://bridge.poly.network/"],
          "socialMedia": [
            "https://twitter.com/PolyNetwork2",
            "https://polynetwork.medium.com/",
            "https://youtube.com/channel/UC4vFRyVgvK7RnlkkLDmp23w",
            "https://discord.gg/y6MuEnq"
          ],
          "repositories": ["https://github.com/polynetwork"],
          "documentation": [
            "https://dev-docs.poly.network/",
            "https://github.com/PolygonNetwork/docs",
            "https://github.com/PolygonNetwork/docs/blob/master/eth/README.md"
          ]
        },
        "description": "Poly Bridge allows users to transfer assets between different blockchains using Lock-Mint swap.",
        "detailedDescription": "It uses a PolyNetwork chain to verify and coordinate message passing between Relayers on supported chains. Each chain has a set of Relayers, while PolyNetwork chain has a set of Keepers that sign cross-chain messages. Chains integrated with Poly Bridge need to support light client verification, since validation of cross-chain messages includes verifying block headers and transactions via Merkle proofs. Some of the smart contracts used by the bridge infrastructure are not verified on Etherscan.",
        "category": "Token Bridge"
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "3/4 MultiSig of PolyNetwork Keepers",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Contracts can be upgraded",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x250e76987d838a75310c34bf422ea9f1AC4Cc906",
            "sinceTimestamp": "1599099893",
            "tokens": "*",
            "chain": "ethereum"
          },
          {
            "address": "0x53D23ba1c38D6ECf2B7f213F7CF22b17AE3BB868",
            "sinceTimestamp": "1666256303",
            "tokens": ["ETH"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": ["Various"],
        "canonical": false,
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Poly Bridge operation is centered around PolyNetwork chain that acts as a type of a light client for all supported chains. Each supported chain has a set or Relayers that transmit successive block headers to the PolyNetwork chain, as well as lock or burn events. Those events, after passing verification on PolyNetwork chain, are relayed to the destination chain by Relayers that are responsible for the destination chain. Relayers on the destination chain pass messages to appropriate contracts that mint or release corresponding tokens to the user after verifying validity of the message.",
          "references": [
            {
              "text": "Poly Bridge docs",
              "href": "https://github.com/polynetwork/poly-bridge/tree/master/doc"
            }
          ],
          "risks": [
            {
              "category": "Funds can be frozen if",
              "text": "contract Owner pauses one of the bridge contracts."
            }
          ],
          "isIncomplete": true
        },
        "validation": {
          "name": "Validation of cross-chain transactions",
          "description": "Each supported chain has a set of Relayers that are responsible for sending successive block headers since pre-specified origin to the PolyNetwork chain, which stores these blocks after validating their aspects, such as structure, difficulty, consistency with previous blocks, etc. When user locks or burns an asset for a cross-chain swap, an event is relayed by Relayer to the PolyNetwork chain with a Merkle proof of that transaction being included in a block. The PolyNetwork chain is able to verify Merkle proof using block headers that it keeps. PolyNetwork chain itself uses a set of Keepers to sign transactions after checking their validity. Once a cross-chain transaction is verified on PolyNetwork, an event is emitted that is picked by Relayers on the destination chain. The block header and Merkle proof for a transaction on a source chain is validated by a contract on the destination chain (if it supports such verification) and the asset is minted or released to the recipient.",
          "references": [
            {
              "text": "Header verification source code",
              "href": "https://github.com/polynetwork/poly/blob/master/native/service/header_sync/eth/header_sync.go#L99"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "chain Relayers decide to not pass certain transactions to the destination chain.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "a fake block header is relayed through the PolyNetwork chain that allows to prove a burn/mint transaction that never occurred on the source chain.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "chain Relayers don't relay messages."
            },
            {
              "category": "Funds can be frozen if",
              "text": "the PolyNetwork Keepers don't sign messages."
            }
          ],
          "isIncomplete": true
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "PolyWrapper",
            "address": "0x81910675DbaF69deE0fD77570BFD07f8E436386A",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Entrypoint contract for the bridge. It proxies requests to LockProxy."
          },
          {
            "name": "Lock Proxy 1",
            "address": "0x250e76987d838a75310c34bf422ea9f1AC4Cc906",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and proxy contract for the Bridge."
          },
          {
            "name": "Lock Proxy 2",
            "address": "0x7b9Bb72F187B3cb2CaA9Cf1cE95A938f0a66DB54",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and proxy contract for the Bridge."
          },
          {
            "name": "Lock Proxy 3",
            "address": "0x3Ee764C95e9d2264DE3717a4CB45BCd3c5F00035",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and proxy contract for the Bridge."
          },
          {
            "name": "Lock Proxy 4",
            "address": "0x53D23ba1c38D6ECf2B7f213F7CF22b17AE3BB868",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and proxy contract for the Bridge."
          },
          {
            "name": "Lock Proxy 5",
            "address": "0xf6378141BC900020a438F3914e4C3ceA29907b27",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and proxy contract for the Bridge."
          },
          {
            "name": "Lock Proxy 6",
            "address": "0x669E211454Ee9AAaf4C229A8985F5D20D3B5d1BC",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and proxy contract for the Bridge."
          },
          {
            "name": "Lock Proxy 7",
            "address": "0x51ba447DaD1de30b91286471BcB570F69ECE968D",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and proxy contract for the Bridge."
          },
          {
            "name": "Lock Proxy 8",
            "address": "0xead16Ae2c301C48Ea011A36Eef9337507673DFc0",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Escrow and proxy contract for the Bridge."
          },
          {
            "name": "EthCrossChainManager",
            "address": "0x14413419452Aaf089762A0c5e95eD2A13bBC488C",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract responsible for building cross-chain messages and validating incoming messages, including Merkle proofs. The contract is pausable by EthCrossChainManager.",
            "pausable": {
              "paused": false,
              "pausableBy": ["EthCrossChainManager"]
            }
          },
          {
            "name": "EthCrossChainData",
            "address": "0xcF2afe102057bA5c16f899271045a0A37fCb10f2",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Used to store Keepers' signatures and other parameters used by EthCrossChainManager."
          },
          {
            "name": "EthCrossChainManagerProxy",
            "address": "0x5a51E2ebF8D136926b9cA7b59B60464E7C44d2Eb",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Used to proxy requests from LockProxy to EthCrossChainManager. The contract is pausable by EthCrossChainManager.",
            "pausable": {
              "paused": false,
              "pausableBy": ["EthCrossChainManager"]
            }
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "accounts": [
            {
              "address": "0x0E860F44d73F9FDbaF5E9B19aFC554Bf3C8E8A57",
              "type": "EOA"
            }
          ],
          "name": "Owner and Fee Collector at PolyWrapper and owner at LockProxyWithLP",
          "description": "Can add new bridge contracts (Escrows, LockProxy), pause the bridge, and transfer to itself all funds and ERC20 tokens of the PolyWrapper contract."
        },
        {
          "accounts": [
            {
              "address": "0x5a51E2ebF8D136926b9cA7b59B60464E7C44d2Eb",
              "type": "Contract"
            }
          ],
          "name": "Owner of EthCrossChainManager",
          "description": "Can pause the contracts and update implementation of EthCrossChainData contract."
        },
        {
          "accounts": [
            {
              "address": "0xB9078AC14fc8B9181B02368bA4E34DA53Bf43D02",
              "type": "EOA"
            },
            {
              "address": "0x0E860F44d73F9FDbaF5E9B19aFC554Bf3C8E8A57",
              "type": "EOA"
            },
            {
              "address": "0x52D858ef5e0A768C80C38617eB8a7680f4D4d459",
              "type": "EOA"
            },
            {
              "address": "0xeF86b2c8740518548ae449c4C3892B4be0475d8c",
              "type": "EOA"
            },
            {
              "address": "0x0E860F44d73F9FDbaF5E9B19aFC554Bf3C8E8A57",
              "type": "EOA"
            }
          ],
          "name": "Lock Proxy owners",
          "description": "Can update address of EthCrossChainManagerProxy contract."
        }
      ],
      "milestones": [
        {
          "name": "New deployments suspended",
          "date": "2024-04-10T00:00:00.00Z",
          "link": "https://x.com/PolyNetwork2/status/1778012918941892984",
          "type": "general"
        },
        {
          "name": "Contracts hacked for $611M",
          "date": "2021-08-10T00:00:00.00Z",
          "link": "https://en.wikipedia.org/wiki/Poly_Network_exploit",
          "type": "incident"
        },
        {
          "name": "Compromised multisig steals funds",
          "date": "2023-07-03T00:00:00.00Z",
          "link": "https://rekt.news/poly-network-rekt2/",
          "type": "incident"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "pNetwork",
      "createdAt": "1674472649",
      "display": {
        "name": "pNetwork",
        "slug": "pnetwork",
        "warning": "TVL of the bridge does not take into the account pTokens minted on Ethereum. These are wrapped tokens that should be backed 1:1 with their native counterparts on    other chains, for example pBTC being backed by BTC on  Bitcoin or pFTM backed by FTM on Fantom.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://p.network/"],
          "apps": ["https://dapp.ptokens.io/"],
          "repositories": ["https://github.com/provable-things"],
          "documentation": ["https://docs.p.network/en/home"],
          "socialMedia": [
            "https://t.me/pNetworkDefi",
            "https://provablethings.medium.com/",
            "https://twitter.com/pNetworkDeFi"
          ]
        },
        "description": "pNetwork aims to be a decentralized system facilitating cross-chain movement of assets.",
        "detailedDescription": "It is built as a simple Token Bridge that uses a single EOA address to move assets across. For a typical token transfer, \"pToken\" is minted on the destination chain."
      },
      "config": {
        "associatedTokens": ["PNT"],
        "escrows": [
          {
            "address": "0xe396757EC7E6aC7C8E5ABE7285dde47b98F22db8",
            "sinceTimestamp": "1640867581",
            "tokens": ["GALA", "PNT", "USDT", "USDC"],
            "chain": "ethereum"
          },
          {
            "address": "0x9f8622b11984AfC8f0a42A394928702017c5968D",
            "sinceTimestamp": "1626265622",
            "tokens": ["UOS"],
            "chain": "ethereum"
          },
          {
            "address": "0x112334f50Cb6efcff4e35Ae51A022dBE41a48135",
            "sinceTimestamp": "1620212602",
            "tokens": ["WETH", "LRC", "BAT", "DAI", "ZRX", "PNT"],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be signed offchain by a designed address.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "The code that secures the system can be changed arbitrarily and without notice.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      },
      "technology": {
        "destination": [
          "Algorand",
          "Polygon",
          "Arbitrum",
          "Bitcoin",
          "BSC",
          "EOS",
          "Telos",
          "xDAI",
          "Ultra",
          "Fio",
          "Fantom",
          "Phoenix"
        ],
        "canonical": false,
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "This is a Token Bridge that locks tokens in the escrow contracts on Ethereum and mints \"pTokens\" on the destination network. The validation of cross-chain transactions        is performed by a group of Validators running MPC protocol that control one EOA address on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "External Validators observe events on pNetwork bridge and sign transfer requests on destination chain. On Ethereum a single EOA address controls such transfers.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators decide to stop processing certain transactions.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators allow to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators sign a fraudulent message allowing themselves to withdraw all locked funds.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Tokens transferred end up as their wrapped representation (pTokens). Note: on November 2022, due to misconfiguration, control over pGALA token on BSC        was taken over by an unknown attacker that could have resulted in minting unlimited amount of unbacked pGALA tokens.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ]
        }
      },
      "contracts": {
        "isIncomplete": true,
        "addresses": [
          {
            "name": "ERC20 Vault V2",
            "address": "0xe396757EC7E6aC7C8E5ABE7285dde47b98F22db8",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xDc2c547F6b6a89F1D96d66d50fDCbD69979Aee2a"],
              "implementations": ["0x34D085516f9D7794192aDB10C995d9c532E335aF"]
            },
            "chain": "ethereum",
            "description": "Has special logic for handling inflation of PNT token."
          },
          {
            "name": "ERC20 Vault V1",
            "address": "0x112334f50Cb6efcff4e35Ae51A022dBE41a48135",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "UOS Vault",
            "address": "0x9f8622b11984AfC8f0a42A394928702017c5968D",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "PProxyAdmin",
            "address": "0xDc2c547F6b6a89F1D96d66d50fDCbD69979Aee2a",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Proxy owner of ERC20 Vault v2."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "PNETWORK",
          "description": "A set of EOA addresses (different ones for different Vault contracts) that can transfer tokens and perform admin functions. It is supposed to be controlled by a group of Validator nodes in a MPC network.",
          "accounts": [
            {
              "address": "0x341aA660fD5c280F5a9501E3822bB4a98E816D1b",
              "type": "EOA"
            },
            {
              "address": "0xDffE7AC6B538B4A7Fd81c98C5fba0415d63fB132",
              "type": "EOA"
            },
            {
              "address": "0x14C4d33549d2A9e17d7dF6Cf180162A575D4cBe9",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "pNetwork DAO",
          "description": "A voting contract that controls the inflation withdrawal logic of PNT token.",
          "accounts": [
            {
              "address": "0x2211bFD97b1c02aE8Ac305d206e9780ba7D8BfF4",
              "type": "Contract"
            }
          ]
        },
        {
          "name": "pNetwork Multisig",
          "description": "This is a Gnosis Safe with 2 / 4 threshold.  Can upgrade ERC20 Vault V2.",
          "accounts": [
            {
              "address": "0xb5977b683c64fce80A1f5b587964b6f77Ee6CfDB",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x4b8736CCB7226F3353aC6c2f98f34bbAc2a68C45",
              "type": "EOA"
            },
            {
              "address": "0x3aA6eB007D58dcdfbD5eAD9ef69dd23316887262",
              "type": "EOA"
            },
            {
              "address": "0xb95932E9dBC985306699e0D2977FfdDbfaCBdB20",
              "type": "EOA"
            },
            {
              "address": "0x3fcf46d517b00289c3620F1EEa8B57Ce3A35Bd1f",
              "type": "EOA"
            }
          ]
        }
      ],
      "milestones": [
        {
          "name": "Mainnet Launch of pNetwork v2",
          "link": "https://medium.com/pnetwork/ptokens-to-ptokens-bridge-now-live-8329dd93dd28",
          "date": "2022-10-18T00:00:00Z",
          "description": "Whitelist got removed, there are no restrictions on who can transact with the network.",
          "type": "general"
        },
        {
          "name": "pGALA token on BSC exploit",
          "link": "https://medium.com/pnetwork/pgala-post-mortem-measures-taken-to-safeguard-the-ecosystem-from-malicious-actors-and-recovery-6407048f4497",
          "date": "2022-11-05T00:00:00Z",
          "description": "Due to the misconfiguration of BSC the exploiter took over the control of pGALA tokens.",
          "type": "general"
        },
        {
          "name": "pBTC token on BSC exploit",
          "link": "https://medium.com/pnetwork/pnetwork-post-mortem-pbtc-on-bsc-exploit-170890c58d5f",
          "date": "2021-09-21T00:00:00Z",
          "description": "Due to the bug in the validators code, unauthorized token transfers were processed on BTC.",
          "type": "general"
        },
        {
          "name": "pNetwork rebranding",
          "link": "https://medium.com/pnetwork/were-all-in-for-pnetwork-bdf511410cc9",
          "date": "2020-09-16T00:00:00Z",
          "description": "Provable Things, pTokens and Eidoo gets rebranded as pNetwork.",
          "type": "general"
        },
        {
          "name": "pBTC launch on Ethereum",
          "link": "https://www.coindesk.com/tech/2020/03/05/new-cross-chain-network-plans-to-bring-bitcoins-liquidity-to-the-defi-space/",
          "date": "2020-03-05T00:00:00Z",
          "description": "Launch of the first pToken, pBTC on Ethereum.",
          "type": "general"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "pulseChain",
      "createdAt": "1684347955",
      "display": {
        "name": "PulseChain",
        "slug": "pulsechain",
        "description": "Bridge used to transfer assets from Ethereum to PulseChain. Transfers are validated by set of trusted Validators.",
        "category": "Token Bridge",
        "links": {
          "websites": [
            "https://pulsechain.com/",
            "https://bridge.pulsechain.com/#/bridge"
          ],
          "socialMedia": [
            "https://twitter.com/PulseChainCom",
            "https://t.me/PulseChainCom"
          ]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x1715a3E4A142d8b698131108995174F37aEBA10D",
            "newVersion": true,
            "sinceTimestamp": "1684137600",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x1715a3E4A142d8b698131108995174F37aEBA10D",
              "upgradeability": {
                "proxyType": "Eternal Storage proxy",
                "admins": ["0x13A9594a2696D3c35F9D6E4Be6b332f699C57801"],
                "implementations": [
                  "0xB7DF1E00ae030e966E635ede273625240546B873"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "technology": {
        "destination": ["PulseChain"],
        "validation": {
          "name": "Validation",
          "description": "PulseChain Bridge stores a number of Validators which need to sign off every message coming from the PulseChain. Once quorum of signatures is         reached, message (e.g. withdrawal request) can be relayed to a destination contract.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators decide to not pass selected messages between chains.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a fake message to a destination chain to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a fake message to Ethereum chain allowing a user to withdraw tokens from Ethereum escrow when equivalent amount of tokens has not been deposited and burned on destination chain.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "validators don't relay messages between chains."
            }
          ],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be signed offchain by a designed list of Validators.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "The code that secures the system can be changed arbitrarily and without notice.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "ForeignOmnibridge",
            "address": "0x1715a3E4A142d8b698131108995174F37aEBA10D",
            "upgradeability": {
              "proxyType": "Eternal Storage proxy",
              "admins": ["0x13A9594a2696D3c35F9D6E4Be6b332f699C57801"],
              "implementations": ["0xB7DF1E00ae030e966E635ede273625240546B873"]
            },
            "chain": "ethereum",
            "description": "The main Bridge contract and the escrow for the PulseChain bridge. It is used to deposit tokens to the bridge."
          },
          {
            "name": "ForeignAMB",
            "address": "0xd0764FAe29E0a6a96fF685f71CfC685456D5636c",
            "upgradeability": {
              "proxyType": "Eternal Storage proxy",
              "admins": ["0xDf5d165A7EB95D26355c56d53799B7da1240e585"],
              "implementations": ["0xe98699957d3504aCD57ffF861E4b77b57eB02467"]
            },
            "chain": "ethereum",
            "description": "The Arbitrary Message Bridge receiving messages from the Foreign Chain. It is used for processing withdrawals from the bridge."
          },
          {
            "name": "BridgeValidators",
            "address": "0x2fa878Ab3F87CC1C9737Fc071108F904c0B0C95d",
            "upgradeability": {
              "proxyType": "Eternal Storage proxy",
              "admins": ["0xDf5d165A7EB95D26355c56d53799B7da1240e585"],
              "implementations": ["0x95B303987A60C71504D99Aa1b13B4DA07b0790ab"]
            },
            "chain": "ethereum",
            "description": "Contract managing the list of trusted bridge Validators."
          },
          {
            "name": "WETHOmnibridgeRouter",
            "address": "0x8AC4ae65b3656e26dC4e0e69108B392283350f55",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The Auxiliary contract that handles wrapped tokens."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Validators",
          "description": "Permissioned set of validators that can sign off any arbitrary message from PulseChain including withdrawal request. 5 / 8 signatures        are required.",
          "accounts": [
            {
              "address": "0xf6ab64f43F3f9eB88c9D99D119F26Ece13843FC0",
              "type": "EOA"
            },
            {
              "address": "0x1daD947dD181fAa6c751ec14e2683e0A8fE2bf8c",
              "type": "EOA"
            },
            {
              "address": "0xd4Aa3dFe78D2B77C5A5618B9E85D1141f2b48fbD",
              "type": "EOA"
            },
            {
              "address": "0xfB18Da3bCA8057eB05aab6e77a32925949093533",
              "type": "EOA"
            },
            {
              "address": "0xe158313e347ED8d52e9FBfF7aE5000aEAbDDbeDa",
              "type": "EOA"
            },
            {
              "address": "0x5ECfE77502317F3677f23C3b8Ab17929ACE3D74E",
              "type": "EOA"
            },
            {
              "address": "0xFE9a08BB3ce6C1946c40b8767feF2F97B400dd2C",
              "type": "EOA"
            },
            {
              "address": "0xe3B95d0143956A8E643FA29a0795FC4162A41F69",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Owner of Validators contract",
          "description": "Owner of Validators contract keeping a list of current Validators. Can add/remove Validators.",
          "accounts": [
            {
              "address": "0x3eA02EF8A3956f69D23B5B30327E0F5e352E513f",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Upgradeability Owner of main bridge contract",
          "description": "Owner of the main bridge contract, able to upgrade the contract with no notice.",
          "accounts": [
            {
              "address": "0x13A9594a2696D3c35F9D6E4Be6b332f699C57801",
              "type": "EOA"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "ronin",
      "createdAt": "1662628329",
      "display": {
        "name": "Ronin V3",
        "slug": "ronin",
        "warning": null,
        "links": {
          "websites": ["https://bridge.roninchain.com/"],
          "apps": ["https://bridge.roninchain.com/"],
          "documentation": ["https://docs.roninchain.com/get-started"],
          "explorers": ["https://explorer.roninchain.com/"],
          "socialMedia": [
            "https://discord.gg/axie",
            "https://twitter.com/ronin_network",
            "https://twitter.com/SkyMavisHQ"
          ]
        },
        "description": "Ronin Bridge V3 is the official bridge for the Axie Infinity chain (Ronin chain). It uses external validators to confirm deposits for a typical Token Bridge swap.",
        "category": "Token Bridge"
      },
      "config": {
        "associatedTokens": ["AXS"],
        "escrows": [
          {
            "address": "0x1A2a1c938CE3eC39b6D47113c7955bAa9DD454F2",
            "sinceTimestamp": "1611575595",
            "tokens": ["ETH", "AXS", "WETH", "USDC", "USDT", "MATIC", "LINK"],
            "chain": "ethereum"
          },
          {
            "address": "0x64192819Ac13Ef72bF6b5AE239AC672B43a9AF08",
            "sinceTimestamp": "1655883630",
            "tokens": [
              "ETH",
              "AXS",
              "WETH",
              "USDC",
              "SLP",
              "USDT",
              "MATIC",
              "LINK"
            ],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "70% out of 22 operators.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Gateway Proxy can be upgraded by 70% out of 22 operators.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain. The Ronin explorer does not show contract source code!",
          "sentiment": "warning"
        }
      },
      "technology": {
        "destination": ["Axie Infinity Chain"],
        "canonical": true,
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "This is a typical Token Bridge that locks tokens in the escrow contracts on Ethereum and mints tokens on the Ronin network. When bridging back to Ethereum tokens are burned on Ronin and then released from the escrow on Ethereum.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "A Ronin Bridge service watches for events on Ethereum and transmits those events to a contract on Ronin chain (Axie Infinity chain). Designated group of weighted validators vote on the validity of those events, and when acknowledged, a \"representation token\" is minted on the Ronin chain. To withdraw tokens, user needs to deposit them to a contract on the Ronin chain, which will generate an event to be picked by the validators. When validators acknowledge the event, they generate signature, which can be submitted to the Ethereum bridge contract to finalize the withdrawal. Ronin V2 introduced multi-tier withdrawal limits dependent on the overall value of the transaction and the token used. The higher value of transaction, the more validators need to vote to approve withdrawal request. There is a separate group of actors called \"governors\" who are able to change thresholds, add/remove validators and update contracts. Each validator has a corresponding weighted governor account. There is also a daily withdrawal limit. If it's crossed, an address from a list of \"Withdrawal unlockers\" needs to participate in the transaction.",
          "references": [
            {
              "text": "Token withdrawals",
              "href": "https://docs.roninchain.com/apps/ronin-bridge/withdraw-token"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators decide to not approve a token mint after observing an event on Ethereum.",
              "isCritical": true
            },
            {
              "category": "Users can be censored if",
              "text": "validators decide not to sign withdrawal requests.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators allow to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "malicious validators generate signature of a fake withdrawal request.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "withdrawal limits are misconfigured."
            }
          ],
          "isIncomplete": true
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Tokens transferred end up as wrapped ERC20/ERC721.",
          "references": [],
          "risks": [],
          "isIncomplete": true
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "MainchainGateway",
            "address": "0x64192819Ac13Ef72bF6b5AE239AC672B43a9AF08",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x2Cf3CFb17774Ce0CFa34bB3f3761904e7fc3FaDB"],
              "implementations": ["0xD6c4986bbe09f2dDb262B4611b0BA06891be605e"]
            },
            "chain": "ethereum",
            "description": "Bridge V3 contract handling deposits and withdrawals.",
            "upgradableBy": ["MainchainBridgeManager Governors"],
            "upgradeDelay": "No delay",
            "pausable": {
              "paused": false,
              "pausableBy": ["MainchainGatewayV3 Sentry Account"]
            }
          },
          {
            "name": "MainchainBridgeManager",
            "address": "0x2Cf3CFb17774Ce0CFa34bB3f3761904e7fc3FaDB",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x51F6696Ae42C6C40CA9F5955EcA2aaaB1Cefb26e"],
              "implementations": ["0x0ac26945032143f6196d4bb5Ae03592BfAf822FD"]
            },
            "chain": "ethereum",
            "description": "Contract storing all operators, governors and their associated weights. It is used to manage all administrative actions of the bridge."
          },
          {
            "name": "PauseEnforcer",
            "address": "0xe514d9DEB7966c8BE0ca922de8a064264eA6bcd4",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract owning the emergencyPauser role in the MainchainGateway and managing its access control."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "MainchainBridgeManager Operators",
          "accounts": [
            {
              "address": "0xc23F2907Bc11848B5d5cEdBB835e915D7b760d99",
              "type": "EOA"
            },
            {
              "address": "0x4b3844A29CFA5824F53e2137Edb6dc2b54501BeA",
              "type": "EOA"
            },
            {
              "address": "0x4a4217d8751a027D853785824eF40522c512A3Fe",
              "type": "EOA"
            },
            {
              "address": "0x32cB6da260726BB2192c4085B857aFD945A215Cb",
              "type": "EOA"
            },
            {
              "address": "0xA91D05b7c6e684F43E8Fe0c25B3c4Bb1747A2a9E",
              "type": "EOA"
            },
            {
              "address": "0xe38aFbE7738b6Ec4280A6bCa1176c1C1A928A19C",
              "type": "EOA"
            },
            {
              "address": "0xE795F18F2F5DF5a666994e839b98263Dba86C902",
              "type": "EOA"
            },
            {
              "address": "0xf4682B9263d1ba9bd9Db09dA125708607d1eDd3a",
              "type": "EOA"
            },
            {
              "address": "0xF0c48B7F020BB61e6A3500AbC4b4954Bde7A2039",
              "type": "EOA"
            },
            {
              "address": "0x063105D0E7215B703909a7274FE38393302F3134",
              "type": "EOA"
            },
            {
              "address": "0xD9d5b3E58fa693B468a20C716793B18A1195380a",
              "type": "EOA"
            },
            {
              "address": "0xff30Ed09E3AE60D39Bce1727ee3292fD76A6FAce",
              "type": "EOA"
            },
            {
              "address": "0x8c4AD2DC12AdB9aD115e37EE9aD2e00E343EDf85",
              "type": "EOA"
            },
            {
              "address": "0x73f5B22312B7B2B3B1Cd179fC62269aB369c8206",
              "type": "EOA"
            },
            {
              "address": "0x5e04DC8156ce222289d52487dbAdCb01C8c990f9",
              "type": "EOA"
            },
            {
              "address": "0x772112C7e5dD4ed663e844e79d77c1569a2E88ce",
              "type": "EOA"
            },
            {
              "address": "0xEC5c90401F95F8c49b1E133E94F09D85b21d96a4",
              "type": "EOA"
            },
            {
              "address": "0x332253265e36689D9830E57112CD1aaDB1A773f9",
              "type": "EOA"
            },
            {
              "address": "0x236aF2FFdb611B14e3042A982d13EdA1627d9C96",
              "type": "EOA"
            },
            {
              "address": "0x54C8C42F07007D43c3049bEF6f10eA68687d43ef",
              "type": "EOA"
            },
            {
              "address": "0x66225AcC78Be789C57a11C9a18F051C779d678B5",
              "type": "EOA"
            },
            {
              "address": "0x564DcB855Eb360826f27D1Eb9c57cbbe6C76F50F",
              "type": "EOA"
            }
          ],
          "description": "List of operators that can validate incoming messages. Transfer needs to be signed by 70% out of 22 Operators."
        },
        {
          "name": "MainchainBridgeManager Governors",
          "accounts": [
            {
              "address": "0xeD3805fB65FF51a99Fef4676BdBC97abecA93D11",
              "type": "EOA"
            },
            {
              "address": "0xe880802580a1fbdeF67ACe39D1B21c5b2C74f059",
              "type": "EOA"
            },
            {
              "address": "0x4B18CEBEB9797Ea594b5977109cc07b21c37E8c3",
              "type": "EOA"
            },
            {
              "address": "0xA441f1399C8c023798586fbbBcF35f27279638a1",
              "type": "EOA"
            },
            {
              "address": "0x72A69B04B59C36fCED19ac54209beF878e84FcBF",
              "type": "EOA"
            },
            {
              "address": "0xe258f9996723B910712D6E67ADa4EafC15F7F101",
              "type": "EOA"
            },
            {
              "address": "0x020Dd9a5e318695A61DDa88DB7Ad077Ec306e3E9",
              "type": "EOA"
            },
            {
              "address": "0x60c4B72fc62b3e3a74e283aA9Ba20d61dD4d8F1b",
              "type": "EOA"
            },
            {
              "address": "0x9B0612E43855ef9a7c329ee89653bA45273B550e",
              "type": "EOA"
            },
            {
              "address": "0x47cfcb64f8EA44d6Ea7FAB32f13EFa2f8E65Eec1",
              "type": "EOA"
            },
            {
              "address": "0xAD23e87306aa3c7B95ee760e86f40F3021E5Fa18",
              "type": "EOA"
            },
            {
              "address": "0xbaCB04eA617b3E5EEe0E3f6E8FCB5Ba886B83958",
              "type": "EOA"
            },
            {
              "address": "0x77Ab649Caa7B4b673C9f2cF069900DF48114d79D",
              "type": "EOA"
            },
            {
              "address": "0x0DCA20728c8bb7173D3452559F40E95C60915799",
              "type": "EOA"
            },
            {
              "address": "0x0d48aDbdc523681c0DEe736dbDc4497E02Bec210",
              "type": "EOA"
            },
            {
              "address": "0x5832C3219c1dA998e828E1a2406B73dbFC02a70C",
              "type": "EOA"
            },
            {
              "address": "0xED448901cC62be10c5525BA19645dDcA1fD9dA1D",
              "type": "EOA"
            },
            {
              "address": "0x8d4f4e4ba313c4332e720445d8268E087D5C19b8",
              "type": "EOA"
            },
            {
              "address": "0x58aBcBCAb52dEE942491700CD0DB67826BBAA8C6",
              "type": "EOA"
            },
            {
              "address": "0x4620fb95eaBDaB4Bf681D987e116e0aAef1adEF2",
              "type": "EOA"
            },
            {
              "address": "0xc092Fa0C772b3c850e676c57d8737BB39084B9AC",
              "type": "EOA"
            },
            {
              "address": "0x3C583c0c97646a73843aE57b93f33e1995C8DC80",
              "type": "EOA"
            }
          ],
          "description": "List of governors that can update their corresponding operators, upgrade and change bridge parameters."
        },
        {
          "name": "RoninManagerMultiSig",
          "accounts": [
            {
              "address": "0x2DA02aC5f19Ae362a4121718d990e655eB628D96",
              "type": "MultiSig"
            }
          ],
          "description": "Admin of the Ronin Bridge, can change Sentry Account and accounts able to unlock withdrawals. This is a non-standard MultiSig with 2 / 3 threshold."
        },
        {
          "name": "RoninManagerMultiSig participants",
          "accounts": [
            {
              "address": "0xE5EB222996967BE79468C28bA39D665fd96E8b30",
              "type": "EOA"
            },
            {
              "address": "0x6bfC8F9096446d350713C4eB9d9b68866F87a9d0",
              "type": "EOA"
            },
            {
              "address": "0xaD99Fc4d593bAe582c2Ca83aCD98Ae6fcDb36192",
              "type": "EOA"
            }
          ],
          "description": "Those are the participants of the AdminMultisig."
        },
        {
          "name": "RoninAdminMultisig",
          "description": "This is a Gnosis Safe with 3 / 5 threshold.  Can upgrade the bridge and the MainchainBridgeManager instantly by being Admin of the latter. Can add and remove sentries (un-/pausers).",
          "accounts": [
            {
              "address": "0x51F6696Ae42C6C40CA9F5955EcA2aaaB1Cefb26e",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x4BFEc2a63B72c67e6c3f599fCc40E1d42AE519ff",
              "type": "EOA"
            },
            {
              "address": "0x18471CC6d2d427077CAA7896D7956cD066CAbe49",
              "type": "EOA"
            },
            {
              "address": "0xC93f43dbbf0a1346D9E0d623B68d78891b131Bf9",
              "type": "EOA"
            },
            {
              "address": "0xFE1a01580d7Cd7EC333DDC087b2c4DE3226f6031",
              "type": "EOA"
            },
            {
              "address": "0xa1aD1835f9c42842d348d9Ed1423C9075B8DA40b",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "MainchainGatewayV3 Sentry Account",
          "accounts": [
            {
              "address": "0xe514d9DEB7966c8BE0ca922de8a064264eA6bcd4",
              "type": "Contract"
            }
          ],
          "description": "An address that can pause the bridge in case of emergency (can be another contract)."
        },
        {
          "name": "PauseEnforcer Sentries",
          "accounts": [
            {
              "address": "0x944b1282cb9B3e62794f38733F3B6336536c30cc",
              "type": "EOA"
            },
            {
              "address": "0x299F344F0c6cC03cbb250E0f2dDdCD22Ae267c0c",
              "type": "EOA"
            },
            {
              "address": "0xcb8225AA9D1029Af2E8cA537027E26bbe3056353",
              "type": "EOA"
            },
            {
              "address": "0x660Ef9c5a8a92070b03fc5BBC2AC006D0B0Ead33",
              "type": "EOA"
            },
            {
              "address": "0x47870D35cdfF193a428C98a3468c833c23488393",
              "type": "EOA"
            }
          ],
          "description": "These accounts can pause and unpause the bridge through the PauseEnforcer."
        },
        {
          "name": "PauseEnforcer Admins",
          "accounts": [
            {
              "address": "0x2DA02aC5f19Ae362a4121718d990e655eB628D96",
              "type": "Contract"
            },
            {
              "address": "0x51F6696Ae42C6C40CA9F5955EcA2aaaB1Cefb26e",
              "type": "MultiSig"
            }
          ],
          "description": "These accounts can add and remove sentries (bridge pause-/unpausers) in the PauseEnforcer."
        },
        {
          "name": "MainchainGatewayV3 Withdrawal Unlockers",
          "accounts": [
            {
              "address": "0x58a8DcFdeF9BB5E164382562317C13D6F2A706F4",
              "type": "EOA"
            },
            {
              "address": "0xE5EB222996967BE79468C28bA39D665fd96E8b30",
              "type": "EOA"
            },
            {
              "address": "0x6bfC8F9096446d350713C4eB9d9b68866F87a9d0",
              "type": "EOA"
            },
            {
              "address": "0xaD99Fc4d593bAe582c2Ca83aCD98Ae6fcDb36192",
              "type": "EOA"
            }
          ],
          "description": "Addresses that can unlock withdrawals."
        }
      ],
      "milestones": [
        {
          "name": "Whitehat hack for $12M",
          "date": "2024-08-06T00:00:00Z",
          "link": "https://x.com/Ronin_Network/status/1820804772917588339",
          "type": "incident"
        },
        {
          "name": "Ronin bridge hacked for ~$625M",
          "date": "2022-03-23T00:00:00Z",
          "link": "https://web.archive.org/web/20230518085104/https://blog.roninchain.com/p/back-to-building-ronin-security-breach",
          "type": "incident"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "satellite",
      "createdAt": "1664183093",
      "display": {
        "name": "Satellite (Axelar)",
        "slug": "satellite",
        "description": "Satellite is a token bridge powered by Axelar network. It allows for cross-chain transfers of assets between Ethereum and other chains, typically to/from Cosmos ecosystem. Axelar is used as both escrow and message relayer.",
        "category": "Hybrid",
        "links": {
          "websites": ["https://satellite.money/", "https://axelar.network/"],
          "explorers": ["https://axelarscan.io/"],
          "repositories": ["https://github.com/axelarnetwork/axelar-examples"],
          "socialMedia": [
            "https://twitter.com/axelarnetwork",
            "https://discord.com/invite/aRZ3Ra6f7D",
            "https://linkedin.com/company/axelarnetwork/",
            "https://t.me/axelarcommunity"
          ]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x4F4495243837681061C4743b74B3eEdf548D56A5",
            "sinceTimestamp": "1634135918",
            "tokens": [
              "USDC",
              "WBTC",
              "WETH",
              "USDT",
              "DAI",
              "LINK",
              "FRAX",
              "MKR",
              "UNI"
            ],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "canonical": true,
        "destination": ["Various"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "This is a hybrid bridge that can pass arbitrary messages as well as act as a lock-mint Token Bridge. Different external Routers can be built on top of it, for example Squid Router. It acts as a canonical bridge for many tokens on Cosmos.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Validators running PoS consensus",
          "description": "Transfers are verified by the Validators running the Axelar network which, technically is a Cosmos chain. As in any standard Cosmos chain, Validators are bonded by staking tokens and can be slashed for misbehavior.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators on Axelar decide to not mint tokens after observing an event on Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators decide to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a withdraw request that wasn't originated on the source chain.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens are upgradeable",
          "description": "Tokens transferred end up as wrapped ERC20 proxies (axlTokens), some of them may be upgradable. The contract is typically BurnableMintableCappedERC20.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "2/3 Validators' Stake",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "2/3 Validators' Stake",
          "description": "Contracts are upgradable by the same Validators that validate message transfers.",
          "sentiment": "warning"
        }
      },
      "permissions": [
        {
          "name": "MintLimiter Multisig",
          "accounts": [
            {
              "address": "0x3f5876a2b06E54949aB106651Ab6694d0289b2b4",
              "type": "EOA"
            },
            {
              "address": "0x9256Fd872118ed3a97754B0fB42c15015d17E0CC",
              "type": "EOA"
            },
            {
              "address": "0x1486157d505C7F7E546aD00E3E2Eee25BF665C9b",
              "type": "EOA"
            },
            {
              "address": "0x2eC991B5c0B742AbD9d2ea31fe6c14a85e91C821",
              "type": "EOA"
            },
            {
              "address": "0xf505462A29E36E26f25Ef0175Ca1eCBa09CC118f",
              "type": "EOA"
            },
            {
              "address": "0x027c1882B975E2cd771AE068b0389FA38B9dda73",
              "type": "EOA"
            }
          ],
          "description": "Members of the Multisig that can set mint limits."
        },
        {
          "name": "Operators",
          "accounts": [],
          "description": "Axelar operators are a list of Axelar validators for the current epoch that can relay messages."
        },
        {
          "name": "AxelarGasService Admin",
          "accounts": [
            {
              "address": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05",
              "type": "EOA"
            }
          ],
          "description": "Can set arbitrary addresses as AxelarGasService admins, who can in turn modify the gas price for all chains. Is also the upgradeability admin of AxelarGasService and can withdraw accumulated fees."
        }
      ],
      "contracts": {
        "addresses": [
          {
            "name": "Gateway",
            "address": "0x4F4495243837681061C4743b74B3eEdf548D56A5",
            "upgradeability": {
              "proxyType": "Axelar proxy",
              "admins": [],
              "implementations": ["0x99B5FA03a5ea4315725c43346e55a6A6fbd94098"]
            },
            "chain": "ethereum",
            "description": "Main Gateway contract acting also as an escrow for bridged tokens."
          },
          {
            "name": "AxelarAuthWeighted",
            "address": "0xE3B83f79Fbf01B25659f8A814945aB82186A8AD0",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Contract verifying  Axelar network Verifier signatures. It stores the list of operators that can relay messages. Operators can be changed by the owner of this contract. Owner is set to be the Gateway itself."
          },
          {
            "name": "InterchainGovernance",
            "address": "0xfDF36A30070ea0241d69052ea85ff44Ad0476a66",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Governance contract that executes on-chain governance proposals from Axelar network. It is authorised to upgrade Axelar Gateway."
          },
          {
            "name": "Multisig",
            "address": "0xCC940AE49C78F20E3F13F3cF37e996b98Ac3EC68",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Admin Multisig setting mint limits. Acts as a 3-of-6 multisig."
          },
          {
            "name": "AxelarGasService",
            "address": "0x2d5d7d31F671F86C782533cc367F14109a082712",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05"],
              "implementations": ["0xcb5C784DCf8FF342625DbC53B356ed0Cbb0EBB9b"]
            },
            "chain": "ethereum",
            "description": "Allows users to pay for native gas at the destination with tokens or ETH. It also manages refunds.",
            "upgradableBy": ["AxelarGasService Admin"],
            "upgradeDelay": "none"
          }
        ],
        "risks": []
      }
    },
    {
      "type": "bridge",
      "id": "skale-ima",
      "createdAt": "1684437883",
      "display": {
        "name": "SKALE IMA Bridge",
        "slug": "skale-ima",
        "links": {
          "websites": ["https://skale.space"],
          "apps": ["https://bridge.skale.network"],
          "socialMedia": [
            "https://twitter.com/SkaleNetwork",
            "https://t.me/skaleofficial",
            "https://youtube.com/channel/UCpUk0eMmD00C7RXLT0g8SuA",
            "https://reddit.com/r/skalenetwork/",
            "https://linkedin.com/company/skale-labs/"
          ],
          "documentation": [
            "https://docs.skale.network/ima/1.4.x/",
            "https://mainnet.skalenodes.com"
          ],
          "repositories": ["https://github.com/skalenetwork/IMA"],
          "explorers": [
            "https://elated-tan-skat.explorer.mainnet.skalenodes.com"
          ]
        },
        "description": "SKALE IMA Bridge is a part of SKALE Network ecosystem. It is a cross-chain BLS threshold bridge that allows users to transfer tokens and arbitrary messages between supported blockchains.",
        "category": "Token Bridge"
      },
      "config": {
        "associatedTokens": ["SKL"],
        "escrows": [
          {
            "address": "0x49F583d263e4Ef938b9E09772D3394c71605Df94",
            "newVersion": true,
            "sinceTimestamp": "1626719733",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x49F583d263e4Ef938b9E09772D3394c71605Df94",
              "upgradeability": {
                "proxyType": "EIP1967 proxy",
                "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
                "implementations": [
                  "0x2f90BeD90fa0Cc605B86b8623612a2638EB4019a"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669",
            "newVersion": true,
            "sinceTimestamp": "1626719900",
            "tokens": [
              "RAZOR",
              "USDP",
              "USDC",
              "SKL",
              "DAI",
              "USDT",
              "WBTC",
              "LINK"
            ],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669",
              "upgradeability": {
                "proxyType": "EIP1967 proxy",
                "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
                "implementations": [
                  "0xc616EaF17c5e3349c1Fa493459494BB4DD0FD788"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "technology": {
        "destination": ["Ethereum", "SKALE"],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "description": "It is a cross-chain BLS threshold bridge that allows users to transfer Eth, ERC20, ERC721, ERC1155 and arbitrary messages between Ethereum and SKALE chains without fees and between SKALE chains without gas fees. Locks/Unlocks on main chain (Ethereum or SKALE chain which is origin of the asset), Burns/Mints on target chain.",
          "references": [
            {
              "text": "Bridging transactions",
              "href": "https://bridge-docs.orbitchain.io/bridging-transaction"
            }
          ],
          "risks": [],
          "isIncomplete": true
        },
        "validation": {
          "name": "Validation",
          "description": "SKALE IMA Bridge operates on SKALE Network nodes for connected SKALE chain. Messages are signed by BLS secret key with a 11 out of 16 threshold, then sent and validated on Ethereum. The validator set signing the message is the same one that is used for the consensus of the SKALE chain, making the bridge as secure as the chain itself. Since the state root is not sent to L1, the bridge and the chain state can diverge.",
          "references": [
            {
              "text": "SKALE IMA Bridge - Overview",
              "href": "https://docs.skale.network/ima/1.4.x/"
            }
          ],
          "risks": [],
          "isIncomplete": true
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Destination Chain",
          "description": "There are 16 randomly selected validator nodes of the destination chain, 11 of them needs to sign and verify messages",
          "sentiment": "warning",
          "sources": [
            {
              "contract": "MessageProxyForMainnet",
              "references": [
                "https://etherscan.io/address/0x64e4cd4Fe42eAB98AcD15fddaC657B1537aa5190#code#F1#L508",
                "https://etherscan.io/tx/0xb463ae9bacd3b0ba41eea25bdb51b115858bd9997d631bc26ccbb8a4fc3774c7"
              ]
            }
          ]
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "The bridge can be upgraded by the3 / 5Multisig. There is no delay on the upgrade.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "warning"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "MessageProxyForMainnet",
            "address": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
              "implementations": ["0x64e4cd4Fe42eAB98AcD15fddaC657B1537aa5190"]
            },
            "chain": "ethereum",
            "description": "Contract responsible for sending and receiving messages. It is used internally by the DepositBox contracts to transfer value between chains. It supports gas reimbursement from the CommunityPool."
          },
          {
            "name": "DepositBoxEth",
            "address": "0x49F583d263e4Ef938b9E09772D3394c71605Df94",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
              "implementations": ["0x2f90BeD90fa0Cc605B86b8623612a2638EB4019a"]
            },
            "chain": "ethereum",
            "description": "Bridge contract to transfer ETH to Skale chains, Proxy, Source code of implementation is verified on Etherscan."
          },
          {
            "name": "DepositBoxERC721WithMetadata",
            "address": "0x9f8196D864ee9476bF8DBE68aD07cc555d6B7986",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
              "implementations": ["0xF99F446340483C5d9D63697a60232ECb9274E1e7"]
            },
            "chain": "ethereum",
            "description": "Bridge contract to transfer ERC721 tokens with metadata to Skale chains, Proxy, Source code of implementation is verified on Etherscan."
          },
          {
            "name": "DepositBoxERC20",
            "address": "0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
              "implementations": ["0xc616EaF17c5e3349c1Fa493459494BB4DD0FD788"]
            },
            "chain": "ethereum",
            "description": "Bridge contract to transfer ERC20 tokens to Skale chains, Proxy, Source code of implementation is verified on Etherscan."
          },
          {
            "name": "DepositBoxERC721",
            "address": "0x7343d31eb99Fd31424bcca9f0a7EAFBc1F515f2d",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
              "implementations": ["0xAD64712a9F3F7Ca4e7064381135082AAA68F56d5"]
            },
            "chain": "ethereum",
            "description": "Bridge contract to transfer ERC721 tokens to Skale chains, Proxy, Source code of implementation is verified on Etherscan."
          },
          {
            "name": "DepositBoxERC1155",
            "address": "0x3C02FdEe8E05B6dc4d44a6555b3ff5762D03871a",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
              "implementations": ["0xE8d18a64e5bD3C3e96e7c163Dc67FF97296b6304"]
            },
            "chain": "ethereum",
            "description": "Bridge contract to transfer ERC1155 tokens to Skale chains, Proxy, Source code of implementation is verified on Etherscan."
          },
          {
            "name": "CommunityPool",
            "address": "0x588801cA36558310D91234aFC2511502282b1621",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"],
              "implementations": ["0xffC647d4Cef8FB8b365e6B11a0156972e9343f6A"]
            },
            "chain": "ethereum",
            "description": "CommunityPool is Gas Wallet contract, where users need to deposit Eth, to be able to transfer their assets(Eth, ERC20, NFTs) or messages from SKALE chain to Ethereum. Deposited amount will be spend for gas reimbursement to Agent which will deliver message on Ethereum."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "ProxyAdminOwner",
          "description": "This is a Gnosis Safe with 3 / 5 threshold.  This is an owner of DepositBox contracts proxies, can upgrade the implementation of those contracts, which potentially can introduce bug or introduce malicious behaviors.",
          "accounts": [
            {
              "address": "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x86EBB3994A558C27d19E2BADF5f98b99C478F98F",
              "type": "EOA"
            },
            {
              "address": "0x3E8eba8D8E1BA34cB5780d541748438aA21b1245",
              "type": "EOA"
            },
            {
              "address": "0x60f66a4056852d0Bd6D5BF6FF5D2eBeb474cd587",
              "type": "EOA"
            },
            {
              "address": "0x315537a8004A7E598f807e8e0ce2F92e6a497E18",
              "type": "EOA"
            },
            {
              "address": "0xE74ad5437C6CFB0cCD6bADda1F6b57b6E542E75e",
              "type": "EOA"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "socket",
      "createdAt": "1706204584",
      "display": {
        "name": "Socket",
        "slug": "socket",
        "warning": "The security parameters of each individual token and vault must be individually assessed, and can be changed by the developers. DYOR and use Socket at your own risk.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://socketscan.io/"],
          "repositories": [
            "https://github.com/SocketDotTech/socket-DL",
            "https://github.com/SocketDotTech/socket-plugs/tree/main/contracts/bridge"
          ],
          "documentation": [
            "https://developer.socket.tech/Learn/protocol-design"
          ],
          "socialMedia": ["https://twitter.com/SocketDotTech"]
        },
        "description": "This page gathers Socket vaults built on top of Socket Data Layer cross chain messaging protocol.",
        "detailedDescription": "Socket is highly flexible and configurable and risks vary depending on the current configuration of the specific route. It allows to define custom Token Vaults that communicate using different messaging protocols.    Token Vaults are connected via Plugs and Switchboards to their remote counterparts. The central contract on each chain, Socket, stores the configuration of all Plugs and Switchboards.    Some Switchboards may be as secure as \"native\" (canonical) bridge, some may use simple Relayers/Watchers to move messages across chains."
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Depending on the Switchboard, transfers may need to be independently confirmed by third parties, for example when using FastSwitchboard there is a set of WATCHERS that need to authorize the transfer event.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Vaults can be individually upgradable and the security assumptions must be individually assessed for each individual vault.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading. Tokens transferred end up as ERC20 proxies, some of them are upgradable. The contract is named UChildERC20Proxy.",
          "sentiment": "warning"
        }
      },
      "technology": {
        "destination": [
          "Ethereum",
          "Reya",
          "Lyra",
          "Kinto",
          "Polynomial",
          "Blast"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Socket is a bridge framework connecting different chains via a set of \"switchboards\". Every chain using Socket for some of its tokens can mix & match many switchboards with varying trust assumptions, for example mixing a \"fast\" route via \"Fast Switchboard\" with a \"Standard Route\" using a native rollup AMB.",
          "risks": [],
          "references": []
        },
        "validation": {
          "name": "Various switchboards",
          "description": "Vaults can use any registered switchboards. The validation model is chosen by the switchboard and their security can vary from using a canonical bridge to a third-party validation model.",
          "references": [
            {
              "text": "Protocol Design - Socket Documentation",
              "href": "https://developer.socket.tech/Learn/protocol-design#architecture"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "watchers fail to facilitate the transfer.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "watchers submit fraudulent block hash and relay fraudulent transfer.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "the Socket Vault owners change the Vault configuration.",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x6D303CEE7959f814042D31E0624fB88Ec6fbcC1d",
            "newVersion": true,
            "sinceTimestamp": "1700227943",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "USDC Vault Lyra",
              "address": "0x6D303CEE7959f814042D31E0624fB88Ec6fbcC1d",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xE3E96892D30E0ee1a8131BAf87c891201F7137bf",
            "newVersion": true,
            "sinceTimestamp": "1719833675",
            "tokens": ["sUSDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "sUSDe Vault Lyra",
              "address": "0xE3E96892D30E0ee1a8131BAf87c891201F7137bf",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x613e87BE1cd75dEBC5e6e56a2AF2fED84162C142",
            "newVersion": true,
            "sinceTimestamp": "1724140379",
            "tokens": ["sDAI"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "sDAI Vault Lyra",
              "address": "0x613e87BE1cd75dEBC5e6e56a2AF2fED84162C142",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x5e98A25d8d6FF69A8992d6Aa57948dFB77D4ECBa",
            "newVersion": true,
            "sinceTimestamp": "1705566299",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "USDT Vault Lyra",
              "address": "0x5e98A25d8d6FF69A8992d6Aa57948dFB77D4ECBa",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x4BB4C3CDc7562f08e9910A0C7D8bB7e108861eB4",
            "newVersion": true,
            "sinceTimestamp": "1715855051",
            "tokens": ["rswETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "rswETH Vault Lyra",
              "address": "0x4BB4C3CDc7562f08e9910A0C7D8bB7e108861eB4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x8180EcCC825b692ef65FF099a0A387743788bf78",
            "newVersion": true,
            "sinceTimestamp": "1715846411",
            "tokens": ["weETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "weETH Vault Lyra",
              "address": "0x8180EcCC825b692ef65FF099a0A387743788bf78",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xD4efe33C66B8CdE33B8896a2126E41e5dB571b7e",
            "newVersion": true,
            "sinceTimestamp": "1705069895",
            "tokens": ["WETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "WETH Vault Lyra",
              "address": "0xD4efe33C66B8CdE33B8896a2126E41e5dB571b7e",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xeBB5D642aA8ccDeE98373D6aC3ee0602b63824b3",
            "newVersion": true,
            "sinceTimestamp": "1709517155",
            "tokens": ["wstETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "wstETH Vault Lyra",
              "address": "0xeBB5D642aA8ccDeE98373D6aC3ee0602b63824b3",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x35d4D9bc79B0a543934b1769304B90d752691caD",
            "newVersion": true,
            "sinceTimestamp": "1717724723",
            "tokens": ["rsETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "rsETH Vault Lyra",
              "address": "0x35d4D9bc79B0a543934b1769304B90d752691caD",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x7D7aC8d55A9bD4152b703011f3E61AB3bB0A5592",
            "newVersion": true,
            "sinceTimestamp": "1708294763",
            "tokens": ["SNX"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "SNX Vault Lyra",
              "address": "0x7D7aC8d55A9bD4152b703011f3E61AB3bB0A5592",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x26Cf1Dc84694E04277F2Fe4C13E43597c6010C2A",
            "newVersion": true,
            "sinceTimestamp": "1724140487",
            "tokens": ["USDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "USDe Vault Lyra",
              "address": "0x26Cf1Dc84694E04277F2Fe4C13E43597c6010C2A",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x3Eec7c855aF33280F1eD38b93059F5aa5862E3ab",
            "newVersion": true,
            "sinceTimestamp": "1705069499",
            "tokens": ["WBTC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "WBTC Vault Lyra",
              "address": "0x3Eec7c855aF33280F1eD38b93059F5aa5862E3ab",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x76624ff43D610F64177Bb9c194A2503642e9B803",
            "newVersion": true,
            "sinceTimestamp": "1725056027",
            "tokens": ["LBTC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "LBTC Vault Lyra",
              "address": "0x76624ff43D610F64177Bb9c194A2503642e9B803",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x7E1d17b580dD4F89037DB331430eAEe8B8e50c91",
            "newVersion": true,
            "sinceTimestamp": "1724140259",
            "tokens": ["DAI"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "DAI Vault Lyra",
              "address": "0x7E1d17b580dD4F89037DB331430eAEe8B8e50c91",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x25d35C8796c9dcD3857abE90D802FC17b1FB55A5",
            "newVersion": true,
            "sinceTimestamp": "1727390399",
            "tokens": ["eBTC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "eBTC Vault Lyra",
              "address": "0x25d35C8796c9dcD3857abE90D802FC17b1FB55A5",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Lyra and owned by LyraMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x5B8Ae1C9c5970e2637Cf3Af431acAAebEf7aFb85",
            "newVersion": true,
            "sinceTimestamp": "1716143807",
            "tokens": ["sDAI"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "sDAI Vault Kinto",
              "address": "0x5B8Ae1C9c5970e2637Cf3Af431acAAebEf7aFb85",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x43b718Aa5e678b08615CA984cbe25f690B085b32",
            "newVersion": true,
            "sinceTimestamp": "1716143855",
            "tokens": ["sUSDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "sUSDe Vault Kinto",
              "address": "0x43b718Aa5e678b08615CA984cbe25f690B085b32",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xdf34E61B6e7B9e348713d528fEB019d504d38c1e",
            "newVersion": true,
            "sinceTimestamp": "1716143207",
            "tokens": ["USDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "USDe Vault Kinto",
              "address": "0xdf34E61B6e7B9e348713d528fEB019d504d38c1e",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x95d60E34aB2E626407d98dF8C240e6174e5D37E5",
            "newVersion": true,
            "sinceTimestamp": "1716216227",
            "tokens": ["ETHFI"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "ETHFI Vault Kinto",
              "address": "0x95d60E34aB2E626407d98dF8C240e6174e5D37E5",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x755cD5d147036E11c76F1EeffDd94794fC265f0d",
            "newVersion": true,
            "sinceTimestamp": "1716142595",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "USDC Vault Kinto",
              "address": "0x755cD5d147036E11c76F1EeffDd94794fC265f0d",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x351d8894fB8bfa1b0eFF77bFD9Aab18eA2da8fDd",
            "newVersion": true,
            "sinceTimestamp": "1716142919",
            "tokens": ["ENA"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "ENA Vault Kinto",
              "address": "0x351d8894fB8bfa1b0eFF77bFD9Aab18eA2da8fDd",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xdb161cdc9c11892922F7121a409b196f3b00e640",
            "newVersion": true,
            "sinceTimestamp": "1716143711",
            "tokens": ["EIGEN"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "EIGEN Vault Kinto",
              "address": "0xdb161cdc9c11892922F7121a409b196f3b00e640",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xc5d01939Af7Ce9Ffc505F0bb36eFeDde7920f2dc",
            "newVersion": true,
            "sinceTimestamp": "1716128303",
            "tokens": ["wstETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "wstETH Vault Kinto",
              "address": "0xc5d01939Af7Ce9Ffc505F0bb36eFeDde7920f2dc",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xeB66259d2eBC3ed1d3a98148f6298927d8A36397",
            "newVersion": true,
            "sinceTimestamp": "1716143951",
            "tokens": ["weETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "weETH Vault Kinto",
              "address": "0xeB66259d2eBC3ed1d3a98148f6298927d8A36397",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xA2bc0DaA9BF98820632bCa0663a9616f6bC180f8",
            "newVersion": true,
            "sinceTimestamp": "1725992651",
            "tokens": ["SOL"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "SOL Vault Kinto",
              "address": "0xA2bc0DaA9BF98820632bCa0663a9616f6bC180f8",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoEOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x00A0c9d82B95a17Cdf2D46703F2DcA13EB0E8A94",
            "newVersion": true,
            "sinceTimestamp": "1716142367",
            "tokens": ["WETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "WETH Vault Kinto",
              "address": "0x00A0c9d82B95a17Cdf2D46703F2DcA13EB0E8A94",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x12Cf431BdF7F143338cC09A0629EDcCEDCBCEcB5",
            "newVersion": true,
            "sinceTimestamp": "1715972567",
            "tokens": ["DAI"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "DAI Vault Kinto",
              "address": "0x12Cf431BdF7F143338cC09A0629EDcCEDCBCEcB5",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x25f0D71Da51A77Ca231484eBbAD1f588A0230ef2",
            "newVersion": true,
            "sinceTimestamp": "1721253827",
            "tokens": ["PAXG"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "PAXG Vault Kinto",
              "address": "0x25f0D71Da51A77Ca231484eBbAD1f588A0230ef2",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoEOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xd04Bc056BE36a6127267E4F71d3b43D1BEEfE8bF",
            "newVersion": true,
            "sinceTimestamp": "1721253935",
            "tokens": ["XAUt"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "XAUt Vault Kinto",
              "address": "0xd04Bc056BE36a6127267E4F71d3b43D1BEEfE8bF",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoEOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x0fC783f611A888A2cAbC3dA482Add3215334dCc2",
            "newVersion": true,
            "sinceTimestamp": "1721252735",
            "tokens": ["MKR"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "MKR Vault Kinto",
              "address": "0x0fC783f611A888A2cAbC3dA482Add3215334dCc2",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Kinto and owned by KintoEOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xDE1617Ddb7C8A250A409D986930001985cfad76F",
            "newVersion": true,
            "sinceTimestamp": "1721277431",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "USDC Vault Polynomial",
              "address": "0xDE1617Ddb7C8A250A409D986930001985cfad76F",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Polynomial and owned by PolynomialEOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x615172e47c0C5A6dA8ea959632Ac0166f7a59eDc",
            "newVersion": true,
            "sinceTimestamp": "1721219231",
            "tokens": ["sDAI"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "sDAI Vault Polynomial",
              "address": "0x615172e47c0C5A6dA8ea959632Ac0166f7a59eDc",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Polynomial and owned by PolynomialEOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xC6cfb996A7CFEB89813A68CD13942CD75553032b",
            "newVersion": true,
            "sinceTimestamp": "1721382935",
            "tokens": ["sUSDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "sUSDe Vault Polynomial",
              "address": "0xC6cfb996A7CFEB89813A68CD13942CD75553032b",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Polynomial and owned by PolynomialEOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xa83B4006c16DAeAb2718294696c0122519195137",
            "newVersion": true,
            "sinceTimestamp": "1717743623",
            "tokens": ["LOOKS"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "LOOKS Vault Blast",
              "address": "0xa83B4006c16DAeAb2718294696c0122519195137",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Blast and owned by LooksRareMultisig.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xdFf78A949E47c1e90f3Dd6dd7Fe2Fa72B42a75f7",
            "newVersion": true,
            "sinceTimestamp": "1712326631",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "USDC Vault Reya",
              "address": "0xdFf78A949E47c1e90f3Dd6dd7Fe2Fa72B42a75f7",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Reya and owned by socketadmin.eth EOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xaA2f2B6cD33Eaabb795c6DB60AAec599C8450F35",
            "newVersion": true,
            "sinceTimestamp": "1722533111",
            "tokens": ["USDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "USDe Vault Reya",
              "address": "0xaA2f2B6cD33Eaabb795c6DB60AAec599C8450F35",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Reya and owned by socketadmin.eth EOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x5F3B301B4967623fDb3AE52Bb8FF4dB01C460Cd3",
            "newVersion": true,
            "sinceTimestamp": "1724767355",
            "tokens": ["sUSDe"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "sUSDe Vault Reya",
              "address": "0x5F3B301B4967623fDb3AE52Bb8FF4dB01C460Cd3",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Reya and owned by socketadmin.eth EOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x64dF894688c5052BeAdC35371cF69151Ebc5D658",
            "newVersion": true,
            "sinceTimestamp": "1716322511",
            "tokens": ["WETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "WETH Vault Reya",
              "address": "0x64dF894688c5052BeAdC35371cF69151Ebc5D658",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Reya and owned by socketadmin.eth EOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x2344621d5aA6e784e8C6f4c54b0B29Dd9c3Ad4B6",
            "newVersion": true,
            "sinceTimestamp": "1714061603",
            "tokens": ["WBTC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": "WBTC Vault Reya",
              "address": "0x2344621d5aA6e784e8C6f4c54b0B29Dd9c3Ad4B6",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Socket Vault associated with Reya and owned by socketadmin.eth EOA.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "contracts": {
        "addresses": [
          {
            "name": "Socket",
            "address": "0x943AC2775928318653e91d350574436A1b9b16f9",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Central contract in Socket SuperBridge holding configuration of all Plugs and associated Switchboards."
          },
          {
            "name": "FastSwitchboard",
            "address": "0xD5a83a40F262E2247e6566171f9ADc76b745F5cD",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Fast Switchboard having a set of Watchers authorizing transfers. If the transfer is not explicitly authorized within certain period of time, it is optimistically considered to be valid. Watchers can also stop (trip) an invalid transfer."
          },
          {
            "name": "PolygonL1Switchboard",
            "address": "0x053407DFA30267f6332f3c94a9e9F704A55e62CD",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Switchboard using native Polygon message passing."
          },
          {
            "name": "OptimismSwitchboard",
            "address": "0x139f39DC7dC05F7aC2DB3DB6af4f2e1a9De7c287",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Switchboard using native Optimism message passing."
          },
          {
            "name": "ArbitrumL1Switchboard",
            "address": "0xdf5f7dfDFc26ee5F629949e330bEf56906319CAe",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Switchboard using native Arbitrum message passing."
          },
          {
            "name": "ExecutionManager",
            "address": "0x98CAd9A205f1F7A7150241Ef2d565d1702BCe57C",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Manages crosschain execution and fees."
          },
          {
            "name": "TransmitManager",
            "address": "0xeD037aFBffC65a94E9CC592947E851FB2f730341",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Manages and verifies transmitters: Permissioned actors who are allowed to send messages via socket."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ],
        "isIncomplete": true
      },
      "permissions": [
        {
          "name": "socketadmin.eth EOA",
          "description": "Account privileged to set up different roles in the main Socket contract.",
          "accounts": [
            {
              "address": "0xB0BBff6311B7F245761A7846d3Ce7B1b100C1836",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "LyraMultisig",
          "description": "This is a Gnosis Safe with 2 / 3 threshold.  Multisig that owns the Socket Vaults associated with Lyra.",
          "accounts": [
            {
              "address": "0x246d38588b16Dd877c558b245e6D5a711C649fCF",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xb88D64a7E2ec1b137c969Adf2EC65f933d631F65",
              "type": "EOA"
            },
            {
              "address": "0x76E6F5C2A64df0F53077602642B79a45D5Ba6D52",
              "type": "EOA"
            },
            {
              "address": "0x4cEa25e9c999E69F45765539783D149024f99F12",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "KintoMultisig",
          "description": "This is a Gnosis Safe with 3 / 5 threshold.  Multisig that owns the Socket Vaults associated with Kinto.",
          "accounts": [
            {
              "address": "0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x5D973Ea995d14799E528B14472346bfDE21eAe2e",
              "type": "EOA"
            },
            {
              "address": "0x08E674c4538caE03B6c05405881dDCd95DcaF5a8",
              "type": "EOA"
            },
            {
              "address": "0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B",
              "type": "EOA"
            },
            {
              "address": "0x94561e98DD5E55271f91A103e4979aa6C493745E",
              "type": "EOA"
            },
            {
              "address": "0xc31C4549356d46c37021393EeEb6f704B38061eC",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "KintoEOA",
          "description": "owns some Vaults associated with Kinto.",
          "accounts": [
            {
              "address": "0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82",
              "type": "MultiSig"
            }
          ]
        },
        {
          "name": "LooksRareMultisig",
          "description": "This is a Gnosis Safe with 3 / 5 threshold.  Multisig that owns a Socket Vault associated with LOOKS token.",
          "accounts": [
            {
              "address": "0xC8C57e4C73c71f72cA0a7e043E5D2D144F98ef13",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xDA9854b190A54c6c5088AB43a274caFAFF7cF369",
              "type": "EOA"
            },
            {
              "address": "0x45d7A9bFC82Ca6AE410E4410f44c57a2b9F8Ec58",
              "type": "EOA"
            },
            {
              "address": "0xb69F2341F008f673F757B49104c165C8022CD0df",
              "type": "EOA"
            },
            {
              "address": "0x5ECfd6968593159e5b4f06832857943409122849",
              "type": "EOA"
            },
            {
              "address": "0x9eab2223d84060E212354BfA620BF687b6E9Ae20",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "PolynomialEOA",
          "description": "EOA that owns the Socket Vaults associated with Polynomial L2.",
          "accounts": [
            {
              "address": "0xAeBF1Bc19Ed4Fdf509c456ab6c28D25C9Ca3B332",
              "type": "EOA"
            }
          ]
        }
      ],
      "knowledgeNuggets": []
    },
    {
      "type": "bridge",
      "id": "sollet",
      "createdAt": "1662628329",
      "isArchived": true,
      "display": {
        "name": "Sollet",
        "slug": "sollet",
        "warning": "Sollet Bridge becomes deprecated on Oct 31, 2022. Users are encouraged to use Wormhole instead.",
        "description": "Externally Validated bridge to Solana that is now being phased out - users are encouraged to use Wormhole instead.",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://sollet.io/"],
          "socialMedia": ["https://projectserum.medium.com/"],
          "explorers": ["https://solscan.io/"],
          "repositories": ["https://github.com/project-serum/spl-token-wallet"]
        }
      },
      "config": {
        "associatedTokens": ["SRM"],
        "escrows": [
          {
            "address": "0xeae57ce9cc1984F202e15e038B964bb8bdF7229a",
            "sinceTimestamp": "1599794859",
            "tokens": [
              "SRM",
              "ETH",
              "ALEPH",
              "USDT",
              "USDC",
              "UNI",
              "KEEP",
              "LINK"
            ],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": ["Solana"],
        "principleOfOperation": {
          "name": "Principle of Operation",
          "isIncomplete": true,
          "description": "Sollet Bridge becomes deprecated on Oct 31, 2022. Users are encouraged to use Wormhole instead. Bridge contract supports withdrawals of assets locked on Ethereum but requests need to be signed by the contract owner (EOA account).",
          "references": [
            {
              "text": "Deprecating Sollet Bridge",
              "href": "https://projectserum.medium.com/deprecating-sollet-bridge-5a092fbd5dda"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "contract owner doesn't sign withdrawal requests.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "contract owner pauses the bridge."
            },
            {
              "category": "Funds can be stolen if",
              "text": "contract owner withdraws funds belonging to depositors.",
              "isCritical": true
            }
          ]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Withdrawals need to be signed by an EOA account.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading. Sollet Bridge and its wrapped asset are deprecated in favor of assets bridged via Wormhole.",
          "sentiment": "bad"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "SplTokenSwap",
            "address": "0xeae57ce9cc1984F202e15e038B964bb8bdF7229a",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Sollet Bridge Contract."
          }
        ],
        "risks": []
      },
      "permissions": [
        {
          "accounts": [
            {
              "address": "0x067D382e61c06Cea2815069D9D97fd3ee5df2361",
              "type": "EOA"
            }
          ],
          "name": "Sollet Bridge Owner (EOA)",
          "description": "Can withdraw funds from the bridge"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "stargate",
      "createdAt": "1662628329",
      "display": {
        "name": "StarGate (LayerZero)",
        "slug": "stargate",
        "links": {
          "websites": [
            "https://stargate.finance/",
            "https://layerzero.network/"
          ],
          "repositories": [
            "https://github.com/stargate-protocol/stargate",
            "https://github.com/LayerZero-Labs/LayerZero"
          ],
          "socialMedia": [
            "https://discord.com/invite/TMWHAfS",
            "https://t.me/joinchat/LEM0ELklmO1kODdh",
            "https://medium.com/stargate-official",
            "https://twitter.com/StargateFinance"
          ]
        },
        "description": "StarGate is built on top of LayerZero protocol and is a liquidity network for cross-chain transfer for assets.",
        "detailedDescription": "It leverages an oracle and relayer for cross-chain security for the protocol. Note that StarGate UI also supports omnichain tokens built directly on top of LayerZero protocol, e.g. JOE.",
        "category": "Liquidity Network"
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be independently confirmed by oracle attesting to source chain checkpoints and Relayer providing merkle proof of the transfer event.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": [
          "BNB Chain",
          "Avalanche",
          "Polygon",
          "Arbitrum",
          "Optimism",
          "Fantom"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "StarGate is a Liquidity Network. It relies on liquidity providers to supply tokens to liquidity pools on each chain.         Users can swap tokens between chains by transferring their tokens to a pool and receive token from the pool on the destination chain.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Oracles and relayers",
          "description": "StarGate is built on top of LayerZero protocol. LayerZero relies on oracles to periodically submit source chain block hashes to the destination chain.        Once block hash is submitted, relayers can provide the merkle proof for the transfers / swaps.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "oracles or relayers fail to facilitate the transfer.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "oracles and relayers collude to submit fraudulent block hash and relay fraudulent transfer .",
              "isCritical": true
            }
          ],
          "isIncomplete": true
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0xdf0770dF86a8034b3EFEf0A1Bb3c889B8332FF56",
            "newVersion": true,
            "sinceTimestamp": "1647511732",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xdf0770dF86a8034b3EFEf0A1Bb3c889B8332FF56",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "USDC Escrow",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x38EA452219524Bb87e18dE1C24D3bB59510BD783",
            "newVersion": true,
            "sinceTimestamp": "1647511732",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x38EA452219524Bb87e18dE1C24D3bB59510BD783",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "USDT Escrow",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x692953e758c3669290cb1677180c64183cEe374e",
            "newVersion": true,
            "sinceTimestamp": "1656354769",
            "tokens": ["USDD"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x692953e758c3669290cb1677180c64183cEe374e",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "USDD Escrow",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x0Faf1d2d3CED330824de3B8200fc8dc6E397850d",
            "newVersion": true,
            "sinceTimestamp": "1668459527",
            "tokens": ["DAI"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x0Faf1d2d3CED330824de3B8200fc8dc6E397850d",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "DAI Escrow",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xfA0F307783AC21C39E939ACFF795e27b650F6e68",
            "newVersion": true,
            "sinceTimestamp": "1668459527",
            "tokens": ["FRAX"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xfA0F307783AC21C39E939ACFF795e27b650F6e68",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "FRAX Escrow",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xE8F55368C82D38bbbbDb5533e7F56AfC2E978CC2",
            "newVersion": true,
            "sinceTimestamp": "1668459587",
            "tokens": ["LUSD"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xE8F55368C82D38bbbbDb5533e7F56AfC2E978CC2",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "LUSD Escrow",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xd8772edBF88bBa2667ed011542343b0eDDaCDa47",
            "newVersion": true,
            "sinceTimestamp": "1673830559",
            "tokens": ["Metis"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xd8772edBF88bBa2667ed011542343b0eDDaCDa47",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "METIS Escrow",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x430Ebff5E3E80A6C58E7e6ADA1d90F5c28AA116d",
            "newVersion": true,
            "sinceTimestamp": "1673830559",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x430Ebff5E3E80A6C58E7e6ADA1d90F5c28AA116d",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "USDT Pool 2",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x1CE66c52C36757Daf6551eDc04800A0Ec9983A09",
            "newVersion": true,
            "sinceTimestamp": "1677032255",
            "tokens": ["WOO"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x1CE66c52C36757Daf6551eDc04800A0Ec9983A09",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "WOO Pool",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xA572d137666DCbAdFA47C3fC41F15e90134C618c",
            "newVersion": true,
            "sinceTimestamp": "1677032255",
            "tokens": ["mETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xA572d137666DCbAdFA47C3fC41F15e90134C618c",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "mETH Pool",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x72E2F4830b9E45d52F80aC08CB2bEC0FeF72eD9c",
            "sinceTimestamp": "1656108257",
            "tokens": ["ETH"],
            "chain": "ethereum"
          }
        ]
      },
      "contracts": {
        "addresses": [
          {
            "name": "Router",
            "address": "0x8731d54E9D02c286767d56ac03e8037C07e01e98",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Entry point for the user interaction with StarGate Bridge, handles the logic of swaps and adding liquidity, send messages to the bridge."
          },
          {
            "name": "Bridge",
            "address": "0x296F55F8Fb28E498B858d0BcDA06D955B2Cb3f97",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Main bridge contract, receives messages from LayerZero Endpoint, stores bridge configuration."
          },
          {
            "name": "Factory",
            "address": "0x06D538690AF257Da524f25D0CD52fD85b1c2173E",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Factory contract managing all liquidity pools."
          },
          {
            "name": "TSS Oracle",
            "address": "0x5a54fe5234E811466D5366846283323c954310B2",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x967bAf657ec4d4b1cb00b06f7Cc6E8BA604e3AC8"],
              "implementations": ["0x3eEA8d627ab6983fFFc7027ee623Fd7699343fc1"]
            },
            "chain": "ethereum"
          },
          {
            "name": "Google Cloud Oracle",
            "address": "0xD56e4eAb23cb81f43168F9F45211Eb027b9aC7cc",
            "upgradeability": null,
            "chain": "ethereum"
          },
          {
            "name": "LayerZero Relayer",
            "address": "0x902F09715B6303d4173037652FA7377e5b98089E",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0xA658742d33ebd2ce2F0bdFf73515Aa797Fd161D9"],
              "implementations": ["0xB830a5AfCBEBb936c30C607a18BbbA9f5B0a592f"]
            },
            "chain": "ethereum"
          },
          {
            "name": "Endpoint",
            "address": "0x66A71Dcef29A0fFBDBE3c6a460a3B5BC225Cd675",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "LayerZero Ethereum Endpoint."
          },
          {
            "name": "UltraLightNodeV2",
            "address": "0x4D73AdB72bC3DD368966edD0f0b2148401A178E2",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "LayerZero UltraLight Node. Used by oracles to checkpoint source chain block hashes."
          }
        ],
        "risks": [],
        "isIncomplete": true
      },
      "permissions": [
        {
          "name": "StarGate Multisig",
          "description": "This is a Gnosis Safe with 3 / 6 threshold.  Bridge owner, can create new pools, chainpaths, set fees.",
          "accounts": [
            {
              "address": "0x65bb797c2B9830d891D87288F029ed8dACc19705",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x2E1078e128e8AA6A70eC8d1B17A79Fc4B457d437",
              "type": "EOA"
            },
            {
              "address": "0x565cFd7224bbc2a81a6e2a1464892ecB27efB070",
              "type": "EOA"
            },
            {
              "address": "0x1D7C6783328C145393e84fb47a7f7C548f5Ee28d",
              "type": "EOA"
            },
            {
              "address": "0x79e2b9C1F6C9ed1375C93AaF139e6C4537f48523",
              "type": "EOA"
            },
            {
              "address": "0xF05F4211ad15A8e49b49C0436067CFFfEa783aA4",
              "type": "EOA"
            },
            {
              "address": "0xf02CC4dc84aC59Bd6089BAddcEB9d4Ef3AEFb0f0",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "LayerZero Multisig",
          "description": "This is a Gnosis Safe with 2 / 5 threshold.  The owner of Endpoint, UltraLightNode and Treasury contracts. Can switch to a new UltraLightNode for an Endpoint. Can switch proof library for an UltraLightNode and change Treasury.",
          "accounts": [
            {
              "address": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327",
              "type": "EOA"
            },
            {
              "address": "0xe095F2590eF1Ab39601445025847Ed8E4B40D687",
              "type": "EOA"
            },
            {
              "address": "0xBb6633cc267951E938F9B6421E4F54aa5b2c1936",
              "type": "EOA"
            },
            {
              "address": "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
              "type": "EOA"
            },
            {
              "address": "0x67FC8c432448f9a8d541C17579EF7a142378d5aD",
              "type": "EOA"
            }
          ]
        },
        {
          "accounts": [
            {
              "address": "0x902F09715B6303d4173037652FA7377e5b98089E",
              "type": "Contract"
            }
          ],
          "name": "LayerZero Relayer",
          "description": "Contract authorized to relay messages and - as a result - withdraw funds from the bridge."
        },
        {
          "accounts": [
            {
              "address": "0x76F6d257CEB5736CbcAAb5c48E4225a45F74d6e5",
              "type": "EOA"
            }
          ],
          "name": "LayerZero Relayer Admin owner",
          "description": "Can upgrade LayerZero relayer contract with no delay."
        },
        {
          "accounts": [
            {
              "address": "0x7B80f2924E3Ad59a55f4bcC38AB63480599Be6c8",
              "type": "EOA"
            }
          ],
          "name": "LayerZero Oracle Admin owner",
          "description": "Can upgrade LayerZero oracle contract with no delay."
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Security models: isolated vs shared",
          "url": "https://medium.com/l2beat/circumventing-layer-zero-5e9f652a5d3e",
          "thumbnail": "l2beat-01.jpg"
        },
        {
          "title": "StarGate Bridge architecture",
          "url": "https://twitter.com/bkiepuszewski/status/1518568490147450880",
          "thumbnail": "l2beat-03.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "stargatev2",
      "createdAt": "1718620600",
      "display": {
        "name": "Stargate v2 (LayerZero v2)",
        "shortName": "Stargate v2",
        "slug": "stargatev2",
        "links": {
          "websites": [
            "https://stargate.finance/",
            "https://layerzero.network/"
          ],
          "apps": ["https://layerzeroscan.com/"],
          "repositories": [
            "https://github.com/stargate-protocol/stargate-v2",
            "https://github.com/LayerZero-Labs/LayerZero-v2"
          ],
          "socialMedia": [
            "https://discord.com/invite/ymBqyE6",
            "https://t.me/joinchat/LEM0ELklmO1kODdh",
            "https://medium.com/stargate-official",
            "https://x.com/StargateFinance"
          ]
        },
        "description": "Stargate v2 is a Hybrid Bridge (mainly Liquidity Network) built on top of the LayerZero messaging protocol.",
        "detailedDescription": "It uses liquidity pools on all supported chains, supports optional batching and a Token Bridge mode called Hydra that can mint tokens at the destination.",
        "category": "Hybrid"
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "The LayerZero message protocol is used. If all preconfigured DVNs agree on a message, it is considered verified and can be executed by a permissioned Executor at the destination.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "technology": {
        "destination": [
          "Ethereum",
          "BNB Chain",
          "Avalanche",
          "Polygon",
          "Arbitrum",
          "Optimism",
          "Metis",
          "Linea",
          "Mantle",
          "Base",
          "Kava",
          "Scroll",
          "Klaytn"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "\n      On chains where assets are available through other bridges, Stargate acts as a Liquidity Bridge. This requires Stargate liquidity pools for assets at the sources and destinations.\n      \n      While liquidity providers need to keep all pools buffered with assets, users can deposit into a pool on their chosen source chain and quickly receive the equivalent asset at the destination through an Executor.\n      Users can choose between an economical batched bridge mode ('bus') or an individual fast 'taxi' mode that delivers the bridging message as soon as the user deposits.\n      \n      The Executor is a permissioned actor that withdraws the asset from the liquidity pool at the destination directly to the user.\n      They are only a relayer and depend on LayerZero DVNs (distributed validator networks) to verify the message coming from the source chain. These DVNs can be freely configured by the OApp owner (Stargate) for each pair of endpoints. \n      Stargatev2 currently has two DVNs configured: Stargate and Nethermind. From the viewpoint of the LayerZero message protocol, each DVN is a single signer and the current threshold for verification is 2.\n      \n      Just like the assets themselves, so-called *credits* are bridged among the supported pools in the Stargate v2 system. Credits can be seen as claims on assets, so a liquidity pool needs credits for a remote pool to be able to bridge there.\n      These credits can be moved and rebalanced (but not minted) by a permissioned Planner.",
          "references": [
            {
              "text": "Stargate Docs: Modes of transport",
              "href": "https://stargateprotocol.gitbook.io/stargate/v/v2-developer-docs/integrate-with-stargate/modes-of-transport-taxi-and-bus"
            },
            {
              "text": "Stargate Docs: Credit allocation system",
              "href": "https://stargateprotocol.gitbook.io/stargate/v/v2-developer-docs/integrate-with-stargate/credit-allocation-system"
            }
          ],
          "risks": []
        },
        "validation": {
          "name": "LayerZero messaging",
          "description": "The LayerZero message protocol is used: For validation of messages from Stargate over LayerZero, two DVNs are currently configured: Nethermind and Stargate.        If both DVNs agree on a message, it is verified and can be executed by a permissioned Executor at the destination. This configuration can be changed at any time by the StargateMultisig.",
          "references": [
            {
              "text": "LayerZero Docs: Security Stack",
              "href": "https://docs.layerzero.network/v2/home/modular-security/security-stack-dvns"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "both whitelisted DVNs or the LayerZero Executor fail to facilitate the transaction.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "both whitelisted DVNs collude to submit a fraudulent message.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination Tokens",
          "description": "Since Stargate is mainly a Liquidity Network, its liquidity pools at the destination are filled with tokens from canonical or other bridges than Stargate. As no new tokens are minted, the users do not inherit the risk of the Stargate bridge as soon as the bridging is complete. For chains where a destination asset is not available, Stargate v2 offers a Token Bridge mode called Hydra that locks the asset at the source and mints a Stargate OFT at the destination.",
          "references": [
            {
              "text": "Stargate Docs: Token Bridge mode (Hydra)",
              "href": "https://stargateprotocol.gitbook.io/stargate/v/v2-developer-docs/integrate-with-stargate/token-types/hydra-ofts"
            }
          ],
          "risks": []
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0xc026395860Db2d07ee33e05fE50ed7bD583189C7",
            "newVersion": true,
            "sinceTimestamp": "1716837347",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xc026395860Db2d07ee33e05fE50ed7bD583189C7",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Stargate liquidity pool for USDC on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x77b2043768d28E9C9aB44E1aBfC95944bcE57931",
            "newVersion": true,
            "sinceTimestamp": "1716837299",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x77b2043768d28E9C9aB44E1aBfC95944bcE57931",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Stargate liquidity pool for ETH on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x933597a323Eb81cAe705C5bC29985172fd5A3973",
            "newVersion": true,
            "sinceTimestamp": "1716837359",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x933597a323Eb81cAe705C5bC29985172fd5A3973",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Stargate liquidity pool for USDT on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3",
            "newVersion": true,
            "sinceTimestamp": "1716837335",
            "tokens": ["Metis"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Stargate liquidity pool for METIS on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D",
            "newVersion": true,
            "sinceTimestamp": "1716837323",
            "tokens": ["mETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D",
              "upgradeability": null,
              "chain": "ethereum",
              "description": "Stargate liquidity pool for mETH on Ethereum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
            "newVersion": true,
            "sinceTimestamp": "1716837016",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
              "upgradeability": null,
              "chain": "arbitrum",
              "description": "Stargate liquidity pool for USDC on Arbitrum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "arbitrum",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
            "newVersion": true,
            "sinceTimestamp": "1716837018",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
              "upgradeability": null,
              "chain": "arbitrum",
              "description": "Stargate liquidity pool for USDT on Arbitrum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "arbitrum",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xA45B5130f36CDcA45667738e2a258AB09f4A5f7F",
            "newVersion": true,
            "sinceTimestamp": "1716837008",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xA45B5130f36CDcA45667738e2a258AB09f4A5f7F",
              "upgradeability": null,
              "chain": "arbitrum",
              "description": "Stargate liquidity pool for ETH on Arbitrum.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "arbitrum",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
            "newVersion": true,
            "sinceTimestamp": "1716837017",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
              "upgradeability": null,
              "chain": "optimism",
              "description": "Stargate liquidity pool for USDC on Optimism.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "optimism",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
            "newVersion": true,
            "sinceTimestamp": "1716837009",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
              "upgradeability": null,
              "chain": "optimism",
              "description": "Stargate liquidity pool for ETH on Optimism.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "optimism",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x19cFCE47eD54a88614648DC3f19A5980097007dD",
            "newVersion": true,
            "sinceTimestamp": "1716837025",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x19cFCE47eD54a88614648DC3f19A5980097007dD",
              "upgradeability": null,
              "chain": "optimism",
              "description": "Stargate liquidity pool for USDT on Optimism.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "optimism",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x27a16dc786820B16E5c9028b75B99F6f604b5d26",
            "newVersion": true,
            "sinceTimestamp": "1716837017",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x27a16dc786820B16E5c9028b75B99F6f604b5d26",
              "upgradeability": null,
              "chain": "base",
              "description": "Stargate liquidity pool for USDC on Base.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "base",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xdc181Bd607330aeeBEF6ea62e03e5e1Fb4B6F7C7",
            "newVersion": true,
            "sinceTimestamp": "1716837009",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xdc181Bd607330aeeBEF6ea62e03e5e1Fb4B6F7C7",
              "upgradeability": null,
              "chain": "base",
              "description": "Stargate liquidity pool for USDC on Base.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "base",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x3Fc69CC4A842838bCDC9499178740226062b14E4",
            "newVersion": true,
            "sinceTimestamp": "1716837020",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x3Fc69CC4A842838bCDC9499178740226062b14E4",
              "upgradeability": null,
              "chain": "scroll",
              "description": "Stargate liquidity pool for USDC on Scroll.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "scroll",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xC2b638Cb5042c1B3c5d5C969361fB50569840583",
            "newVersion": true,
            "sinceTimestamp": "1716837011",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xC2b638Cb5042c1B3c5d5C969361fB50569840583",
              "upgradeability": null,
              "chain": "scroll",
              "description": "Stargate liquidity pool for ETH on Scroll.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "scroll",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x36ed193dc7160D3858EC250e69D12B03Ca087D08",
            "newVersion": true,
            "sinceTimestamp": "1716837010",
            "tokens": ["WETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x36ed193dc7160D3858EC250e69D12B03Ca087D08",
              "upgradeability": null,
              "chain": "metis",
              "description": "Stargate liquidity pool for ETH on Metis.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "metis",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xD9050e7043102a0391F81462a3916326F86331F0",
            "newVersion": true,
            "sinceTimestamp": "1716837016",
            "tokens": ["Metis"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xD9050e7043102a0391F81462a3916326F86331F0",
              "upgradeability": null,
              "chain": "metis",
              "description": "Stargate liquidity pool for METIS on Metis.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "metis",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x4dCBFC0249e8d5032F89D6461218a9D2eFff5125",
            "newVersion": true,
            "sinceTimestamp": "1716837024",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x4dCBFC0249e8d5032F89D6461218a9D2eFff5125",
              "upgradeability": null,
              "chain": "metis",
              "description": "Stargate liquidity pool for USDT on Metis.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "metis",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x81F6138153d473E8c5EcebD3DC8Cd4903506B075",
            "newVersion": true,
            "sinceTimestamp": "1716837011",
            "tokens": ["ETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x81F6138153d473E8c5EcebD3DC8Cd4903506B075",
              "upgradeability": null,
              "chain": "linea",
              "description": "Stargate liquidity pool for ETH on Linea.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "linea",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x4c1d3Fc3fC3c177c3b633427c2F769276c547463",
            "newVersion": true,
            "sinceTimestamp": "1716837014",
            "tokens": ["WETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x4c1d3Fc3fC3c177c3b633427c2F769276c547463",
              "upgradeability": null,
              "chain": "mantle",
              "description": "Stargate liquidity pool for ETH on Mantle.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "mantle",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xB715B85682B731dB9D5063187C450095c91C57FC",
            "newVersion": true,
            "sinceTimestamp": "1716837046",
            "tokens": ["USDT"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xB715B85682B731dB9D5063187C450095c91C57FC",
              "upgradeability": null,
              "chain": "mantle",
              "description": "Stargate liquidity pool for USDT on Mantle.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "mantle",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xAc290Ad4e0c891FDc295ca4F0a6214cf6dC6acDC",
            "newVersion": true,
            "sinceTimestamp": "1716837036",
            "tokens": ["USDC"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xAc290Ad4e0c891FDc295ca4F0a6214cf6dC6acDC",
              "upgradeability": null,
              "chain": "mantle",
              "description": "Stargate liquidity pool for USDC on Mantle.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "mantle",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xF7628d84a2BbD9bb9c8E686AC95BB5d55169F3F1",
            "newVersion": true,
            "sinceTimestamp": "1716837026",
            "tokens": ["mETH"],
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xF7628d84a2BbD9bb9c8E686AC95BB5d55169F3F1",
              "upgradeability": null,
              "chain": "mantle",
              "description": "Stargate liquidity pool for mETH on Mantle.",
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "mantle",
            "includeInTotal": null,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "contracts": {
        "0": {
          "name": "EndpointV2",
          "address": "0x1a44076050125825900e736c501f859c50fE728c",
          "upgradeability": null,
          "chain": "ethereum",
          "description": "A contract that is part of the LayerZero messaging protocol. The Stargate OApp owner can configure verification and execution settings here."
        },
        "1": {
          "name": "Stargate Verifier",
          "address": "0x8FafAE7Dd957044088b3d0F67359C327c6200d18",
          "upgradeability": null,
          "chain": "ethereum",
          "description": "One out of the two DVN contracts that are currently registered to verify all cross chain messages."
        },
        "2": {
          "name": "Nethermind Verifier",
          "address": "0xa59BA433ac34D2927232918Ef5B2eaAfcF130BA5",
          "upgradeability": null,
          "chain": "ethereum",
          "description": "One out of the two DVN contracts that are currently registered to verify all cross chain messages."
        },
        "3": {
          "name": "LayerZero Executor",
          "address": "0x173272739Bd7Aa6e4e214714048a9fE699453059",
          "upgradeability": {
            "proxyType": "EIP1967 proxy",
            "admins": ["0xa36797bA947b378AefE5f726Cd87766CD3c25Ee3"],
            "implementations": ["0xDaC2d26317C42ae3CB21357B73404120E1dA4232"]
          },
          "chain": "ethereum",
          "description": "Is trusted to execute verified messages at the destination for a fee. Jobs are assigned to this contract by the LayerZero Endpoint."
        },
        "addresses": [
          {
            "name": "TokenMessaging",
            "address": "0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "A LayerZero OApp owned by Stargate that manages bridging messages from all pools on Ethereum. It can batch messages with a 'bus' mode or dispatch them immediately for higher fees."
          },
          {
            "name": "CreditMessaging",
            "address": "0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "A LayerZero OApp owned by Stargate that is used for the virtual accounting of available tokens to the local pools. A local pool thus has a record of how many tokens are available when bridging to another remote pool. The permissioned Planner role can move these credits."
          },
          {
            "name": "Stargate Verifier",
            "address": "0x8FafAE7Dd957044088b3d0F67359C327c6200d18",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "One of the registered DVNs for the OApp acts through this smart contract. They are allowed to verify LayerZero messages for the Stargate bridge and enable their execution at the destination."
          },
          {
            "name": "Nethermind Verifier",
            "address": "0xa59BA433ac34D2927232918Ef5B2eaAfcF130BA5",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "One of the registered DVNs for the OApp acts through this smart contract. They are allowed to verify LayerZero messages for the Stargate bridge and enable their execution at the destination."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "the OApp owner changes the configuration of the OApp to malicious DVNs and executors.",
            "isCritical": true
          },
          {
            "category": "Funds can be frozen if",
            "text": "the permissioned Planner moves all credits away from the users' chain, preventing them from bridging."
          }
        ]
      },
      "permissions": [
        {
          "name": "Stargate Multisig",
          "description": "This is a Gnosis Safe with 3 / 6 threshold.  Owner of all pools and the associated OApps, can create new pools and endpoints, set fees and modify the OApp configuration to change DVNs and executors.",
          "accounts": [
            {
              "address": "0x65bb797c2B9830d891D87288F029ed8dACc19705",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x2E1078e128e8AA6A70eC8d1B17A79Fc4B457d437",
              "type": "EOA"
            },
            {
              "address": "0x565cFd7224bbc2a81a6e2a1464892ecB27efB070",
              "type": "EOA"
            },
            {
              "address": "0x1D7C6783328C145393e84fb47a7f7C548f5Ee28d",
              "type": "EOA"
            },
            {
              "address": "0x79e2b9C1F6C9ed1375C93AaF139e6C4537f48523",
              "type": "EOA"
            },
            {
              "address": "0xF05F4211ad15A8e49b49C0436067CFFfEa783aA4",
              "type": "EOA"
            },
            {
              "address": "0xf02CC4dc84aC59Bd6089BAddcEB9d4Ef3AEFb0f0",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "LayerZero Multisig",
          "description": "This is a Gnosis Safe with 2 / 5 threshold.  The owner of the LayerZero contracts EndpointV2, Uln302 and Treasury. Can register and set default MessageLibraries (used e.g. for verification of Stargate messages) and change the Treasury address (LayerZero fee collector).",
          "accounts": [
            {
              "address": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327",
              "type": "EOA"
            },
            {
              "address": "0xe095F2590eF1Ab39601445025847Ed8E4B40D687",
              "type": "EOA"
            },
            {
              "address": "0xBb6633cc267951E938F9B6421E4F54aa5b2c1936",
              "type": "EOA"
            },
            {
              "address": "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
              "type": "EOA"
            },
            {
              "address": "0x67FC8c432448f9a8d541C17579EF7a142378d5aD",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Planner",
          "accounts": [
            {
              "address": "0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
              "type": "EOA"
            }
          ],
          "description": "Central actor who can move credits (see CreditMessaging contract) among chains and thus move liquidity claims of the Stargate pools. Abuse of this permission can impact liveness but not security."
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Security models: isolated vs shared",
          "url": "https://medium.com/l2beat/circumventing-layer-zero-5e9f652a5d3e",
          "thumbnail": "l2beat-01.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "sygma",
      "createdAt": "1711107103",
      "display": {
        "name": "Sygma",
        "slug": "sygma",
        "category": "Hybrid",
        "description": "Sygma is an interoperability protocol enabling asset transfers, non-fungible tokens, and cross-chain execution. With Sygma, developers can extend their applications across Ethereum mainnet, Base, Cronos, Polygon, Gnosis, Polkadot, Kusama, and other Substrate-based chains with active work on Bitcoin and Cosmos SDK interoperability.",
        "detailedDescription": "Sygma in its current version is an interoperability protocol relying, from the Ethereum's point-of-view, on a     single EOA address' signature. This address is meant to represent MPC validators. There are plans in the future to extend the protocol and     add zk verifiers for block header oracle verification and optimistic routes that can be tailored to users' needs, however at the moment these capabilities are not deployed.",
        "links": {
          "websites": [
            "https://buildwithsygma.com/",
            "https://blog.buildwithsygma.com"
          ],
          "documentation": ["https://docs.buildwithsygma.com"],
          "explorers": [
            "https://scan.buildwithsygma.com",
            "https://scan.test.buildwithsygma.com"
          ],
          "repositories": ["https://github.com/sygmaprotocol"],
          "socialMedia": [
            "https://discord.gg/Qdf6GyNB5J",
            "https://twitter.com/buildwithsygma",
            "https://t.me/buildwithsygma"
          ],
          "apps": [
            "https://subbridge.io",
            "https://docs.buildwithsygma.com/resources/environments/testnet/#testnet-faucet",
            "https://sygma-react-widget.pages.dev/",
            "https://validator.faucet.chainsafe.dev/upload"
          ]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "4/7 of the MPC group (the Sygma relayer network) is required to create a cross-chain message with the MPC signature.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Contracts are not upgradable, however they are modular and configurable via a MultiSig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "warning"
        }
      },
      "technology": {
        "destination": [
          "Phala",
          "Khala",
          "Polygon",
          "Cronos",
          "Base",
          "Gnosis"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Sygma currently leverages an MPC relayer network along with threshold signature schemes (TSS) to facilitate cross-chain transfers. From the PoV of Ethereum transfers are authorized by a single EOA address.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "The Sygma MPC Relayer is, according to project`s information, is supposed to be a set of decentralized permissioned network agents and is the entry-level into Sygma verification systems. On each deposit event or cross-chain message, the trusted relayers on the Sygma protocol perform an MPC ceremony utilizing threshold signature signing (TSS) to jointly attest to the validity of the cross-chain message prior to execution. Although entry-level, an MPC relayer architecture represents a significant increase in security versus traditional multisig bridges, ensuring that no single participant can defeat an honest majority. The current Sygma relayer network consists of a set of federated entities including Bware Labs, Phala Network, ChainSafe Systems, and Sygma Labs. It is worth noting that this offchain setup cannot be verified on Ethereum and has to be trusted.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "Greater than threshold number of MPC relayer nodes decide to censor certain transactions.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "Greater than threshold number of MPC relayer nodes are maliciously taken over resulting in signing of malicious transactions.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            },
            {
              "category": "Funds can be lost if",
              "text": "Greater than threshold number of MPC relayer nodes lose access to their MPC private keys.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Depending on the integration of the specific token route, bridged tokens will follow either a lock/release (1:1 backed, wrapped asset) mechanism or a burn/mint (synthetic asset) mechanism.",
          "risks": [],
          "references": []
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0xC832588193cd5ED2185daDA4A531e0B26eC5B830",
            "sinceTimestamp": "1685659954",
            "tokens": ["PHA"],
            "chain": "ethereum"
          }
        ]
      },
      "contracts": {
        "addresses": [
          {
            "name": "Bridge",
            "address": "0x4D878E8Fb90178588Cda4cf1DCcdC9a6d2757089",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The contract that facilitates and manages the cross-chain transfer of assets by recording and verifying deposit and withdrawal events across different blockchain networks. The actual handling of the deposits/withdrawals is handled by a configured Handler contracts such as for example ERC20Handler."
          },
          {
            "name": "ERC20 Bridge Handler",
            "address": "0xC832588193cd5ED2185daDA4A531e0B26eC5B830",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "A contract that handles ERC20 tokens, enabling their deposit, withdrawal, and management within the protocol. This contract currently stores PHA tokens."
          },
          {
            "name": "FeeHandlerRouter",
            "address": "0x1d34808907607FA82Fa1b51F5fBA5Ff5a3Fa90cF",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The FeeHandlerRouter contract routes fee handling for cross-chain transactions to appropriate fee handlers based on the destination domain and resource ID, while managing exemptions through a whitelist system."
          },
          {
            "name": "BasicFeeHandler",
            "address": "0x9f9778DA7c1D0AbE148314d6C1EA6E0A93C151C7",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The BasicFeeHandler contract collects and manages deposit fees for cross-chain transactions, allowing for fee adjustments and the distribution of collected fees, intended for use with the bridge and fee router contract."
          },
          {
            "name": "Permissionless Generic Handler",
            "address": "0x31282123E7bcd947e2c1Bc364d564839574fAdCD",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The PermissionlessGenericHandler contract facilitates the processing of generic deposits and their execution without permissions, integrating with the bridge contract for cross-chain interactions, and is designed to handle complex data encoding for executing transactions across chains."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "admin sets a handler that allows for mismanagement of funds.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Admin Multisig",
          "description": "This is a Gnosis Safe with 3 / 5 threshold.  The admin multisig covers a set of administrative privileges,     including ability to configure handlers that contain logic for handling deposits/withdrawals for specific chains and assets.",
          "accounts": [
            {
              "address": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xacc0268a75280192897a78C706C9FBA2d2b851C4",
              "type": "EOA"
            },
            {
              "address": "0x5a288b42dC222190D8cF5014A330c978ee42A5df",
              "type": "EOA"
            },
            {
              "address": "0xe845B1d31CaA16Bf6c6Bf5E97a28D086bd46FD49",
              "type": "EOA"
            },
            {
              "address": "0x197C57440A30cB28103ab27CB1b0dC86E5907ADA",
              "type": "EOA"
            },
            {
              "address": "0x86a73a594f74C76a6eB8F9E728d992D03252f60f",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Community Multisig",
          "description": "This is a Gnosis Safe with 4 / 6 threshold.  This multisig has the ability to manually withdraw tokens from the bridge using adminWithdraw() method.",
          "accounts": [
            {
              "address": "0xc4d8b2F5501C765dE0C5E12550118F397B197D05",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0x0c1db86328E6CFCD4f530401131Dc9a26DefA12a",
              "type": "EOA"
            },
            {
              "address": "0xd85b34B2Fe1eC7815B6dF659372382A8FA229677",
              "type": "EOA"
            },
            {
              "address": "0xa399460Ce767b06297457178D2F9F8f144017E77",
              "type": "EOA"
            },
            {
              "address": "0xe845B1d31CaA16Bf6c6Bf5E97a28D086bd46FD49",
              "type": "EOA"
            },
            {
              "address": "0xC6458dedf35231F524ED9d7E0DF77A60b9E08676",
              "type": "EOA"
            },
            {
              "address": "0x86a73a594f74C76a6eB8F9E728d992D03252f60f",
              "type": "EOA"
            }
          ]
        },
        {
          "accounts": [
            {
              "address": "0x695bd50CB07ffBd4098b272CE8b52B3c256ca049",
              "type": "EOA"
            }
          ],
          "name": "Pauser/Unpauser",
          "description": "EOA address with the permission to pause/unpause the bridge."
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Architecture overview",
          "url": "https://docs.buildwithsygma.com/protocol",
          "thumbnail": "l2beat-01.jpg"
        },
        {
          "title": "Audits",
          "url": "https://docs.buildwithsygma.com/resources/audits",
          "thumbnail": "l2beat-03.jpg"
        },
        {
          "title": "Sygma governance",
          "url": "https://docs.buildwithsygma.com/readme/governance/govintroduction",
          "thumbnail": "l2beat-03.jpg"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "synapse",
      "createdAt": "1662628329",
      "display": {
        "name": "Synapse",
        "slug": "synapse",
        "links": {
          "websites": ["https://synapseprotocol.com/landing"],
          "apps": ["https://synapseprotocol.com"],
          "documentation": ["https://docs.synapseprotocol.com/"],
          "repositories": ["https://github.com/synapsecns"],
          "explorers": ["https://analytics.synapseprotocol.com/"],
          "socialMedia": [
            "https://twitter.com/SynapseProtocol",
            "https://discord.gg/synapseprotocol",
            "https://forum.synapseprotocol.com/",
            "https://synapse.mirror.xyz/"
          ]
        },
        "description": "Synapse is a token bridge leveraging a validator between chains and liquidity pools to perform cross-chain and same chain swaps.",
        "category": "Hybrid"
      },
      "config": {
        "escrows": [
          {
            "address": "0x2796317b0fF8538F253012862c06787Adfb8cEb6",
            "sinceTimestamp": "1629082107",
            "tokens": [
              "ETH",
              "WETH",
              "FRAX",
              "USDT",
              "USDC",
              "WBTC",
              "DAI",
              "gOHM"
            ],
            "chain": "ethereum"
          },
          {
            "address": "0x1116898DdA4015eD8dDefb84b6e8Bc24528Af2d8",
            "sinceTimestamp": "1629082839",
            "tokens": ["USDT", "DAI", "USDC"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": [
          "Arbitrum",
          "Avalanche",
          "Aurora",
          "Base",
          "Blast",
          "BNB Chain",
          "Cronos",
          "DFK Chain",
          "Optimism",
          "Polygon",
          "Aurora",
          "Boba Network",
          "Fantom",
          "Metis"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Synapse leverages cross-chain messaging to transfer tokens from Ethereum to other chains and vice-versa. The external actor is observing events on supported chains and manages funds accordingly. The tokens are swapped using a typical lock-mint bridge with a wrapped asset on the other chain, or are provided via liquidity pools, where the user funds are converted to a stable on one end and on the other end synthetic stablecoin nUSD is minted and immediately swapped to a given token.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "External actor observe events on Ethereum and transfer funds to other bridges. The same happens when bridging back to Ethereum, external actor instructs EOA to perform withdraw on users account.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "nodes decide not to transfer tokens after observing an event on Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "nodes decide to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "nodes decide to withdraw all the funds from the Ethereum Contract.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Type of the token received on the destination chain depends on the token, if it is native to this chain user will receive canonical token. If the bridged token is not native to the destination chain then user will end up with wrapped version, the contract is called BridgeToken and is upgradable.",
          "references": [],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded or not securely implemented.",
              "isCritical": true
            }
          ]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Withdraws are validated by EOA.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "3 minutes delay",
          "description": "Bridge can be upgraded after 3 minutes delay by a 2/3 Admin MultiSig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical",
          "description": "Tokens transferred are considered canonical on the destination chain.",
          "sentiment": "good"
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "L1BridgeZap",
            "description": "Entry point for deposits. Acts as a relayer between user and escrow, enabling token swap feature.",
            "address": "0x6571d6be3d8460CF5F7d6711Cd9961860029D85F"
          },
          {
            "name": "SynapseBridge",
            "address": "0x2796317b0fF8538F253012862c06787Adfb8cEb6",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x7B3C1f09088Bdc9f136178E170aC668C8Ed095f2"],
              "implementations": ["0x31fe393815822edacBd81C2262467402199EFD0D"]
            },
            "chain": "ethereum",
            "description": "Main escrow contract where all the funds are being held, the address with certain privileges can perform withdraw on user's behalf."
          },
          {
            "name": "Liquidity Pool",
            "description": "Contract utilized as Liquidity Pool, allowing users to bridge their tokens to canonical versions on Ethereum.",
            "address": "0x1116898DdA4015eD8dDefb84b6e8Bc24528Af2d8"
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is a 3 minutes delay on code upgrades."
          }
        ]
      },
      "permissions": [
        {
          "name": "Bridge Multisig",
          "description": "This is a Gnosis Safe with 2 / 3 threshold. It uses the following modules: AllowanceModule. Manages the bridge parameters and can upgrade its implementation, in case of malicious upgrade user's funds can be lost. Additionally it manages Liquidity Pool with the permissions to mint new tokens.",
          "accounts": [
            {
              "address": "0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55",
              "type": "MultiSig"
            }
          ],
          "chain": "ethereum",
          "references": null,
          "participants": [
            {
              "address": "0xb3DAD3C24A861b84fDF380B212662620627D4e15",
              "type": "EOA"
            },
            {
              "address": "0x9Ce9dc8B12E264F00e80F35326040C75201C38f3",
              "type": "EOA"
            },
            {
              "address": "0x0d745Ad687F2b1E1941569f09f612F60ad4aD5BC",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Nodes (NODEGROUP_ROLE)",
          "description": "Is an executor who can call regular bridging functions like withdrawing funds and minting SynERC20 Wrapped tokens.",
          "accounts": [
            {
              "address": "0x230A1AC45690B9Ae1176389434610B9526d2f21b",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Governors (GOVERNANCE_ROLE)",
          "description": "Can set bridging fees, pause and unpause the SynapseBridge contract.",
          "accounts": [
            {
              "address": "0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55",
              "type": "MultiSig"
            },
            {
              "address": "0xa31C04BFD3545E6d00A80573a0B009F7557D958D",
              "type": "EOA"
            }
          ]
        },
        {
          "name": "Admin (DEFAULT_ADMIN_ROLE)",
          "description": "Can call setWethAddress() on the SynapseBridge contract.",
          "accounts": [
            {
              "address": "0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55",
              "type": "MultiSig"
            }
          ]
        }
      ]
    },
    {
      "type": "bridge",
      "id": "transporter",
      "createdAt": "1718781548",
      "display": {
        "name": "Transporter",
        "slug": "transporter",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://app.transporter.io/"],
          "repositories": ["https://docs.chain.link/ccip/architecture"],
          "documentation": ["https://docs.chain.link/ccip"],
          "socialMedia": ["https://x.com/transporter_io"]
        },
        "description": "Transporter is a Token Bridge based on Chainlink’s Cross-Chain Interoperability Protocol (CCIP) network.",
        "detailedDescription": "Transporter is a hybrid bridge that can work either as a Token Bridge or Liquidity Network depending on the requirements of tokens.      It is using Chainlink CCIP standard for cross-chain communication, and it makes use of a secondary network of nodes, called Risk Management Network, responsible for validating the messages or halt the bridge."
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Chainlink Oracle network is responsible for validating cross-chain messages. For additional security it uses off-chain secondary validation network called Risk Management Network.        These validators are tasked with monitoring anomalous behavior and can halt the network if necessary.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Configuration changes and upgrades to CCIP are executed through the RBACTimelock smart contract. Upgrades to the source contracts can be proposed by Timelock Proposers and executed with a 3h delay. Pending timelock operations can be canceled by Timelock Cancellers.",
          "sentiment": "warning"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading. ",
          "sentiment": "warning"
        }
      },
      "technology": {
        "destination": [
          "Ethereum",
          "Arbitrum",
          "Base",
          "Optimism",
          "Polygon",
          "Gnosis Chain",
          "Wemix",
          "BNB Chain",
          "Avalanche"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Transporter is a Token Bridge based on the CCIP network. The CCIP network is an AMB (Arbitrary Message Bridge) that enables the cross-chain transfer of arbitrary messages that are attested by ChainLink Oracles as well as a separate Risk Management Network. \n        On each chain it has a singleton Router contract. For each route (”lane”) there is a triplet of OnRamp, OffRamp and CommitStore contracts defined. OnRamp is used to send messages to a destination chain, \n        while OffRamp and CommitStore are used to receive messages. The CommitStore is used to store Merkle roots of CCIP messages sent from the Source chain, while OffRamp is used to verify and execute incoming messages. \n        Both OnRamps and OffRamps use TokenPools to escrow tokens, one TokenPool per token. TokenPools - depending on token - may Lock/Release or Mint/Burn tokens. They may also use some custom setup, like e.g. for USDC where TokenPool is a wrapper for Circle’s CCTP bridge.",
          "risks": [],
          "references": []
        },
        "validation": {
          "name": "Oracle Network",
          "description": "Chainlink Oracle network is responsibile for validating cross-chain messages. For additional security, CCIP uses an off-chain secondary validation network called Risk Management Network.\n        Each pathway between a source and a destination blockchain contains two Oracle committees. One committee interacts with the CommitStore contract on the destination chain to store the Merkle root \n        of the finalized messages on the source blockchain. After the Risk Management Network verifies the merkle root and submits a voteToBless() transaction, the second oracle committee can execute the message on the destination chain.",
          "references": [
            {
              "text": "Risk Management Network",
              "href": "https://docs.chain.link/ccip/concepts#risk-management-network"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "oracle network fails to facilitate the transfer.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "oracle network is compromised and Risk Management Network fails to halt (\"curse\") the bridge. Both networks would need to be separately compromised."
            }
          ]
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0x057152DB365B47851B0A0bd431644b8eE21fE1b4",
            "newVersion": true,
            "sinceTimestamp": "1688661647",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x057152DB365B47851B0A0bd431644b8eE21fE1b4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xA81f4AB595dE5C14759245DE5ce9899D380FeFda",
            "newVersion": true,
            "sinceTimestamp": "1701285215",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xA81f4AB595dE5C14759245DE5ce9899D380FeFda",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x8291a8E8dCF429e2FA7d032bF3E583ee959F3B06",
            "newVersion": true,
            "sinceTimestamp": "1708552763",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x8291a8E8dCF429e2FA7d032bF3E583ee959F3B06",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x69c24c970B65e22Ac26864aF10b2295B7d78f93A",
            "newVersion": true,
            "sinceTimestamp": "1709738675",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x69c24c970B65e22Ac26864aF10b2295B7d78f93A",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x619ED9fE2E5CfD9FAE364E703b60eA776Bb5924E",
            "newVersion": true,
            "sinceTimestamp": "1711027487",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x619ED9fE2E5CfD9FAE364E703b60eA776Bb5924E",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x0C291Ae31730901515e5C46406A6ba2d88c1f4aA",
            "newVersion": true,
            "sinceTimestamp": "1712691755",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x0C291Ae31730901515e5C46406A6ba2d88c1f4aA",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x6452d693860ab7e18fC5858C05980F63d93F37a6",
            "newVersion": true,
            "sinceTimestamp": "1718219663",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x6452d693860ab7e18fC5858C05980F63d93F37a6",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xF84Bf7D614F3138D805186C497995d4eD315fA72",
            "newVersion": true,
            "sinceTimestamp": "1720823027",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xF84Bf7D614F3138D805186C497995d4eD315fA72",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xa96787DCe9Df7BF7bB033E39777bd108E29D349b",
            "newVersion": true,
            "sinceTimestamp": "1720821911",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xa96787DCe9Df7BF7bB033E39777bd108E29D349b",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xf5224EfD7Ea9edFa6b6e06964084b92426DCdE99",
            "newVersion": true,
            "sinceTimestamp": "1717695479",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xf5224EfD7Ea9edFa6b6e06964084b92426DCdE99",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xd72F7010f0Fa621aB0869e61e9bb4e3cC887c66c",
            "newVersion": true,
            "sinceTimestamp": "1722536615",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xd72F7010f0Fa621aB0869e61e9bb4e3cC887c66c",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x0Bc42675799D0C1efE3CDe64857714ae84f075B4",
            "newVersion": true,
            "sinceTimestamp": "1724954207",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x0Bc42675799D0C1efE3CDe64857714ae84f075B4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x66D40E0D2819a2264B2a61f5DD578573B9dedCEc",
            "newVersion": true,
            "sinceTimestamp": "1725470819",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x66D40E0D2819a2264B2a61f5DD578573B9dedCEc",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xa35304aA2D659e5E06A768fEc4Af3B443916C215",
            "newVersion": true,
            "sinceTimestamp": "1727815127",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xa35304aA2D659e5E06A768fEc4Af3B443916C215",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x50f6631B377be52E132DF35a2F05eA54fda882ac",
            "newVersion": true,
            "sinceTimestamp": "1698777515",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x50f6631B377be52E132DF35a2F05eA54fda882ac",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xc62c311FE64abf19CF33195e15c188Ca6d1AaD3e",
            "newVersion": true,
            "sinceTimestamp": "1709217479",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xc62c311FE64abf19CF33195e15c188Ca6d1AaD3e",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x8BcD7e48Dd2104ed83eb1CE0c6E7610604AE9062",
            "newVersion": true,
            "sinceTimestamp": "1712691803",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x8BcD7e48Dd2104ed83eb1CE0c6E7610604AE9062",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xd1b3015ceFCAC84dB3EFCBB18FBdd50BA5aF49DE",
            "newVersion": true,
            "sinceTimestamp": "1714419419",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xd1b3015ceFCAC84dB3EFCBB18FBdd50BA5aF49DE",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x6dDF2F3f93688dfc9d37DF7078982cE8E6494DB2",
            "newVersion": true,
            "sinceTimestamp": "1714419443",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x6dDF2F3f93688dfc9d37DF7078982cE8E6494DB2",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x1580C7d4754f5671626e42f0372D56104B092CFA",
            "newVersion": true,
            "sinceTimestamp": "1715364503",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x1580C7d4754f5671626e42f0372D56104B092CFA",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xa17698199466E71bAFC31F226db341B7840701E7",
            "newVersion": true,
            "sinceTimestamp": "1715888531",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xa17698199466E71bAFC31F226db341B7840701E7",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x7559a84Ae7B75F4B0E0E540312A3Ec912B2128CA",
            "newVersion": true,
            "sinceTimestamp": "1719424031",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x7559a84Ae7B75F4B0E0E540312A3Ec912B2128CA",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x80e2dcE0A16c8DB769995129cF6BbFCac8E4cFb8",
            "newVersion": true,
            "sinceTimestamp": "1720026155",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x80e2dcE0A16c8DB769995129cF6BbFCac8E4cFb8",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x8c6028e38391cfC2A1a28f4359EA5732E9422e56",
            "newVersion": true,
            "sinceTimestamp": "1722536699",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x8c6028e38391cfC2A1a28f4359EA5732E9422e56",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x57D3bb46aF4A9b210FAE046796013090D428475F",
            "newVersion": true,
            "sinceTimestamp": "1697125187",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x57D3bb46aF4A9b210FAE046796013090D428475F",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xcd196D3905AfA0eCB4e0e62C2D7d6c52f9C73526",
            "newVersion": true,
            "sinceTimestamp": "1697125199",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xcd196D3905AfA0eCB4e0e62C2D7d6c52f9C73526",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x2dd317E7e36544C5222818F228d607c209517470",
            "newVersion": true,
            "sinceTimestamp": "1697125139",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x2dd317E7e36544C5222818F228d607c209517470",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x123ed44f3B863a684437Ebf18F8a744c250Ee5cA",
            "newVersion": true,
            "sinceTimestamp": "1697125163",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x123ed44f3B863a684437Ebf18F8a744c250Ee5cA",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x73aEB5ECA03Ad587B8Fdcc2B61f9fb4D2e3D90c1",
            "newVersion": true,
            "sinceTimestamp": "1706129963",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x73aEB5ECA03Ad587B8Fdcc2B61f9fb4D2e3D90c1",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x21377fe476Fb8587CbAFd47155093597Fa4df45E",
            "newVersion": true,
            "sinceTimestamp": "1706051735",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x21377fe476Fb8587CbAFd47155093597Fa4df45E",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xeaE89E53B8317CaB04165F5323285252D5669B73",
            "newVersion": true,
            "sinceTimestamp": "1707769475",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xeaE89E53B8317CaB04165F5323285252D5669B73",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xc43c01026128Aa758A65D12dB6a72CE4DD778dF2",
            "newVersion": true,
            "sinceTimestamp": "1707769439",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xc43c01026128Aa758A65D12dB6a72CE4DD778dF2",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xdCa0A2341ed5438E06B9982243808A76B9ADD6d0",
            "newVersion": true,
            "sinceTimestamp": "1708552811",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xdCa0A2341ed5438E06B9982243808A76B9ADD6d0",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x047204D42d93a6471F7c9Ec94292B4B00E8e0786",
            "newVersion": true,
            "sinceTimestamp": "1711406459",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x047204D42d93a6471F7c9Ec94292B4B00E8e0786",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xE2F0dad85D504aa046b9F704a426fD6C5493e366",
            "newVersion": true,
            "sinceTimestamp": "1711406435",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xE2F0dad85D504aa046b9F704a426fD6C5493e366",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xa370CEcd451ecf15c2A01ec47762E967dF7574DA",
            "newVersion": true,
            "sinceTimestamp": "1711406315",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xa370CEcd451ecf15c2A01ec47762E967dF7574DA",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x8272dbBA30f14900b22b4bfC8DB4E88B02bA413a",
            "newVersion": true,
            "sinceTimestamp": "1713201383",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x8272dbBA30f14900b22b4bfC8DB4E88B02bA413a",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xb854536206EB6C1013b1642b576196E5EF19D7BA",
            "newVersion": true,
            "sinceTimestamp": "1713201359",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xb854536206EB6C1013b1642b576196E5EF19D7BA",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x6ce8b799002BbECc7df94c18BF150B3b0E4A28F4",
            "newVersion": true,
            "sinceTimestamp": "1713201839",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x6ce8b799002BbECc7df94c18BF150B3b0E4A28F4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x9797E886EDe987AEf6A62885dFD6CcA885D828E6",
            "newVersion": true,
            "sinceTimestamp": "1709217539",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x9797E886EDe987AEf6A62885dFD6CcA885D828E6",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x44622f4604353E4815A4212d5a3dD137A1C7FF14",
            "newVersion": true,
            "sinceTimestamp": "1715364551",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x44622f4604353E4815A4212d5a3dD137A1C7FF14",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x06f9817a91595E1B595F789Fb91529e8651da9B8",
            "newVersion": true,
            "sinceTimestamp": "1715364563",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x06f9817a91595E1B595F789Fb91529e8651da9B8",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xBF7cb652A2d5ed3BFc3832Ef8Af33Ffb0cDc0982",
            "newVersion": true,
            "sinceTimestamp": "1715888603",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xBF7cb652A2d5ed3BFc3832Ef8Af33Ffb0cDc0982",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x8300e89e82A840176eb250EcDA0A7dBDb4a6B12D",
            "newVersion": true,
            "sinceTimestamp": "1715888555",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x8300e89e82A840176eb250EcDA0A7dBDb4a6B12D",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x0DAFed8dAF42040dB2c6227ca2AEB14D9C8B2602",
            "newVersion": true,
            "sinceTimestamp": "1716484655",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x0DAFed8dAF42040dB2c6227ca2AEB14D9C8B2602",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x0238d2C272f17CF11AEDB08CDE515d56ED25E2E4",
            "newVersion": true,
            "sinceTimestamp": "1718911127",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x0238d2C272f17CF11AEDB08CDE515d56ED25E2E4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xcd69c117bf91Fc57d5fC237dFAbA5f17B5322733",
            "newVersion": true,
            "sinceTimestamp": "1718911091",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xcd69c117bf91Fc57d5fC237dFAbA5f17B5322733",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x5756880B6a1EAba0175227bf02a7E87c1e02B28C",
            "newVersion": true,
            "sinceTimestamp": "1719078695",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x5756880B6a1EAba0175227bf02a7E87c1e02B28C",
              "upgradeability": {
                "proxyType": "EIP1967 proxy",
                "admins": ["0xD3cF979e676265e4f6379749DECe4708B9A22476"],
                "implementations": [
                  "0x72427dA7EFBa1585E94F30C72221d8d394aE3Bb7"
                ]
              },
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x4Ce6f5cacF8Bd393104c12F6151B727eabBf675c",
            "newVersion": true,
            "sinceTimestamp": "1719424067",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x4Ce6f5cacF8Bd393104c12F6151B727eabBf675c",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xd8f734c938200BA294d0De5B555E8ff77d66c351",
            "newVersion": true,
            "sinceTimestamp": "1724956931",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xd8f734c938200BA294d0De5B555E8ff77d66c351",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x80Cc104119901fd66088C9a8219E50D9547dE2d4",
            "newVersion": true,
            "sinceTimestamp": "1724955875",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x80Cc104119901fd66088C9a8219E50D9547dE2d4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xBA0E1c1F702D7Ec44a555759517BDBe9f7c824C3",
            "newVersion": true,
            "sinceTimestamp": "1724955959",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xBA0E1c1F702D7Ec44a555759517BDBe9f7c824C3",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x45A103142585bdFc49cdb137f2a45D1AE7F84b6b",
            "newVersion": true,
            "sinceTimestamp": "1728073703",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x45A103142585bdFc49cdb137f2a45D1AE7F84b6b",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x6Ff6BF3BF8af2e419DDC7BF038aFa5EB92b6cD7e",
            "newVersion": true,
            "sinceTimestamp": "1711027655",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x6Ff6BF3BF8af2e419DDC7BF038aFa5EB92b6cD7e",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x4C3aEe10334461F1f33c0A8843424de3F8fb7709",
            "newVersion": true,
            "sinceTimestamp": "1715888579",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x4C3aEe10334461F1f33c0A8843424de3F8fb7709",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xC2291992A08eBFDfedfE248F2CCD34Da63570DF4",
            "newVersion": true,
            "sinceTimestamp": "1688661575",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xC2291992A08eBFDfedfE248F2CCD34Da63570DF4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xA82A87a9b6550e89dd8a7C8a1E3e421974eaf858",
            "newVersion": true,
            "sinceTimestamp": "1712692055",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xA82A87a9b6550e89dd8a7C8a1E3e421974eaf858",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x2764910B500689BbC9DB16c7AD61c6DD32FDE73B",
            "newVersion": true,
            "sinceTimestamp": "1715364491",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x2764910B500689BbC9DB16c7AD61c6DD32FDE73B",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xC456EaE992e4f2925E3F75Ac4809dF387756CD29",
            "newVersion": true,
            "sinceTimestamp": "1722536651",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xC456EaE992e4f2925E3F75Ac4809dF387756CD29",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x82Df5c453e854CFaD64EA3f16497B5c5b9DB012B",
            "newVersion": true,
            "sinceTimestamp": "1722536915",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x82Df5c453e854CFaD64EA3f16497B5c5b9DB012B",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x2c5C39F515277E64D96C28f3fc49Ad1d6a25B5B4",
            "newVersion": true,
            "sinceTimestamp": "1728056903",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x2c5C39F515277E64D96C28f3fc49Ad1d6a25B5B4",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x1175E4CFd6a73A4c1F1f2c1400a08D88554FA62e",
            "newVersion": true,
            "sinceTimestamp": "1709671307",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x1175E4CFd6a73A4c1F1f2c1400a08D88554FA62e",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0x78196436aF11b948c7036424B1ceA711fAdAd288",
            "newVersion": true,
            "sinceTimestamp": "1709671463",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0x78196436aF11b948c7036424B1ceA711fAdAd288",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          },
          {
            "address": "0xa904B9343632A6ca4f4a1b0C9eFa011cb319d000",
            "newVersion": true,
            "sinceTimestamp": "1722536579",
            "tokens": "*",
            "excludedTokens": null,
            "premintedTokens": null,
            "contract": {
              "name": null,
              "address": "0xa904B9343632A6ca4f4a1b0C9eFa011cb319d000",
              "upgradeability": null,
              "chain": "ethereum",
              "description": null,
              "upgradableBy": null,
              "upgradeDelay": null
            },
            "isUpcoming": null,
            "chain": "ethereum",
            "includeInTotal": true,
            "source": null,
            "bridgedUsing": null,
            "isHistorical": null,
            "untilTimestamp": null,
            "sharedEscrow": null
          }
        ]
      },
      "contracts": {
        "addresses": [
          {
            "name": "Router",
            "address": "0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "Central contract in CCIP responsible for the configuration of OnRamp, OffRamp and Commit Stores for different chains.\n        This is an example Router contract for one of the lanes. There are many more lanes in the system, please check the specific smart contract for the lane you are interested in."
          },
          {
            "name": "OnRamp1",
            "address": "0x86B47d8411006874eEf8E4584BdFD7be8e5549d1",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "OnRamp for outgoing messages to Arbitrum.\n        This is an example OnRamp contract for one of the lanes. There are many more lanes in the system, please check the specific smart contract for the lane you are interested in."
          },
          {
            "name": "OffRamp1",
            "address": "0x3a129e6C18b23d18BA9E6Aa14Dc2e79d1f91c6c5",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "OffRamp for incoming messages from Arbitrum.\n        This is an example OffRamp contract for one of the lanes. There are many more lanes in the system, please check the specific smart contract for the lane you are interested in."
          },
          {
            "name": "CommitStore1",
            "address": "0x31f6ab382DDeb9A316Ab61C3945a5292a50a89AB",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "CommitStore for storing incoming message roots from Arbitrum.\n        This is an example CommitStore contract for one of the lanes. There are many more lanes in the system, please check the specific smart contract for the lane you are interested in."
          },
          {
            "name": "ARMProxy",
            "address": "0x411dE17f12D1A34ecC7F45f49844626267c75e81",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "The contract that manages the Risk Management Network, allowing blessing (validation) of messages and cursing (halting) the chain."
          },
          {
            "name": "RBACTimelock",
            "address": "0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "CCIP contract upgrades have to go through a 3h timelock."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is a 3h delay on code upgrades, during which designated Cancellers can veto the upgrade."
          }
        ]
      },
      "permissions": [
        {
          "name": "RBACTimelock",
          "description": "Role-based Access Control Timelock (RBACTimelock) smart contract. Onchain security-critical configuration changes and upgrades to the CCIP must pass through this contract. CCIP contract upgrades have to go through a 3h timelock.",
          "accounts": [
            {
              "address": "0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
              "type": "Contract"
            }
          ]
        },
        {
          "name": "Timelock Admins",
          "accounts": [
            {
              "address": "0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
              "type": "Contract"
            }
          ],
          "description": "Admins of the RBACTimelock contract. Can modify all other roles."
        },
        {
          "name": "Timelock Proposers",
          "accounts": [
            {
              "address": "0xE53289F32c8E690b7173aA33affE9B6B0CB0012F",
              "type": "Contract"
            },
            {
              "address": "0xD6597750bf74DCAEC57e0F9aD2ec998D837005bf",
              "type": "MultiSig"
            }
          ],
          "description": "Proposers of the RBACTimelock contract. Can propose upgrades."
        },
        {
          "name": "Timelock Cancellers",
          "accounts": [
            {
              "address": "0xE53289F32c8E690b7173aA33affE9B6B0CB0012F",
              "type": "Contract"
            },
            {
              "address": "0xAD97C0270a243270136E40278155C12ce7C7F87B",
              "type": "Contract"
            },
            {
              "address": "0xD6597750bf74DCAEC57e0F9aD2ec998D837005bf",
              "type": "MultiSig"
            },
            {
              "address": "0xa8D5E1daA6D8B94f11D77B7E09DE846292ef69FF",
              "type": "Contract"
            },
            {
              "address": "0x117ec8aD107976e1dBCc21717ff78407Bc36aADc",
              "type": "Contract"
            }
          ],
          "description": "Cancellers of the RBACTimelock contract. Can cancel pending upgrades."
        },
        {
          "name": "Timelock Executors",
          "accounts": [
            {
              "address": "0x82b8A19497fA25575f250a3DcFfCD2562B575A2e",
              "type": "Contract"
            }
          ],
          "description": "Contract through which RBACTimelock proposals are executed. Proposals execution can be initiated by anyone."
        }
      ],
      "knowledgeNuggets": []
    },
    {
      "type": "bridge",
      "id": "portal",
      "createdAt": "1665415357",
      "display": {
        "name": "Portal (Wormhole)",
        "slug": "portal",
        "links": {
          "websites": ["https://wormhole.com/"],
          "documentation": [
            "https://portalbridge.com/docs/",
            "https://docs.wormhole.com/wormhole"
          ],
          "explorers": ["https://wormholescan.io/"],
          "apps": ["https://portalbridge.com"],
          "repositories": ["https://github.com/wormhole-foundation/wormhole"],
          "socialMedia": [
            "https://discord.gg/wormholecrypto",
            "https://t.me/wormholecrypto",
            "https://twitter.com/wormholecrypto",
            "https://youtube.com/@wormholecrypto"
          ]
        },
        "description": "Portal Token Bridge is built on top of Wormhole, which is a message passing protocol that performs cross-chain communication.",
        "detailedDescription": "It leverages specialized network of nodes called Guardians to do this. It is governed by the same set of Guardians that run the underlying Wormhole protocols.",
        "category": "Token Bridge"
      },
      "config": {
        "escrows": [
          {
            "address": "0x3ee18B2214AFF97000D974cf647E7C347E8fa585",
            "sinceTimestamp": "1631535967",
            "tokens": [
              "WETH",
              "XCN",
              "USDT",
              "USDC",
              "HUSD",
              "BUSD",
              "LINK",
              "SRM",
              "SUSHI",
              "UNI",
              "LDO",
              "DAI",
              "stETH"
            ],
            "chain": "ethereum"
          }
        ]
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be signed offchain by a set of 2/3 of Guardians and then relayed to the destination chain.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "The code that secures the system can be changed arbitrarily and without notice.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "warning"
        }
      },
      "technology": {
        "destination": [
          "Acala",
          "Algorand",
          "Aurora",
          "Avalanche",
          "Binance Smart Chain",
          "Celo",
          "Ethereum",
          "Fantom",
          "Karura",
          "Klaytn",
          "Moonbeam",
          "Near",
          "Oasis",
          "Polygon"
        ],
        "canonical": true,
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "This is a Token Bridge that locks tokens in the escrow contracts on Ethereum and mints tokens on the destination network. What differentiates this solution is the cross-chain message passing via the Wormhole protocol, in which emitted messages on one chain are observed by a network of nodes and then verified. After verification, this message is submitted to the destination chain for processing.",
          "references": [
            {
              "text": "Docs: Wormhole architecture",
              "href": "https://docs.wormhole.com/wormhole/explore-wormhole/components"
            }
          ],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "Validation process takes place in external network called the Guardian Network. Nodes in the network, called Guardians, observe the Core Contract on each supported chain and produce VAAs (Verified Action Approvals, essentially signed messages) when those contracts receive an interaction. Based on the VAA user can withdraw funds on the other end of the bridge.",
          "references": [
            {
              "text": "WormholeCore contract: function verifyVM()",
              "href": "https://etherscan.io/address/0x3c3d457f1522d3540ab3325aa5f1864e34cba9d0#code#F9#L28"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "guardians decide to stop processing certain transactions.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "guardians allow to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "guardians sign a fraudulent message allowing themselves to withdraw all locked funds.",
              "isCritical": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Type of the token received on the destination chain depends on the token, if it is native to this chain user will receive canonical token. If the bridged token is not native to the destination chain then user will end up with wrapped version, the contract is called BridgeToken and is upgradable.",
          "references": [
            {
              "text": "BridgeToken contract implementation",
              "href": "https://etherscan.io/address/0x0fD04a68d3c3A692d6Fa30384D1A87Ef93554eE6#code"
            }
          ],
          "risks": [
            {
              "category": "Funds can be stolen if",
              "text": "destination token contract is maliciously upgraded.",
              "isCritical": true
            }
          ]
        }
      },
      "contracts": {
        "addresses": [
          {
            "name": "WormholeCore",
            "address": "0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x0000000000000000000000000000000000000000"],
              "implementations": ["0x3c3d457f1522D3540AB3325Aa5f1864E34cBA9D0"]
            },
            "chain": "ethereum",
            "description": "Governance contract storing current Guardian set and provides a facility to verify a cross-chain message by verifying Guardians signatures.         Guardians themselves can choose a new Guardian set. Can be upgraded by Guardians."
          },
          {
            "name": "TokenBridge",
            "address": "0x3ee18B2214AFF97000D974cf647E7C347E8fa585",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x0000000000000000000000000000000000000000"],
              "implementations": ["0x381752f5458282d317d12C30D2Bd4D6E1FD8841e"]
            },
            "chain": "ethereum",
            "description": "Main bridge contract on Ethereum and an escrow for ETH and ERC20 tokens that were bridged to other chains. Can be upgraded by Guardians."
          },
          {
            "name": "TokenImplementation",
            "address": "0x0fD04a68d3c3A692d6Fa30384D1A87Ef93554eE6",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "This is the template for BridgedToken implementations minted by Portal on Ethereum."
          },
          {
            "name": "NFTBridge",
            "address": "0x6FFd7EdE62328b3Af38FCD61461Bbfc52F5651fE",
            "upgradeability": {
              "proxyType": "EIP1967 proxy",
              "admins": ["0x0000000000000000000000000000000000000000"],
              "implementations": ["0x3e41904B3766F4cCEb145Cc53D75fEB61722a96C"]
            },
            "chain": "ethereum",
            "description": "NFT bridge contract and an escrow for NFTs that were bridged to other chains. Can be upgraded by Guardians."
          },
          {
            "name": "NFTImplementation",
            "address": "0xEc4d807Cd33a48A7C8Cd73D09B41Aa5160B3a7fc",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "This is the template for bridged NFTs minted by Portal on Ethereum."
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "name": "Guardian Network",
          "description": "Off-chain actors signing messages (VAA) containing transfer information or governance actions such as upgrades, which are decoded on chain with signature checks.",
          "accounts": [
            {
              "address": "0x5893B5A76c3f739645648885bDCcC06cd70a3Cd3",
              "type": "EOA"
            },
            {
              "address": "0xfF6CB952589BDE862c25Ef4392132fb9D4A42157",
              "type": "EOA"
            },
            {
              "address": "0x114De8460193bdf3A2fCf81f86a09765F4762fD1",
              "type": "EOA"
            },
            {
              "address": "0x107A0086b32d7A0977926A205131d8731D39cbEB",
              "type": "EOA"
            },
            {
              "address": "0x8C82B2fd82FaeD2711d59AF0F2499D16e726f6b2",
              "type": "EOA"
            },
            {
              "address": "0x11b39756C042441BE6D8650b69b54EbE715E2343",
              "type": "EOA"
            },
            {
              "address": "0x54Ce5B4D348fb74B958e8966e2ec3dBd4958a7cd",
              "type": "EOA"
            },
            {
              "address": "0x15e7cAF07C4e3DC8e7C469f92C8Cd88FB8005a20",
              "type": "EOA"
            },
            {
              "address": "0x74a3bf913953D695260D88BC1aA25A4eeE363ef0",
              "type": "EOA"
            },
            {
              "address": "0x000aC0076727b35FBea2dAc28fEE5cCB0fEA768e",
              "type": "EOA"
            },
            {
              "address": "0xAF45Ced136b9D9e24903464AE889F5C8a723FC14",
              "type": "EOA"
            },
            {
              "address": "0xf93124b7c738843CBB89E864c862c38cddCccF95",
              "type": "EOA"
            },
            {
              "address": "0xD2CC37A4dc036a8D232b48f62cDD4731412f4890",
              "type": "EOA"
            },
            {
              "address": "0xDA798F6896A3331F64b48c12D1D57Fd9cbe70811",
              "type": "EOA"
            },
            {
              "address": "0x71AA1BE1D36CaFE3867910F99C09e347899C19C3",
              "type": "EOA"
            },
            {
              "address": "0x8192b6E7387CCd768277c17DAb1b7a5027c0b3Cf",
              "type": "EOA"
            },
            {
              "address": "0x178e21ad2E77AE06711549CFBB1f9c7a9d8096e8",
              "type": "EOA"
            },
            {
              "address": "0x5E1487F35515d02A92753504a8D75471b9f49EdB",
              "type": "EOA"
            },
            {
              "address": "0x6FbEBc898F403E4773E95feB15E80C9A99c8348d",
              "type": "EOA"
            }
          ]
        }
      ],
      "milestones": [
        {
          "name": "Contracts hacked for $326M",
          "date": "2022-02-03T00:00:00.00Z",
          "link": "https://rekt.news/wormhole-rekt/",
          "type": "incident"
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Wormhole core architecture",
          "url": "https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0001_generic_message_passing.md"
        },
        {
          "title": "How Wormhole Guardians work",
          "url": "https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0009_guardian_key.md"
        }
      ]
    },
    {
      "type": "bridge",
      "id": "wormholeV1",
      "createdAt": "1663149233",
      "isArchived": true,
      "display": {
        "name": "Wormhole V1",
        "slug": "wormholev1",
        "description": "First version of the Wormhole bridge.",
        "links": { "websites": ["https://wormhole.com/"] },
        "category": "Token Bridge"
      },
      "config": {
        "escrows": [
          {
            "address": "0xf92cD566Ea4864356C5491c177A430C222d7e678",
            "sinceTimestamp": "1611084766",
            "tokens": ["BUSD", "HUSD", "DAI", "SRM", "WETH", "FRAX", "WBTC"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": { "destination": ["Various"], "canonical": true },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "Transfers need to be signed offchain by a set of 2/3 of Guardians and then in a permissionless way relayed to the destination chain.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "No",
          "description": "The code that secures the system can never change.",
          "sentiment": "good"
        },
        "destinationToken": {
          "value": "Wrapped",
          "description": "Tokens transferred by the bridge are not canonical. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "bad"
        }
      }
    },
    {
      "type": "bridge",
      "id": "xdai",
      "createdAt": "1665411755",
      "display": {
        "name": "xDai Bridge",
        "slug": "xdai",
        "category": "Token Bridge",
        "links": {
          "websites": ["https://bridge.gnosischain.com/"],
          "apps": ["https://bridge.gnosischain.com/"],
          "documentation": [
            "https://docs.gnosischain.com/bridges/tokenbridge/xdai-bridge"
          ],
          "explorers": [
            "https://blockscout.com/xdai/mainnet",
            "https://gnosisscan.io/",
            "https://explorer.anyblock.tools/ethereum/poa/xdai/",
            "https://beacon.gnosischain.com/",
            "https://xdai.tokenview.io/"
          ],
          "socialMedia": [
            "https://twitter.com/gnosischain",
            "https://discord.gg/VQb3WzsywU",
            "https://t.me/gnosischain"
          ],
          "repositories": ["https://github.com/gnosischain"]
        },
        "description": "xDai Bridge is the official bridge dedicated to transferring Dai from Ethereum into xDai on Gnosis Chain.",
        "detailedDescription": "It uses a set of trusted validators to confirm deposits for a Lock-Mint swap. Tokens sent to the bridge escrow can be further sent to Compound to generate interest for external recipient, although this functionality has been disabled at the time of Ethereum Merge."
      },
      "config": {
        "escrows": [
          {
            "address": "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016",
            "sinceTimestamp": "1573776000",
            "tokens": ["cDAI", "DAI", "sDAI"],
            "chain": "ethereum"
          }
        ]
      },
      "technology": {
        "destination": ["Gnosis Chain"],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "xDai Bridge is the native Gnosis Chain bridge for swapping Dai on Ethereum into xDai on Gnosis, which is the native asset used for gas and transaction fees. Due to this native aspect of xDai it is minted via block reward contract by Gnosis consensus mechanism. Specifically, when a user deposits Dai to Bridge Contract on Ethereum, it is noticed by an external Bridge Validator Oracle service (4/6 Multisig). After collecting required signatures, the service calls a Bridge Contract on the Gnosis chain which instructs a Block Reward Contract that recipient's xDai balance needs to be increased (as an EVM state update by consensus engine). To transfer xDai to Ethereum, a user deposits xDai to Bridge Contract on Gnosis chain, which is then burned. The Bridge Validator Service provides required signatures for a Bridge Contract on Ethereum which releases Dai to the user. Bridge contract on Ethereum supports sending deposited tokens to Compound to accrue yield, which can be transferred to EOA account with intention to be spent on supporting bridge operations.",
          "references": [
            {
              "text": "xDai Bridge Documentation",
              "href": "https://docs.gnosischain.com/bridges/tokenbridge/xdai-bridge"
            },
            {
              "text": "Earning yield on Bridge Deposit",
              "href": "https://docs.gnosischain.com/bridges/tokenbridge/xdai-bridge#earning-yield-on-bridge-deposits"
            }
          ],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "Dai and xDai deposits to Bridge Contracts are validated by a 4/6 Validator MultiSig. A separate Governor 7/16 Multisig is used for updating validator set, signature thresholds, bridge parameters and bridge contracts.",
          "references": [
            {
              "text": "xDai Bridge Documentation",
              "href": "https://docs.gnosischain.com/bridges/tokenbridge/xdai-bridge"
            }
          ],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "validators decide to not pass selected messages between chains.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a fake message to Gnosis chain to mint more tokens than there are locked on Ethereum thus preventing some existing holders from being able to bring their funds back to Ethereum.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "validators relay a fake message to Ethereum chain allowing a user to withdraw tokens from Ethereum escrow when equivalent amount of tokens has not been deposited and burned on Gnosis chain.",
              "isCritical": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "there's an exploit in Compound when it holds part of user deposit.",
              "isCritical": true
            },
            {
              "category": "Funds can be frozen if",
              "text": "validators don't relay messages between chains."
            },
            {
              "category": "Funds can be frozen if",
              "text": "there's insufficient liquidity of requested token in escrow and Compound."
            }
          ]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "4/6 Validator MultiSig",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Contracts can be upgraded by 7/16 MultiSig",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Native",
          "description": "Tokens transferred via this bridge end up as xDAI and are used to pay for gas on the destination chain.",
          "sentiment": "good"
        }
      },
      "contracts": {
        "addresses": [
          {
            "address": "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016",
            "name": "XDaiForeignBridge",
            "description": "xDai Bridge Contract (Escrow).",
            "upgradeability": {
              "proxyType": "Custom",
              "admins": ["0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6"],
              "implementations": ["0xEeE4f8dB4410beBD74A76cB711D096c5E66d0473"]
            }
          },
          {
            "address": "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E",
            "name": "BridgeValidators",
            "description": "Validator Management Contract.",
            "upgradeability": {
              "proxyType": "Custom",
              "admins": ["0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6"],
              "implementations": ["0x6943A218d58135793F1FE619414eD476C37ad65a"]
            }
          }
        ],
        "risks": [
          {
            "category": "Funds can be stolen if",
            "text": "a contract receives a malicious code upgrade. There is no delay on code upgrades.",
            "isCritical": true
          }
        ]
      },
      "permissions": [
        {
          "accounts": [
            {
              "address": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
              "type": "MultiSig"
            }
          ],
          "name": "Bridge Governance 7/16 MultiSig",
          "description": "Can update bridge contracts, validator set, signature thresholds and bridge parameters"
        },
        {
          "accounts": [
            {
              "address": "0xb8173f558f75EE263013fd6294177bf75279a21e",
              "type": "EOA"
            },
            {
              "address": "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
              "type": "EOA"
            },
            {
              "address": "0x262d23a2d916f6CF08e0235315aA51E22d142d0b",
              "type": "EOA"
            },
            {
              "address": "0x86Da253817DC599059e3AD5A1F098F7b96aBf34c",
              "type": "EOA"
            },
            {
              "address": "0x1685324Bf373670ad5C9c56bd88A1dc1C063b0f9",
              "type": "EOA"
            },
            {
              "address": "0x0101016044726994aFd16f4A99f0d960090D35e7",
              "type": "EOA"
            },
            {
              "address": "0x0f49459e26aBB496C9B5f46b0bfd7bDEb8Ec0bdC",
              "type": "EOA"
            },
            {
              "address": "0x81f202D0E73894dA6966BF5AabC85d6Ce3aC91f8",
              "type": "EOA"
            },
            {
              "address": "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
              "type": "EOA"
            },
            {
              "address": "0x3615Fa045f00ae0eD60Dc0141911757c2AdC5E03",
              "type": "EOA"
            },
            {
              "address": "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
              "type": "EOA"
            },
            {
              "address": "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
              "type": "EOA"
            },
            {
              "address": "0xd26a3F686D43f2A62BA9eaE2ff77e9f516d945B9",
              "type": "EOA"
            },
            {
              "address": "0x865c2F85C9fEa1C6Ac7F53de07554D68cB92eD88",
              "type": "EOA"
            },
            {
              "address": "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
              "type": "EOA"
            },
            {
              "address": "0xF96E3bb5e06DaA129B9981E1467e2DeDd6451DbE",
              "type": "EOA"
            }
          ],
          "name": "Participants in Bridge Governance 7/16 MultiSig",
          "description": "Participants in Bridge Governance 7/16 MultiSig"
        },
        {
          "accounts": [
            {
              "address": "0x97630E2aE609D4104aBdA91F3066C556403182dd",
              "type": "EOA"
            },
            {
              "address": "0x587C0d02B40822f15f05301d87c16f6a08AaDDde",
              "type": "EOA"
            },
            {
              "address": "0x1312E98995bbCc30fc63Db3cef807e20CDd33dca",
              "type": "EOA"
            },
            {
              "address": "0xfe24Cfb2F8872e9ed097C451dE065A9F6048915b",
              "type": "EOA"
            },
            {
              "address": "0x4D1c96B9A49C4469A0b720a22b74b034EDdFe051",
              "type": "EOA"
            },
            {
              "address": "0xc073C8E5ED9Aa11CF6776C69b3e13b259Ba9F506",
              "type": "EOA"
            }
          ],
          "name": "Participants in BridgeValidators 4/6 MultiSig",
          "description": "Bridge Validators"
        },
        {
          "accounts": [
            {
              "address": "0x5eD64f02588C8B75582f2f8eFd7A5521e3F897CC",
              "type": "EOA"
            }
          ],
          "name": "Interest Receiver",
          "description": "Address set to receive interest from investing deposited tokens."
        }
      ]
    },
    {
      "type": "bridge",
      "id": "symbiosis",
      "createdAt": "1688541556",
      "display": {
        "name": "Symbiosis",
        "slug": "symbiosis",
        "category": "Hybrid",
        "description": "Symbiosis is a cross-chain AMM DEX externally validated my a MPC relayers network.",
        "links": {
          "websites": [
            "https://symbiosis.finance/",
            "https://app.symbiosis.finance/swap"
          ],
          "repositories": ["https://github.com/symbiosis-finance"],
          "socialMedia": [
            "https://t.me/symbiosis_finance",
            "https://medium.com/@symbiosis_fi",
            "https://twitter.com/symbiosis_fi"
          ],
          "documentation": ["https://docs.symbiosis.finance"]
        }
      },
      "riskView": {
        "validatedBy": {
          "value": "Third Party",
          "description": "2/3 of the MPC group (the Symbiosis relayers network) is required to create a cross-chain message with the MPC signature.",
          "sentiment": "bad"
        },
        "sourceUpgradeability": {
          "value": "Yes",
          "description": "Contracts are upgradable using a Multisig.",
          "sentiment": "bad"
        },
        "destinationToken": {
          "value": "Canonical or Wrapped",
          "description": "Some tokens transferred are considered canonical but some tokens are not. Users who wish to obtain the canonical counterparts need to do so by trading.",
          "sentiment": "warning"
        }
      },
      "technology": {
        "destination": [
          "Ethereum",
          "BNB Chain",
          "Avalanche",
          "Polygon",
          "Telos",
          "Kava",
          "Boba Ethereum",
          "Boba BNB",
          "ZkSync",
          "Arbitrum One",
          "Optimism",
          "Arbitrum Nova",
          "Polygon zkEVM"
        ],
        "principleOfOperation": {
          "name": "Principle of operation",
          "description": "Symbiosis uses a MPC relayer network to facilitate cross-chain transfers. An AMM on BOBA BNB is used to perform swaps.",
          "references": [],
          "risks": []
        },
        "validation": {
          "name": "Transfers are externally verified",
          "description": "Requests are watched by a relayer network that, utilizing MPC, signs off swaps and token minting.",
          "references": [],
          "risks": [
            {
              "category": "Users can be censored if",
              "text": "MPC nodes decide to censor certain transactions.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            },
            {
              "category": "Funds can be stolen if",
              "text": "MPC nodes decide to maliciously takeover them or there is an external exploit which will result in signing malicious transaction.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            },
            {
              "category": "Funds can be lost if",
              "text": "MPC nodes lose their private keys.",
              "isCritical": true,
              "_ignoreTextFormatting": true
            }
          ]
        },
        "destinationToken": {
          "name": "Destination tokens",
          "description": "Received tokens can be wrapped tokens or native tokens depending on the destination network.",
          "risks": [
            {
              "category": "Funds can be lost if",
              "text": "destination token contract is maliciously upgraded or not securely implemented.",
              "isCritical": true
            }
          ],
          "references": []
        }
      },
      "config": {
        "escrows": [
          {
            "address": "0xb8f275fBf7A959F4BCE59999A2EF122A099e81A8",
            "sinceTimestamp": "1668373200",
            "tokens": ["USDC", "SIS", "WETH"],
            "chain": "ethereum"
          }
        ]
      },
      "contracts": {
        "addresses": [
          {
            "name": "MetaRouter",
            "address": "0xf621Fb08BBE51aF70e7E0F4EA63496894166Ff7F",
            "upgradeability": null,
            "chain": "ethereum",
            "description": "An upgradeable contract to process funds by provided route."
          },
          {
            "address": "0xd5F0f8dB993D26F5df89E70a83d32b369DcCdaa0",
            "name": "Bridge",
            "description": "A contract that generates Oracle requests for the Symbiosis relayers network."
          },
          {
            "address": "0xb8f275fBf7A959F4BCE59999A2EF122A099e81A8",
            "name": "Portal",
            "description": "A contract that stores \"bridged\" liquidity."
          }
        ],
        "risks": [],
        "isIncomplete": true
      },
      "permissions": [
        {
          "name": "Multisig",
          "accounts": [
            {
              "address": "0x5112EbA9bc2468Bb5134CBfbEAb9334EdaE7106a",
              "type": "Contract"
            }
          ],
          "chain": "ethereum",
          "description": "This multisig can upgrade the BridgeV2 and Portal contracts."
        }
      ],
      "knowledgeNuggets": [
        {
          "title": "Bridging contracts explained",
          "url": "https://docs.symbiosis.finance/crosschain-liquidity-engine/bridge-contracts",
          "thumbnail": "l2beat-01.jpg"
        },
        {
          "title": "Relayers network explained",
          "url": "https://docs.symbiosis.finance/relayers-network/pos-relayers-network",
          "thumbnail": "l2beat-03.jpg"
        },
        {
          "title": "Audits",
          "url": "https://docs.symbiosis.finance/main-concepts/security-audits-of-symbiosis",
          "thumbnail": "l2beat-03.jpg"
        }
      ]
    }
  ],
  "meta": {
    "values": {
      "0.createdAt": [["custom", "UnixTime"]],
      "0.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.0.excludedTokens": ["undefined"],
      "0.config.escrows.0.premintedTokens": ["undefined"],
      "0.config.escrows.0.contract.name": ["undefined"],
      "0.config.escrows.0.contract.upgradeability": ["undefined"],
      "0.config.escrows.0.contract.description": ["undefined"],
      "0.config.escrows.0.contract.upgradableBy": ["undefined"],
      "0.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "0.config.escrows.0.isUpcoming": ["undefined"],
      "0.config.escrows.0.source": ["undefined"],
      "0.config.escrows.0.bridgedUsing": ["undefined"],
      "0.config.escrows.0.isHistorical": ["undefined"],
      "0.config.escrows.0.untilTimestamp": ["undefined"],
      "0.config.escrows.0.sharedEscrow": ["undefined"],
      "0.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.1.excludedTokens": ["undefined"],
      "0.config.escrows.1.premintedTokens": ["undefined"],
      "0.config.escrows.1.contract.name": ["undefined"],
      "0.config.escrows.1.contract.description": ["undefined"],
      "0.config.escrows.1.contract.upgradableBy": ["undefined"],
      "0.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "0.config.escrows.1.isUpcoming": ["undefined"],
      "0.config.escrows.1.source": ["undefined"],
      "0.config.escrows.1.bridgedUsing": ["undefined"],
      "0.config.escrows.1.isHistorical": ["undefined"],
      "0.config.escrows.1.untilTimestamp": ["undefined"],
      "0.config.escrows.1.sharedEscrow": ["undefined"],
      "0.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.9.sinceTimestamp": [["custom", "UnixTime"]],
      "0.config.escrows.10.sinceTimestamp": [["custom", "UnixTime"]],
      "0.contracts.addresses.0.upgradeability": ["undefined"],
      "0.contracts.addresses.1.upgradeability": ["undefined"],
      "0.contracts.addresses.3.upgradeability": ["undefined"],
      "0.contracts.addresses.4.upgradeability": ["undefined"],
      "0.contracts.addresses.5.upgradeability": ["undefined"],
      "0.contracts.addresses.6.upgradeability": ["undefined"],
      "0.contracts.addresses.7.upgradeability": ["undefined"],
      "0.contracts.addresses.8.upgradeability": ["undefined"],
      "0.contracts.addresses.9.upgradeability": ["undefined"],
      "0.contracts.addresses.10.upgradeability": ["undefined"],
      "0.contracts.addresses.11.upgradeability": ["undefined"],
      "0.contracts.addresses.12.upgradeability": ["undefined"],
      "0.contracts.addresses.13.upgradeability": ["undefined"],
      "0.contracts.addresses.14.upgradeability": ["undefined"],
      "0.contracts.addresses.15.upgradeability": ["undefined"],
      "0.contracts.addresses.16.upgradeability": ["undefined"],
      "0.contracts.addresses.17.upgradeability": ["undefined"],
      "0.contracts.addresses.18.upgradeability": ["undefined"],
      "0.contracts.addresses.19.upgradeability": ["undefined"],
      "0.permissions.0.references": ["undefined"],
      "1.createdAt": [["custom", "UnixTime"]],
      "1.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "1.config.escrows.0.excludedTokens": ["undefined"],
      "1.config.escrows.0.premintedTokens": ["undefined"],
      "1.config.escrows.0.contract.name": ["undefined"],
      "1.config.escrows.0.contract.upgradeability": ["undefined"],
      "1.config.escrows.0.contract.upgradableBy": ["undefined"],
      "1.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "1.config.escrows.0.isUpcoming": ["undefined"],
      "1.config.escrows.0.source": ["undefined"],
      "1.config.escrows.0.bridgedUsing": ["undefined"],
      "1.config.escrows.0.isHistorical": ["undefined"],
      "1.config.escrows.0.untilTimestamp": ["undefined"],
      "1.config.escrows.0.sharedEscrow": ["undefined"],
      "1.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "1.config.escrows.1.excludedTokens": ["undefined"],
      "1.config.escrows.1.premintedTokens": ["undefined"],
      "1.config.escrows.1.contract.name": ["undefined"],
      "1.config.escrows.1.contract.upgradeability": ["undefined"],
      "1.config.escrows.1.contract.upgradableBy": ["undefined"],
      "1.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "1.config.escrows.1.isUpcoming": ["undefined"],
      "1.config.escrows.1.source": ["undefined"],
      "1.config.escrows.1.bridgedUsing": ["undefined"],
      "1.config.escrows.1.isHistorical": ["undefined"],
      "1.config.escrows.1.untilTimestamp": ["undefined"],
      "1.config.escrows.1.sharedEscrow": ["undefined"],
      "1.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "1.config.escrows.2.excludedTokens": ["undefined"],
      "1.config.escrows.2.premintedTokens": ["undefined"],
      "1.config.escrows.2.contract.name": ["undefined"],
      "1.config.escrows.2.contract.upgradeability": ["undefined"],
      "1.config.escrows.2.contract.upgradableBy": ["undefined"],
      "1.config.escrows.2.contract.upgradeDelay": ["undefined"],
      "1.config.escrows.2.isUpcoming": ["undefined"],
      "1.config.escrows.2.source": ["undefined"],
      "1.config.escrows.2.bridgedUsing": ["undefined"],
      "1.config.escrows.2.isHistorical": ["undefined"],
      "1.config.escrows.2.untilTimestamp": ["undefined"],
      "1.config.escrows.2.sharedEscrow": ["undefined"],
      "1.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "1.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "1.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "1.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "1.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "1.contracts.addresses.0.upgradeability": ["undefined"],
      "1.contracts.addresses.1.upgradeability": ["undefined"],
      "1.contracts.addresses.2.upgradeability": ["undefined"],
      "1.contracts.addresses.3.upgradeability": ["undefined"],
      "1.contracts.addresses.4.upgradeability": ["undefined"],
      "1.contracts.addresses.5.upgradeability": ["undefined"],
      "1.contracts.addresses.6.upgradeability": ["undefined"],
      "1.contracts.addresses.7.upgradeability": ["undefined"],
      "2.createdAt": [["custom", "UnixTime"]],
      "2.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "2.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "2.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "2.contracts.addresses.1.upgradeability": ["undefined"],
      "2.contracts.addresses.2.upgradeability": ["undefined"],
      "2.contracts.addresses.3.upgradeability": ["undefined"],
      "2.contracts.addresses.4.upgradeability": ["undefined"],
      "2.contracts.addresses.5.upgradeability": ["undefined"],
      "2.contracts.addresses.6.upgradeability": ["undefined"],
      "2.contracts.addresses.7.upgradeability": ["undefined"],
      "2.contracts.addresses.8.upgradeability": ["undefined"],
      "2.contracts.addresses.9.upgradeability": ["undefined"],
      "2.contracts.addresses.10.upgradeability": ["undefined"],
      "2.contracts.addresses.11.upgradeability": ["undefined"],
      "2.contracts.addresses.12.upgradeability": ["undefined"],
      "2.contracts.addresses.13.upgradeability": ["undefined"],
      "2.contracts.addresses.14.upgradeability": ["undefined"],
      "2.contracts.addresses.15.upgradeability": ["undefined"],
      "2.contracts.addresses.16.upgradeability": ["undefined"],
      "2.permissions.0.references": ["undefined"],
      "2.permissions.1.references": ["undefined"],
      "3.createdAt": [["custom", "UnixTime"]],
      "3.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "4.createdAt": [["custom", "UnixTime"]],
      "4.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "4.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "5.createdAt": [["custom", "UnixTime"]],
      "5.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "5.contracts.addresses.0.upgradeability": ["undefined"],
      "5.contracts.addresses.3.upgradeability": ["undefined"],
      "5.contracts.addresses.4.upgradeability": ["undefined"],
      "5.contracts.addresses.5.upgradeability": ["undefined"],
      "5.permissions.0.references": ["undefined"],
      "5.permissions.4.references": ["undefined"],
      "6.createdAt": [["custom", "UnixTime"]],
      "6.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "6.config.escrows.0.excludedTokens": ["undefined"],
      "6.config.escrows.0.premintedTokens": ["undefined"],
      "6.config.escrows.0.contract.name": ["undefined"],
      "6.config.escrows.0.contract.upgradeability": ["undefined"],
      "6.config.escrows.0.contract.description": ["undefined"],
      "6.config.escrows.0.contract.upgradableBy": ["undefined"],
      "6.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "6.config.escrows.0.isUpcoming": ["undefined"],
      "6.config.escrows.0.source": ["undefined"],
      "6.config.escrows.0.bridgedUsing": ["undefined"],
      "6.config.escrows.0.isHistorical": ["undefined"],
      "6.config.escrows.0.untilTimestamp": ["undefined"],
      "6.config.escrows.0.sharedEscrow": ["undefined"],
      "6.contracts.addresses.0.upgradeability": ["undefined"],
      "6.contracts.addresses.1.upgradeability": ["undefined"],
      "6.contracts.addresses.2.upgradeability": ["undefined"],
      "6.contracts.addresses.3.upgradeability": ["undefined"],
      "6.contracts.addresses.4.upgradeability": ["undefined"],
      "6.contracts.addresses.5.upgradeability": ["undefined"],
      "6.contracts.addresses.6.upgradeability": ["undefined"],
      "7.createdAt": [["custom", "UnixTime"]],
      "7.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "7.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "7.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "7.contracts.addresses.1.upgradeability": ["undefined"],
      "7.contracts.addresses.2.upgradeability": ["undefined"],
      "7.contracts.addresses.3.upgradeability": ["undefined"],
      "7.contracts.addresses.4.upgradeability": ["undefined"],
      "7.contracts.addresses.5.upgradeability": ["undefined"],
      "7.contracts.addresses.6.upgradeability": ["undefined"],
      "8.createdAt": [["custom", "UnixTime"]],
      "8.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "8.contracts.addresses.0.upgradeability": ["undefined"],
      "8.contracts.addresses.1.upgradeability": ["undefined"],
      "9.createdAt": [["custom", "UnixTime"]],
      "9.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "9.permissions.0.references": ["undefined"],
      "10.createdAt": [["custom", "UnixTime"]],
      "10.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "11.createdAt": [["custom", "UnixTime"]],
      "11.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "11.permissions.0.references": ["undefined"],
      "11.permissions.1.references": ["undefined"],
      "12.createdAt": [["custom", "UnixTime"]],
      "12.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "12.contracts.addresses.0.upgradeability": ["undefined"],
      "13.createdAt": [["custom", "UnixTime"]],
      "13.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "13.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "13.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "14.createdAt": [["custom", "UnixTime"]],
      "14.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "14.config.escrows.0.excludedTokens": ["undefined"],
      "14.config.escrows.0.premintedTokens": ["undefined"],
      "14.config.escrows.0.contract.name": ["undefined"],
      "14.config.escrows.0.contract.description": ["undefined"],
      "14.config.escrows.0.contract.upgradableBy": ["undefined"],
      "14.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "14.config.escrows.0.isUpcoming": ["undefined"],
      "14.config.escrows.0.source": ["undefined"],
      "14.config.escrows.0.bridgedUsing": ["undefined"],
      "14.config.escrows.0.isHistorical": ["undefined"],
      "14.config.escrows.0.untilTimestamp": ["undefined"],
      "14.config.escrows.0.sharedEscrow": ["undefined"],
      "14.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "14.config.escrows.1.excludedTokens": ["undefined"],
      "14.config.escrows.1.premintedTokens": ["undefined"],
      "14.config.escrows.1.contract.name": ["undefined"],
      "14.config.escrows.1.contract.description": ["undefined"],
      "14.config.escrows.1.contract.upgradableBy": ["undefined"],
      "14.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "14.config.escrows.1.isUpcoming": ["undefined"],
      "14.config.escrows.1.source": ["undefined"],
      "14.config.escrows.1.bridgedUsing": ["undefined"],
      "14.config.escrows.1.isHistorical": ["undefined"],
      "14.config.escrows.1.untilTimestamp": ["undefined"],
      "14.config.escrows.1.sharedEscrow": ["undefined"],
      "14.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "14.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "14.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "14.config.escrows.4.excludedTokens": ["undefined"],
      "14.config.escrows.4.premintedTokens": ["undefined"],
      "14.config.escrows.4.contract.name": ["undefined"],
      "14.config.escrows.4.contract.description": ["undefined"],
      "14.config.escrows.4.contract.upgradableBy": ["undefined"],
      "14.config.escrows.4.contract.upgradeDelay": ["undefined"],
      "14.config.escrows.4.isUpcoming": ["undefined"],
      "14.config.escrows.4.source": ["undefined"],
      "14.config.escrows.4.bridgedUsing": ["undefined"],
      "14.config.escrows.4.isHistorical": ["undefined"],
      "14.config.escrows.4.untilTimestamp": ["undefined"],
      "14.config.escrows.4.sharedEscrow": ["undefined"],
      "14.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "14.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "14.contracts.addresses.1.upgradeability": ["undefined"],
      "14.contracts.addresses.2.upgradeability": ["undefined"],
      "14.permissions.1.references": ["undefined"],
      "14.permissions.2.references": ["undefined"],
      "15.createdAt": [["custom", "UnixTime"]],
      "15.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "15.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "15.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "15.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "15.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "15.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "15.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "15.contracts.addresses.0.upgradeability": ["undefined"],
      "15.contracts.addresses.1.upgradeability": ["undefined"],
      "15.contracts.addresses.2.upgradeability": ["undefined"],
      "15.contracts.addresses.3.upgradeability": ["undefined"],
      "15.contracts.addresses.4.upgradeability": ["undefined"],
      "15.contracts.addresses.5.upgradeability": ["undefined"],
      "15.contracts.addresses.6.upgradeability": ["undefined"],
      "15.contracts.addresses.7.upgradeability": ["undefined"],
      "15.permissions.0.references": ["undefined"],
      "16.createdAt": [["custom", "UnixTime"]],
      "16.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "16.contracts.addresses.2.upgradeability": ["undefined"],
      "17.createdAt": [["custom", "UnixTime"]],
      "17.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "17.permissions.0.references": ["undefined"],
      "18.createdAt": [["custom", "UnixTime"]],
      "18.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "18.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "18.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "18.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "18.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "18.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "18.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "18.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "18.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "18.contracts.addresses.1.upgradeability": ["undefined"],
      "18.contracts.addresses.4.upgradeability": ["undefined"],
      "18.contracts.addresses.5.upgradeability": ["undefined"],
      "18.contracts.addresses.6.upgradeability": ["undefined"],
      "18.contracts.addresses.7.upgradeability": ["undefined"],
      "18.permissions.2.references": ["undefined"],
      "19.createdAt": [["custom", "UnixTime"]],
      "19.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.0.excludedTokens": ["undefined"],
      "19.config.escrows.0.premintedTokens": ["undefined"],
      "19.config.escrows.0.contract.name": ["undefined"],
      "19.config.escrows.0.contract.upgradeability": ["undefined"],
      "19.config.escrows.0.contract.upgradableBy": ["undefined"],
      "19.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.0.isUpcoming": ["undefined"],
      "19.config.escrows.0.source": ["undefined"],
      "19.config.escrows.0.bridgedUsing": ["undefined"],
      "19.config.escrows.0.isHistorical": ["undefined"],
      "19.config.escrows.0.untilTimestamp": ["undefined"],
      "19.config.escrows.0.sharedEscrow": ["undefined"],
      "19.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.1.excludedTokens": ["undefined"],
      "19.config.escrows.1.premintedTokens": ["undefined"],
      "19.config.escrows.1.contract.name": ["undefined"],
      "19.config.escrows.1.contract.upgradeability": ["undefined"],
      "19.config.escrows.1.contract.upgradableBy": ["undefined"],
      "19.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.1.isUpcoming": ["undefined"],
      "19.config.escrows.1.source": ["undefined"],
      "19.config.escrows.1.bridgedUsing": ["undefined"],
      "19.config.escrows.1.isHistorical": ["undefined"],
      "19.config.escrows.1.untilTimestamp": ["undefined"],
      "19.config.escrows.1.sharedEscrow": ["undefined"],
      "19.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.2.excludedTokens": ["undefined"],
      "19.config.escrows.2.premintedTokens": ["undefined"],
      "19.config.escrows.2.contract.name": ["undefined"],
      "19.config.escrows.2.contract.upgradeability": ["undefined"],
      "19.config.escrows.2.contract.upgradableBy": ["undefined"],
      "19.config.escrows.2.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.2.isUpcoming": ["undefined"],
      "19.config.escrows.2.source": ["undefined"],
      "19.config.escrows.2.bridgedUsing": ["undefined"],
      "19.config.escrows.2.isHistorical": ["undefined"],
      "19.config.escrows.2.untilTimestamp": ["undefined"],
      "19.config.escrows.2.sharedEscrow": ["undefined"],
      "19.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.3.excludedTokens": ["undefined"],
      "19.config.escrows.3.premintedTokens": ["undefined"],
      "19.config.escrows.3.contract.name": ["undefined"],
      "19.config.escrows.3.contract.upgradeability": ["undefined"],
      "19.config.escrows.3.contract.upgradableBy": ["undefined"],
      "19.config.escrows.3.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.3.isUpcoming": ["undefined"],
      "19.config.escrows.3.source": ["undefined"],
      "19.config.escrows.3.bridgedUsing": ["undefined"],
      "19.config.escrows.3.isHistorical": ["undefined"],
      "19.config.escrows.3.untilTimestamp": ["undefined"],
      "19.config.escrows.3.sharedEscrow": ["undefined"],
      "19.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.4.excludedTokens": ["undefined"],
      "19.config.escrows.4.premintedTokens": ["undefined"],
      "19.config.escrows.4.contract.name": ["undefined"],
      "19.config.escrows.4.contract.upgradeability": ["undefined"],
      "19.config.escrows.4.contract.upgradableBy": ["undefined"],
      "19.config.escrows.4.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.4.isUpcoming": ["undefined"],
      "19.config.escrows.4.source": ["undefined"],
      "19.config.escrows.4.bridgedUsing": ["undefined"],
      "19.config.escrows.4.isHistorical": ["undefined"],
      "19.config.escrows.4.untilTimestamp": ["undefined"],
      "19.config.escrows.4.sharedEscrow": ["undefined"],
      "19.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.5.excludedTokens": ["undefined"],
      "19.config.escrows.5.premintedTokens": ["undefined"],
      "19.config.escrows.5.contract.name": ["undefined"],
      "19.config.escrows.5.contract.upgradeability": ["undefined"],
      "19.config.escrows.5.contract.upgradableBy": ["undefined"],
      "19.config.escrows.5.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.5.isUpcoming": ["undefined"],
      "19.config.escrows.5.source": ["undefined"],
      "19.config.escrows.5.bridgedUsing": ["undefined"],
      "19.config.escrows.5.isHistorical": ["undefined"],
      "19.config.escrows.5.untilTimestamp": ["undefined"],
      "19.config.escrows.5.sharedEscrow": ["undefined"],
      "19.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.6.excludedTokens": ["undefined"],
      "19.config.escrows.6.premintedTokens": ["undefined"],
      "19.config.escrows.6.contract.name": ["undefined"],
      "19.config.escrows.6.contract.upgradeability": ["undefined"],
      "19.config.escrows.6.contract.upgradableBy": ["undefined"],
      "19.config.escrows.6.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.6.isUpcoming": ["undefined"],
      "19.config.escrows.6.source": ["undefined"],
      "19.config.escrows.6.bridgedUsing": ["undefined"],
      "19.config.escrows.6.isHistorical": ["undefined"],
      "19.config.escrows.6.untilTimestamp": ["undefined"],
      "19.config.escrows.6.sharedEscrow": ["undefined"],
      "19.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.7.excludedTokens": ["undefined"],
      "19.config.escrows.7.premintedTokens": ["undefined"],
      "19.config.escrows.7.contract.name": ["undefined"],
      "19.config.escrows.7.contract.upgradeability": ["undefined"],
      "19.config.escrows.7.contract.upgradableBy": ["undefined"],
      "19.config.escrows.7.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.7.isUpcoming": ["undefined"],
      "19.config.escrows.7.source": ["undefined"],
      "19.config.escrows.7.bridgedUsing": ["undefined"],
      "19.config.escrows.7.isHistorical": ["undefined"],
      "19.config.escrows.7.untilTimestamp": ["undefined"],
      "19.config.escrows.7.sharedEscrow": ["undefined"],
      "19.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.8.excludedTokens": ["undefined"],
      "19.config.escrows.8.premintedTokens": ["undefined"],
      "19.config.escrows.8.contract.name": ["undefined"],
      "19.config.escrows.8.contract.upgradeability": ["undefined"],
      "19.config.escrows.8.contract.upgradableBy": ["undefined"],
      "19.config.escrows.8.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.8.isUpcoming": ["undefined"],
      "19.config.escrows.8.source": ["undefined"],
      "19.config.escrows.8.bridgedUsing": ["undefined"],
      "19.config.escrows.8.isHistorical": ["undefined"],
      "19.config.escrows.8.untilTimestamp": ["undefined"],
      "19.config.escrows.8.sharedEscrow": ["undefined"],
      "19.config.escrows.9.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.9.excludedTokens": ["undefined"],
      "19.config.escrows.9.premintedTokens": ["undefined"],
      "19.config.escrows.9.contract.name": ["undefined"],
      "19.config.escrows.9.contract.upgradeability": ["undefined"],
      "19.config.escrows.9.contract.upgradableBy": ["undefined"],
      "19.config.escrows.9.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.9.isUpcoming": ["undefined"],
      "19.config.escrows.9.source": ["undefined"],
      "19.config.escrows.9.bridgedUsing": ["undefined"],
      "19.config.escrows.9.isHistorical": ["undefined"],
      "19.config.escrows.9.untilTimestamp": ["undefined"],
      "19.config.escrows.9.sharedEscrow": ["undefined"],
      "19.config.escrows.10.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.10.excludedTokens": ["undefined"],
      "19.config.escrows.10.premintedTokens": ["undefined"],
      "19.config.escrows.10.contract.name": ["undefined"],
      "19.config.escrows.10.contract.upgradeability": ["undefined"],
      "19.config.escrows.10.contract.upgradableBy": ["undefined"],
      "19.config.escrows.10.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.10.isUpcoming": ["undefined"],
      "19.config.escrows.10.source": ["undefined"],
      "19.config.escrows.10.bridgedUsing": ["undefined"],
      "19.config.escrows.10.isHistorical": ["undefined"],
      "19.config.escrows.10.untilTimestamp": ["undefined"],
      "19.config.escrows.10.sharedEscrow": ["undefined"],
      "19.config.escrows.11.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.11.excludedTokens": ["undefined"],
      "19.config.escrows.11.premintedTokens": ["undefined"],
      "19.config.escrows.11.contract.name": ["undefined"],
      "19.config.escrows.11.contract.upgradeability": ["undefined"],
      "19.config.escrows.11.contract.upgradableBy": ["undefined"],
      "19.config.escrows.11.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.11.isUpcoming": ["undefined"],
      "19.config.escrows.11.source": ["undefined"],
      "19.config.escrows.11.bridgedUsing": ["undefined"],
      "19.config.escrows.11.isHistorical": ["undefined"],
      "19.config.escrows.11.untilTimestamp": ["undefined"],
      "19.config.escrows.11.sharedEscrow": ["undefined"],
      "19.config.escrows.12.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.12.excludedTokens": ["undefined"],
      "19.config.escrows.12.premintedTokens": ["undefined"],
      "19.config.escrows.12.contract.name": ["undefined"],
      "19.config.escrows.12.contract.upgradeability": ["undefined"],
      "19.config.escrows.12.contract.upgradableBy": ["undefined"],
      "19.config.escrows.12.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.12.isUpcoming": ["undefined"],
      "19.config.escrows.12.source": ["undefined"],
      "19.config.escrows.12.bridgedUsing": ["undefined"],
      "19.config.escrows.12.isHistorical": ["undefined"],
      "19.config.escrows.12.untilTimestamp": ["undefined"],
      "19.config.escrows.12.sharedEscrow": ["undefined"],
      "19.config.escrows.13.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.13.excludedTokens": ["undefined"],
      "19.config.escrows.13.premintedTokens": ["undefined"],
      "19.config.escrows.13.contract.name": ["undefined"],
      "19.config.escrows.13.contract.upgradeability": ["undefined"],
      "19.config.escrows.13.contract.upgradableBy": ["undefined"],
      "19.config.escrows.13.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.13.isUpcoming": ["undefined"],
      "19.config.escrows.13.source": ["undefined"],
      "19.config.escrows.13.bridgedUsing": ["undefined"],
      "19.config.escrows.13.isHistorical": ["undefined"],
      "19.config.escrows.13.untilTimestamp": ["undefined"],
      "19.config.escrows.13.sharedEscrow": ["undefined"],
      "19.config.escrows.14.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.14.excludedTokens": ["undefined"],
      "19.config.escrows.14.premintedTokens": ["undefined"],
      "19.config.escrows.14.contract.name": ["undefined"],
      "19.config.escrows.14.contract.upgradeability": ["undefined"],
      "19.config.escrows.14.contract.upgradableBy": ["undefined"],
      "19.config.escrows.14.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.14.isUpcoming": ["undefined"],
      "19.config.escrows.14.source": ["undefined"],
      "19.config.escrows.14.bridgedUsing": ["undefined"],
      "19.config.escrows.14.isHistorical": ["undefined"],
      "19.config.escrows.14.untilTimestamp": ["undefined"],
      "19.config.escrows.14.sharedEscrow": ["undefined"],
      "19.config.escrows.15.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.15.excludedTokens": ["undefined"],
      "19.config.escrows.15.premintedTokens": ["undefined"],
      "19.config.escrows.15.contract.name": ["undefined"],
      "19.config.escrows.15.contract.upgradeability": ["undefined"],
      "19.config.escrows.15.contract.upgradableBy": ["undefined"],
      "19.config.escrows.15.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.15.isUpcoming": ["undefined"],
      "19.config.escrows.15.source": ["undefined"],
      "19.config.escrows.15.bridgedUsing": ["undefined"],
      "19.config.escrows.15.isHistorical": ["undefined"],
      "19.config.escrows.15.untilTimestamp": ["undefined"],
      "19.config.escrows.15.sharedEscrow": ["undefined"],
      "19.config.escrows.16.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.16.excludedTokens": ["undefined"],
      "19.config.escrows.16.premintedTokens": ["undefined"],
      "19.config.escrows.16.contract.name": ["undefined"],
      "19.config.escrows.16.contract.upgradeability": ["undefined"],
      "19.config.escrows.16.contract.upgradableBy": ["undefined"],
      "19.config.escrows.16.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.16.isUpcoming": ["undefined"],
      "19.config.escrows.16.source": ["undefined"],
      "19.config.escrows.16.bridgedUsing": ["undefined"],
      "19.config.escrows.16.isHistorical": ["undefined"],
      "19.config.escrows.16.untilTimestamp": ["undefined"],
      "19.config.escrows.16.sharedEscrow": ["undefined"],
      "19.config.escrows.17.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.17.excludedTokens": ["undefined"],
      "19.config.escrows.17.premintedTokens": ["undefined"],
      "19.config.escrows.17.contract.name": ["undefined"],
      "19.config.escrows.17.contract.upgradeability": ["undefined"],
      "19.config.escrows.17.contract.upgradableBy": ["undefined"],
      "19.config.escrows.17.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.17.isUpcoming": ["undefined"],
      "19.config.escrows.17.source": ["undefined"],
      "19.config.escrows.17.bridgedUsing": ["undefined"],
      "19.config.escrows.17.isHistorical": ["undefined"],
      "19.config.escrows.17.untilTimestamp": ["undefined"],
      "19.config.escrows.17.sharedEscrow": ["undefined"],
      "19.config.escrows.18.sinceTimestamp": [["custom", "UnixTime"]],
      "19.config.escrows.18.excludedTokens": ["undefined"],
      "19.config.escrows.18.premintedTokens": ["undefined"],
      "19.config.escrows.18.contract.name": ["undefined"],
      "19.config.escrows.18.contract.upgradeability": ["undefined"],
      "19.config.escrows.18.contract.upgradableBy": ["undefined"],
      "19.config.escrows.18.contract.upgradeDelay": ["undefined"],
      "19.config.escrows.18.isUpcoming": ["undefined"],
      "19.config.escrows.18.source": ["undefined"],
      "19.config.escrows.18.bridgedUsing": ["undefined"],
      "19.config.escrows.18.isHistorical": ["undefined"],
      "19.config.escrows.18.untilTimestamp": ["undefined"],
      "19.config.escrows.18.sharedEscrow": ["undefined"],
      "19.contracts.addresses.0.upgradeability": ["undefined"],
      "19.contracts.addresses.1.upgradeability": ["undefined"],
      "19.contracts.addresses.2.upgradeability": ["undefined"],
      "19.contracts.addresses.3.upgradeability": ["undefined"],
      "19.contracts.addresses.4.upgradeability": ["undefined"],
      "19.contracts.addresses.6.upgradeability": ["undefined"],
      "19.permissions.0.references": ["undefined"],
      "20.createdAt": [["custom", "UnixTime"]],
      "20.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "20.config.escrows.0.excludedTokens": ["undefined"],
      "20.config.escrows.0.premintedTokens": ["undefined"],
      "20.config.escrows.0.contract.name": ["undefined"],
      "20.config.escrows.0.contract.description": ["undefined"],
      "20.config.escrows.0.contract.upgradableBy": ["undefined"],
      "20.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "20.config.escrows.0.isUpcoming": ["undefined"],
      "20.config.escrows.0.source": ["undefined"],
      "20.config.escrows.0.bridgedUsing": ["undefined"],
      "20.config.escrows.0.isHistorical": ["undefined"],
      "20.config.escrows.0.untilTimestamp": ["undefined"],
      "20.config.escrows.0.sharedEscrow": ["undefined"],
      "20.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "20.config.escrows.1.excludedTokens": ["undefined"],
      "20.config.escrows.1.premintedTokens": ["undefined"],
      "20.config.escrows.1.contract.name": ["undefined"],
      "20.config.escrows.1.contract.description": ["undefined"],
      "20.config.escrows.1.contract.upgradableBy": ["undefined"],
      "20.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "20.config.escrows.1.isUpcoming": ["undefined"],
      "20.config.escrows.1.source": ["undefined"],
      "20.config.escrows.1.bridgedUsing": ["undefined"],
      "20.config.escrows.1.isHistorical": ["undefined"],
      "20.config.escrows.1.untilTimestamp": ["undefined"],
      "20.config.escrows.1.sharedEscrow": ["undefined"],
      "21.createdAt": [["custom", "UnixTime"]],
      "21.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.9.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.10.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.11.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.12.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.13.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.14.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.15.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.16.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.17.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.18.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.19.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.20.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.21.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.22.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.23.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.24.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.25.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.26.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.27.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.28.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.29.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.30.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.31.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.32.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.33.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.34.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.35.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.36.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.37.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.38.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.39.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.40.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.41.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.42.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.43.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.44.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.45.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.46.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.47.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.48.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.49.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.50.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.51.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.52.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.53.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.54.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.55.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.56.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.57.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.58.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.59.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.60.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.61.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.62.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.63.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.64.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.65.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.66.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.67.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.68.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.69.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.70.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.71.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.72.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.73.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.74.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.75.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.76.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.77.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.78.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.79.sinceTimestamp": [["custom", "UnixTime"]],
      "21.config.escrows.80.sinceTimestamp": [["custom", "UnixTime"]],
      "22.createdAt": [["custom", "UnixTime"]],
      "22.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "22.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "22.contracts.addresses.0.upgradeability": ["undefined"],
      "22.contracts.addresses.1.upgradeability": ["undefined"],
      "22.permissions.0.references": ["undefined"],
      "23.createdAt": [["custom", "UnixTime"]],
      "23.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.9.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.10.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.11.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.12.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.13.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.14.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.15.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.16.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.17.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.18.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.19.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.20.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.21.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.22.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.23.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.24.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.25.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.26.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.27.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.28.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.29.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.30.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.31.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.32.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.33.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.34.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.35.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.36.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.37.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.38.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.39.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.40.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.41.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.42.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.43.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.44.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.45.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.46.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.47.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.48.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.49.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.50.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.51.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.52.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.53.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.54.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.55.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.56.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.57.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.58.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.59.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.60.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.61.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.62.sinceTimestamp": [["custom", "UnixTime"]],
      "23.config.escrows.63.sinceTimestamp": [["custom", "UnixTime"]],
      "24.createdAt": [["custom", "UnixTime"]],
      "24.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "24.contracts.addresses.3.upgradeability": ["undefined"],
      "24.contracts.addresses.5.upgradeability": ["undefined"],
      "24.contracts.addresses.6.upgradeability": ["undefined"],
      "24.permissions.0.references": ["undefined"],
      "24.permissions.1.references": ["undefined"],
      "25.createdAt": [["custom", "UnixTime"]],
      "25.display.warning": ["undefined"],
      "25.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "25.contracts.addresses.3.upgradeability": ["undefined"],
      "25.permissions.0.references": ["undefined"],
      "26.createdAt": [["custom", "UnixTime"]],
      "26.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "26.config.escrows.0.excludedTokens": ["undefined"],
      "26.config.escrows.0.premintedTokens": ["undefined"],
      "26.config.escrows.0.contract.name": ["undefined"],
      "26.config.escrows.0.contract.description": ["undefined"],
      "26.config.escrows.0.contract.upgradableBy": ["undefined"],
      "26.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "26.config.escrows.0.isUpcoming": ["undefined"],
      "26.config.escrows.0.source": ["undefined"],
      "26.config.escrows.0.bridgedUsing": ["undefined"],
      "26.config.escrows.0.isHistorical": ["undefined"],
      "26.config.escrows.0.untilTimestamp": ["undefined"],
      "26.config.escrows.0.sharedEscrow": ["undefined"],
      "26.contracts.addresses.3.upgradeability": ["undefined"],
      "26.contracts.addresses.5.upgradeability": ["undefined"],
      "26.contracts.addresses.6.upgradeability": ["undefined"],
      "26.permissions.0.references": ["undefined"],
      "26.permissions.1.references": ["undefined"],
      "27.createdAt": [["custom", "UnixTime"]],
      "27.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "27.config.escrows.0.excludedTokens": ["undefined"],
      "27.config.escrows.0.premintedTokens": ["undefined"],
      "27.config.escrows.0.contract.name": ["undefined"],
      "27.config.escrows.0.contract.description": ["undefined"],
      "27.config.escrows.0.contract.upgradableBy": ["undefined"],
      "27.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "27.config.escrows.0.isUpcoming": ["undefined"],
      "27.config.escrows.0.source": ["undefined"],
      "27.config.escrows.0.bridgedUsing": ["undefined"],
      "27.config.escrows.0.isHistorical": ["undefined"],
      "27.config.escrows.0.untilTimestamp": ["undefined"],
      "27.config.escrows.0.sharedEscrow": ["undefined"],
      "27.contracts.addresses.3.upgradeability": ["undefined"],
      "27.contracts.addresses.5.upgradeability": ["undefined"],
      "27.contracts.addresses.6.upgradeability": ["undefined"],
      "27.permissions.1.references": ["undefined"],
      "28.createdAt": [["custom", "UnixTime"]],
      "28.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "28.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "28.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "28.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "29.createdAt": [["custom", "UnixTime"]],
      "29.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "29.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "29.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "29.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "30.createdAt": [["custom", "UnixTime"]],
      "30.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "30.config.escrows.0.excludedTokens": ["undefined"],
      "30.config.escrows.0.premintedTokens": ["undefined"],
      "30.config.escrows.0.contract.name": ["undefined"],
      "30.config.escrows.0.contract.description": ["undefined"],
      "30.config.escrows.0.isUpcoming": ["undefined"],
      "30.config.escrows.0.source": ["undefined"],
      "30.config.escrows.0.bridgedUsing": ["undefined"],
      "30.config.escrows.0.isHistorical": ["undefined"],
      "30.config.escrows.0.untilTimestamp": ["undefined"],
      "30.config.escrows.0.sharedEscrow": ["undefined"],
      "30.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "30.config.escrows.1.excludedTokens": ["undefined"],
      "30.config.escrows.1.premintedTokens": ["undefined"],
      "30.config.escrows.1.contract.name": ["undefined"],
      "30.config.escrows.1.contract.description": ["undefined"],
      "30.config.escrows.1.isUpcoming": ["undefined"],
      "30.config.escrows.1.source": ["undefined"],
      "30.config.escrows.1.bridgedUsing": ["undefined"],
      "30.config.escrows.1.isHistorical": ["undefined"],
      "30.config.escrows.1.untilTimestamp": ["undefined"],
      "30.config.escrows.1.sharedEscrow": ["undefined"],
      "30.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "30.config.escrows.2.excludedTokens": ["undefined"],
      "30.config.escrows.2.premintedTokens": ["undefined"],
      "30.config.escrows.2.contract.name": ["undefined"],
      "30.config.escrows.2.contract.description": ["undefined"],
      "30.config.escrows.2.isUpcoming": ["undefined"],
      "30.config.escrows.2.source": ["undefined"],
      "30.config.escrows.2.bridgedUsing": ["undefined"],
      "30.config.escrows.2.isHistorical": ["undefined"],
      "30.config.escrows.2.untilTimestamp": ["undefined"],
      "30.config.escrows.2.sharedEscrow": ["undefined"],
      "30.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "30.config.escrows.3.excludedTokens": ["undefined"],
      "30.config.escrows.3.premintedTokens": ["undefined"],
      "30.config.escrows.3.contract.name": ["undefined"],
      "30.config.escrows.3.contract.description": ["undefined"],
      "30.config.escrows.3.isUpcoming": ["undefined"],
      "30.config.escrows.3.source": ["undefined"],
      "30.config.escrows.3.bridgedUsing": ["undefined"],
      "30.config.escrows.3.isHistorical": ["undefined"],
      "30.config.escrows.3.untilTimestamp": ["undefined"],
      "30.config.escrows.3.sharedEscrow": ["undefined"],
      "30.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "30.config.escrows.4.excludedTokens": ["undefined"],
      "30.config.escrows.4.premintedTokens": ["undefined"],
      "30.config.escrows.4.contract.name": ["undefined"],
      "30.config.escrows.4.contract.upgradeability": ["undefined"],
      "30.config.escrows.4.contract.description": ["undefined"],
      "30.config.escrows.4.isUpcoming": ["undefined"],
      "30.config.escrows.4.source": ["undefined"],
      "30.config.escrows.4.bridgedUsing": ["undefined"],
      "30.config.escrows.4.isHistorical": ["undefined"],
      "30.config.escrows.4.untilTimestamp": ["undefined"],
      "30.config.escrows.4.sharedEscrow": ["undefined"],
      "30.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "30.config.escrows.5.excludedTokens": ["undefined"],
      "30.config.escrows.5.premintedTokens": ["undefined"],
      "30.config.escrows.5.contract.name": ["undefined"],
      "30.config.escrows.5.contract.upgradeability": ["undefined"],
      "30.config.escrows.5.contract.description": ["undefined"],
      "30.config.escrows.5.contract.upgradableBy": ["undefined"],
      "30.config.escrows.5.contract.upgradeDelay": ["undefined"],
      "30.config.escrows.5.isUpcoming": ["undefined"],
      "30.config.escrows.5.source": ["undefined"],
      "30.config.escrows.5.bridgedUsing": ["undefined"],
      "30.config.escrows.5.isHistorical": ["undefined"],
      "30.config.escrows.5.untilTimestamp": ["undefined"],
      "30.config.escrows.5.sharedEscrow": ["undefined"],
      "30.contracts.addresses.1.upgradeability": ["undefined"],
      "30.contracts.addresses.4.upgradeability": ["undefined"],
      "30.contracts.addresses.5.upgradeability": ["undefined"],
      "30.contracts.addresses.6.upgradeability": ["undefined"],
      "30.contracts.addresses.7.upgradeability": ["undefined"],
      "30.contracts.addresses.10.upgradeability": ["undefined"],
      "30.contracts.addresses.11.upgradeability": ["undefined"],
      "30.contracts.addresses.13.upgradeability": ["undefined"],
      "30.contracts.addresses.14.upgradeability": ["undefined"],
      "30.permissions.0.references": ["undefined"],
      "31.createdAt": [["custom", "UnixTime"]],
      "31.display.warning": ["undefined"],
      "31.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "31.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "31.contracts.addresses.0.upgradeability": ["undefined"],
      "31.contracts.addresses.1.upgradeability": ["undefined"],
      "31.contracts.addresses.2.upgradeability": ["undefined"],
      "31.contracts.addresses.3.upgradeability": ["undefined"],
      "31.contracts.addresses.4.upgradeability": ["undefined"],
      "31.contracts.addresses.5.upgradeability": ["undefined"],
      "31.contracts.addresses.6.upgradeability": ["undefined"],
      "31.contracts.addresses.7.upgradeability": ["undefined"],
      "31.contracts.addresses.8.upgradeability": ["undefined"],
      "31.contracts.addresses.9.upgradeability": ["undefined"],
      "31.contracts.addresses.10.upgradeability": ["undefined"],
      "31.contracts.addresses.11.upgradeability": ["undefined"],
      "32.createdAt": [["custom", "UnixTime"]],
      "32.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "32.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "32.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "32.contracts.addresses.1.upgradeability": ["undefined"],
      "32.contracts.addresses.2.upgradeability": ["undefined"],
      "32.contracts.addresses.3.upgradeability": ["undefined"],
      "32.permissions.2.references": ["undefined"],
      "33.createdAt": [["custom", "UnixTime"]],
      "33.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "33.config.escrows.0.excludedTokens": ["undefined"],
      "33.config.escrows.0.premintedTokens": ["undefined"],
      "33.config.escrows.0.contract.name": ["undefined"],
      "33.config.escrows.0.contract.description": ["undefined"],
      "33.config.escrows.0.contract.upgradableBy": ["undefined"],
      "33.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "33.config.escrows.0.isUpcoming": ["undefined"],
      "33.config.escrows.0.source": ["undefined"],
      "33.config.escrows.0.bridgedUsing": ["undefined"],
      "33.config.escrows.0.isHistorical": ["undefined"],
      "33.config.escrows.0.untilTimestamp": ["undefined"],
      "33.config.escrows.0.sharedEscrow": ["undefined"],
      "33.contracts.addresses.3.upgradeability": ["undefined"],
      "34.createdAt": [["custom", "UnixTime"]],
      "34.display.warning": ["undefined"],
      "34.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "34.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "34.contracts.addresses.2.upgradeability": ["undefined"],
      "34.permissions.4.references": ["undefined"],
      "35.createdAt": [["custom", "UnixTime"]],
      "35.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "35.contracts.addresses.1.upgradeability": ["undefined"],
      "35.contracts.addresses.2.upgradeability": ["undefined"],
      "35.contracts.addresses.3.upgradeability": ["undefined"],
      "36.createdAt": [["custom", "UnixTime"]],
      "36.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "36.config.escrows.0.excludedTokens": ["undefined"],
      "36.config.escrows.0.premintedTokens": ["undefined"],
      "36.config.escrows.0.contract.name": ["undefined"],
      "36.config.escrows.0.contract.description": ["undefined"],
      "36.config.escrows.0.contract.upgradableBy": ["undefined"],
      "36.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "36.config.escrows.0.isUpcoming": ["undefined"],
      "36.config.escrows.0.source": ["undefined"],
      "36.config.escrows.0.bridgedUsing": ["undefined"],
      "36.config.escrows.0.isHistorical": ["undefined"],
      "36.config.escrows.0.untilTimestamp": ["undefined"],
      "36.config.escrows.0.sharedEscrow": ["undefined"],
      "36.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "36.config.escrows.1.excludedTokens": ["undefined"],
      "36.config.escrows.1.premintedTokens": ["undefined"],
      "36.config.escrows.1.contract.name": ["undefined"],
      "36.config.escrows.1.contract.description": ["undefined"],
      "36.config.escrows.1.contract.upgradableBy": ["undefined"],
      "36.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "36.config.escrows.1.isUpcoming": ["undefined"],
      "36.config.escrows.1.source": ["undefined"],
      "36.config.escrows.1.bridgedUsing": ["undefined"],
      "36.config.escrows.1.isHistorical": ["undefined"],
      "36.config.escrows.1.untilTimestamp": ["undefined"],
      "36.config.escrows.1.sharedEscrow": ["undefined"],
      "36.permissions.0.references": ["undefined"],
      "37.createdAt": [["custom", "UnixTime"]],
      "37.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.0.excludedTokens": ["undefined"],
      "37.config.escrows.0.premintedTokens": ["undefined"],
      "37.config.escrows.0.contract.upgradeability": ["undefined"],
      "37.config.escrows.0.contract.upgradableBy": ["undefined"],
      "37.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.0.isUpcoming": ["undefined"],
      "37.config.escrows.0.source": ["undefined"],
      "37.config.escrows.0.bridgedUsing": ["undefined"],
      "37.config.escrows.0.isHistorical": ["undefined"],
      "37.config.escrows.0.untilTimestamp": ["undefined"],
      "37.config.escrows.0.sharedEscrow": ["undefined"],
      "37.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.1.excludedTokens": ["undefined"],
      "37.config.escrows.1.premintedTokens": ["undefined"],
      "37.config.escrows.1.contract.upgradeability": ["undefined"],
      "37.config.escrows.1.contract.upgradableBy": ["undefined"],
      "37.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.1.isUpcoming": ["undefined"],
      "37.config.escrows.1.source": ["undefined"],
      "37.config.escrows.1.bridgedUsing": ["undefined"],
      "37.config.escrows.1.isHistorical": ["undefined"],
      "37.config.escrows.1.untilTimestamp": ["undefined"],
      "37.config.escrows.1.sharedEscrow": ["undefined"],
      "37.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.2.excludedTokens": ["undefined"],
      "37.config.escrows.2.premintedTokens": ["undefined"],
      "37.config.escrows.2.contract.upgradeability": ["undefined"],
      "37.config.escrows.2.contract.upgradableBy": ["undefined"],
      "37.config.escrows.2.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.2.isUpcoming": ["undefined"],
      "37.config.escrows.2.source": ["undefined"],
      "37.config.escrows.2.bridgedUsing": ["undefined"],
      "37.config.escrows.2.isHistorical": ["undefined"],
      "37.config.escrows.2.untilTimestamp": ["undefined"],
      "37.config.escrows.2.sharedEscrow": ["undefined"],
      "37.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.3.excludedTokens": ["undefined"],
      "37.config.escrows.3.premintedTokens": ["undefined"],
      "37.config.escrows.3.contract.upgradeability": ["undefined"],
      "37.config.escrows.3.contract.upgradableBy": ["undefined"],
      "37.config.escrows.3.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.3.isUpcoming": ["undefined"],
      "37.config.escrows.3.source": ["undefined"],
      "37.config.escrows.3.bridgedUsing": ["undefined"],
      "37.config.escrows.3.isHistorical": ["undefined"],
      "37.config.escrows.3.untilTimestamp": ["undefined"],
      "37.config.escrows.3.sharedEscrow": ["undefined"],
      "37.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.4.excludedTokens": ["undefined"],
      "37.config.escrows.4.premintedTokens": ["undefined"],
      "37.config.escrows.4.contract.upgradeability": ["undefined"],
      "37.config.escrows.4.contract.upgradableBy": ["undefined"],
      "37.config.escrows.4.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.4.isUpcoming": ["undefined"],
      "37.config.escrows.4.source": ["undefined"],
      "37.config.escrows.4.bridgedUsing": ["undefined"],
      "37.config.escrows.4.isHistorical": ["undefined"],
      "37.config.escrows.4.untilTimestamp": ["undefined"],
      "37.config.escrows.4.sharedEscrow": ["undefined"],
      "37.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.5.excludedTokens": ["undefined"],
      "37.config.escrows.5.premintedTokens": ["undefined"],
      "37.config.escrows.5.contract.upgradeability": ["undefined"],
      "37.config.escrows.5.contract.upgradableBy": ["undefined"],
      "37.config.escrows.5.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.5.isUpcoming": ["undefined"],
      "37.config.escrows.5.source": ["undefined"],
      "37.config.escrows.5.bridgedUsing": ["undefined"],
      "37.config.escrows.5.isHistorical": ["undefined"],
      "37.config.escrows.5.untilTimestamp": ["undefined"],
      "37.config.escrows.5.sharedEscrow": ["undefined"],
      "37.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.6.excludedTokens": ["undefined"],
      "37.config.escrows.6.premintedTokens": ["undefined"],
      "37.config.escrows.6.contract.upgradeability": ["undefined"],
      "37.config.escrows.6.contract.upgradableBy": ["undefined"],
      "37.config.escrows.6.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.6.isUpcoming": ["undefined"],
      "37.config.escrows.6.source": ["undefined"],
      "37.config.escrows.6.bridgedUsing": ["undefined"],
      "37.config.escrows.6.isHistorical": ["undefined"],
      "37.config.escrows.6.untilTimestamp": ["undefined"],
      "37.config.escrows.6.sharedEscrow": ["undefined"],
      "37.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.7.excludedTokens": ["undefined"],
      "37.config.escrows.7.premintedTokens": ["undefined"],
      "37.config.escrows.7.contract.upgradeability": ["undefined"],
      "37.config.escrows.7.contract.upgradableBy": ["undefined"],
      "37.config.escrows.7.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.7.isUpcoming": ["undefined"],
      "37.config.escrows.7.source": ["undefined"],
      "37.config.escrows.7.bridgedUsing": ["undefined"],
      "37.config.escrows.7.isHistorical": ["undefined"],
      "37.config.escrows.7.untilTimestamp": ["undefined"],
      "37.config.escrows.7.sharedEscrow": ["undefined"],
      "37.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.8.excludedTokens": ["undefined"],
      "37.config.escrows.8.premintedTokens": ["undefined"],
      "37.config.escrows.8.contract.upgradeability": ["undefined"],
      "37.config.escrows.8.contract.upgradableBy": ["undefined"],
      "37.config.escrows.8.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.8.isUpcoming": ["undefined"],
      "37.config.escrows.8.source": ["undefined"],
      "37.config.escrows.8.bridgedUsing": ["undefined"],
      "37.config.escrows.8.isHistorical": ["undefined"],
      "37.config.escrows.8.untilTimestamp": ["undefined"],
      "37.config.escrows.8.sharedEscrow": ["undefined"],
      "37.config.escrows.9.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.9.excludedTokens": ["undefined"],
      "37.config.escrows.9.premintedTokens": ["undefined"],
      "37.config.escrows.9.contract.upgradeability": ["undefined"],
      "37.config.escrows.9.contract.upgradableBy": ["undefined"],
      "37.config.escrows.9.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.9.isUpcoming": ["undefined"],
      "37.config.escrows.9.source": ["undefined"],
      "37.config.escrows.9.bridgedUsing": ["undefined"],
      "37.config.escrows.9.isHistorical": ["undefined"],
      "37.config.escrows.9.untilTimestamp": ["undefined"],
      "37.config.escrows.9.sharedEscrow": ["undefined"],
      "37.config.escrows.10.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.10.excludedTokens": ["undefined"],
      "37.config.escrows.10.premintedTokens": ["undefined"],
      "37.config.escrows.10.contract.upgradeability": ["undefined"],
      "37.config.escrows.10.contract.upgradableBy": ["undefined"],
      "37.config.escrows.10.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.10.isUpcoming": ["undefined"],
      "37.config.escrows.10.source": ["undefined"],
      "37.config.escrows.10.bridgedUsing": ["undefined"],
      "37.config.escrows.10.isHistorical": ["undefined"],
      "37.config.escrows.10.untilTimestamp": ["undefined"],
      "37.config.escrows.10.sharedEscrow": ["undefined"],
      "37.config.escrows.11.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.11.excludedTokens": ["undefined"],
      "37.config.escrows.11.premintedTokens": ["undefined"],
      "37.config.escrows.11.contract.upgradeability": ["undefined"],
      "37.config.escrows.11.contract.upgradableBy": ["undefined"],
      "37.config.escrows.11.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.11.isUpcoming": ["undefined"],
      "37.config.escrows.11.source": ["undefined"],
      "37.config.escrows.11.bridgedUsing": ["undefined"],
      "37.config.escrows.11.isHistorical": ["undefined"],
      "37.config.escrows.11.untilTimestamp": ["undefined"],
      "37.config.escrows.11.sharedEscrow": ["undefined"],
      "37.config.escrows.12.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.12.excludedTokens": ["undefined"],
      "37.config.escrows.12.premintedTokens": ["undefined"],
      "37.config.escrows.12.contract.upgradeability": ["undefined"],
      "37.config.escrows.12.contract.upgradableBy": ["undefined"],
      "37.config.escrows.12.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.12.isUpcoming": ["undefined"],
      "37.config.escrows.12.source": ["undefined"],
      "37.config.escrows.12.bridgedUsing": ["undefined"],
      "37.config.escrows.12.isHistorical": ["undefined"],
      "37.config.escrows.12.untilTimestamp": ["undefined"],
      "37.config.escrows.12.sharedEscrow": ["undefined"],
      "37.config.escrows.13.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.13.excludedTokens": ["undefined"],
      "37.config.escrows.13.premintedTokens": ["undefined"],
      "37.config.escrows.13.contract.upgradeability": ["undefined"],
      "37.config.escrows.13.contract.upgradableBy": ["undefined"],
      "37.config.escrows.13.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.13.isUpcoming": ["undefined"],
      "37.config.escrows.13.source": ["undefined"],
      "37.config.escrows.13.bridgedUsing": ["undefined"],
      "37.config.escrows.13.isHistorical": ["undefined"],
      "37.config.escrows.13.untilTimestamp": ["undefined"],
      "37.config.escrows.13.sharedEscrow": ["undefined"],
      "37.config.escrows.14.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.14.excludedTokens": ["undefined"],
      "37.config.escrows.14.premintedTokens": ["undefined"],
      "37.config.escrows.14.contract.upgradeability": ["undefined"],
      "37.config.escrows.14.contract.upgradableBy": ["undefined"],
      "37.config.escrows.14.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.14.isUpcoming": ["undefined"],
      "37.config.escrows.14.source": ["undefined"],
      "37.config.escrows.14.bridgedUsing": ["undefined"],
      "37.config.escrows.14.isHistorical": ["undefined"],
      "37.config.escrows.14.untilTimestamp": ["undefined"],
      "37.config.escrows.14.sharedEscrow": ["undefined"],
      "37.config.escrows.15.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.15.excludedTokens": ["undefined"],
      "37.config.escrows.15.premintedTokens": ["undefined"],
      "37.config.escrows.15.contract.upgradeability": ["undefined"],
      "37.config.escrows.15.contract.upgradableBy": ["undefined"],
      "37.config.escrows.15.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.15.isUpcoming": ["undefined"],
      "37.config.escrows.15.source": ["undefined"],
      "37.config.escrows.15.bridgedUsing": ["undefined"],
      "37.config.escrows.15.isHistorical": ["undefined"],
      "37.config.escrows.15.untilTimestamp": ["undefined"],
      "37.config.escrows.15.sharedEscrow": ["undefined"],
      "37.config.escrows.16.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.16.excludedTokens": ["undefined"],
      "37.config.escrows.16.premintedTokens": ["undefined"],
      "37.config.escrows.16.contract.upgradeability": ["undefined"],
      "37.config.escrows.16.contract.upgradableBy": ["undefined"],
      "37.config.escrows.16.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.16.isUpcoming": ["undefined"],
      "37.config.escrows.16.source": ["undefined"],
      "37.config.escrows.16.bridgedUsing": ["undefined"],
      "37.config.escrows.16.isHistorical": ["undefined"],
      "37.config.escrows.16.untilTimestamp": ["undefined"],
      "37.config.escrows.16.sharedEscrow": ["undefined"],
      "37.config.escrows.17.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.17.excludedTokens": ["undefined"],
      "37.config.escrows.17.premintedTokens": ["undefined"],
      "37.config.escrows.17.contract.upgradeability": ["undefined"],
      "37.config.escrows.17.contract.upgradableBy": ["undefined"],
      "37.config.escrows.17.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.17.isUpcoming": ["undefined"],
      "37.config.escrows.17.source": ["undefined"],
      "37.config.escrows.17.bridgedUsing": ["undefined"],
      "37.config.escrows.17.isHistorical": ["undefined"],
      "37.config.escrows.17.untilTimestamp": ["undefined"],
      "37.config.escrows.17.sharedEscrow": ["undefined"],
      "37.config.escrows.18.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.18.excludedTokens": ["undefined"],
      "37.config.escrows.18.premintedTokens": ["undefined"],
      "37.config.escrows.18.contract.upgradeability": ["undefined"],
      "37.config.escrows.18.contract.upgradableBy": ["undefined"],
      "37.config.escrows.18.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.18.isUpcoming": ["undefined"],
      "37.config.escrows.18.source": ["undefined"],
      "37.config.escrows.18.bridgedUsing": ["undefined"],
      "37.config.escrows.18.isHistorical": ["undefined"],
      "37.config.escrows.18.untilTimestamp": ["undefined"],
      "37.config.escrows.18.sharedEscrow": ["undefined"],
      "37.config.escrows.19.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.19.excludedTokens": ["undefined"],
      "37.config.escrows.19.premintedTokens": ["undefined"],
      "37.config.escrows.19.contract.upgradeability": ["undefined"],
      "37.config.escrows.19.contract.upgradableBy": ["undefined"],
      "37.config.escrows.19.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.19.isUpcoming": ["undefined"],
      "37.config.escrows.19.source": ["undefined"],
      "37.config.escrows.19.bridgedUsing": ["undefined"],
      "37.config.escrows.19.isHistorical": ["undefined"],
      "37.config.escrows.19.untilTimestamp": ["undefined"],
      "37.config.escrows.19.sharedEscrow": ["undefined"],
      "37.config.escrows.20.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.20.excludedTokens": ["undefined"],
      "37.config.escrows.20.premintedTokens": ["undefined"],
      "37.config.escrows.20.contract.upgradeability": ["undefined"],
      "37.config.escrows.20.contract.upgradableBy": ["undefined"],
      "37.config.escrows.20.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.20.isUpcoming": ["undefined"],
      "37.config.escrows.20.source": ["undefined"],
      "37.config.escrows.20.bridgedUsing": ["undefined"],
      "37.config.escrows.20.isHistorical": ["undefined"],
      "37.config.escrows.20.untilTimestamp": ["undefined"],
      "37.config.escrows.20.sharedEscrow": ["undefined"],
      "37.config.escrows.21.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.21.excludedTokens": ["undefined"],
      "37.config.escrows.21.premintedTokens": ["undefined"],
      "37.config.escrows.21.contract.upgradeability": ["undefined"],
      "37.config.escrows.21.contract.upgradableBy": ["undefined"],
      "37.config.escrows.21.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.21.isUpcoming": ["undefined"],
      "37.config.escrows.21.source": ["undefined"],
      "37.config.escrows.21.bridgedUsing": ["undefined"],
      "37.config.escrows.21.isHistorical": ["undefined"],
      "37.config.escrows.21.untilTimestamp": ["undefined"],
      "37.config.escrows.21.sharedEscrow": ["undefined"],
      "37.config.escrows.22.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.22.excludedTokens": ["undefined"],
      "37.config.escrows.22.premintedTokens": ["undefined"],
      "37.config.escrows.22.contract.upgradeability": ["undefined"],
      "37.config.escrows.22.contract.upgradableBy": ["undefined"],
      "37.config.escrows.22.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.22.isUpcoming": ["undefined"],
      "37.config.escrows.22.source": ["undefined"],
      "37.config.escrows.22.bridgedUsing": ["undefined"],
      "37.config.escrows.22.isHistorical": ["undefined"],
      "37.config.escrows.22.untilTimestamp": ["undefined"],
      "37.config.escrows.22.sharedEscrow": ["undefined"],
      "37.config.escrows.23.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.23.excludedTokens": ["undefined"],
      "37.config.escrows.23.premintedTokens": ["undefined"],
      "37.config.escrows.23.contract.upgradeability": ["undefined"],
      "37.config.escrows.23.contract.upgradableBy": ["undefined"],
      "37.config.escrows.23.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.23.isUpcoming": ["undefined"],
      "37.config.escrows.23.source": ["undefined"],
      "37.config.escrows.23.bridgedUsing": ["undefined"],
      "37.config.escrows.23.isHistorical": ["undefined"],
      "37.config.escrows.23.untilTimestamp": ["undefined"],
      "37.config.escrows.23.sharedEscrow": ["undefined"],
      "37.config.escrows.24.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.24.excludedTokens": ["undefined"],
      "37.config.escrows.24.premintedTokens": ["undefined"],
      "37.config.escrows.24.contract.upgradeability": ["undefined"],
      "37.config.escrows.24.contract.upgradableBy": ["undefined"],
      "37.config.escrows.24.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.24.isUpcoming": ["undefined"],
      "37.config.escrows.24.source": ["undefined"],
      "37.config.escrows.24.bridgedUsing": ["undefined"],
      "37.config.escrows.24.isHistorical": ["undefined"],
      "37.config.escrows.24.untilTimestamp": ["undefined"],
      "37.config.escrows.24.sharedEscrow": ["undefined"],
      "37.config.escrows.25.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.25.excludedTokens": ["undefined"],
      "37.config.escrows.25.premintedTokens": ["undefined"],
      "37.config.escrows.25.contract.upgradeability": ["undefined"],
      "37.config.escrows.25.contract.upgradableBy": ["undefined"],
      "37.config.escrows.25.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.25.isUpcoming": ["undefined"],
      "37.config.escrows.25.source": ["undefined"],
      "37.config.escrows.25.bridgedUsing": ["undefined"],
      "37.config.escrows.25.isHistorical": ["undefined"],
      "37.config.escrows.25.untilTimestamp": ["undefined"],
      "37.config.escrows.25.sharedEscrow": ["undefined"],
      "37.config.escrows.26.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.26.excludedTokens": ["undefined"],
      "37.config.escrows.26.premintedTokens": ["undefined"],
      "37.config.escrows.26.contract.upgradeability": ["undefined"],
      "37.config.escrows.26.contract.upgradableBy": ["undefined"],
      "37.config.escrows.26.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.26.isUpcoming": ["undefined"],
      "37.config.escrows.26.source": ["undefined"],
      "37.config.escrows.26.bridgedUsing": ["undefined"],
      "37.config.escrows.26.isHistorical": ["undefined"],
      "37.config.escrows.26.untilTimestamp": ["undefined"],
      "37.config.escrows.26.sharedEscrow": ["undefined"],
      "37.config.escrows.27.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.27.excludedTokens": ["undefined"],
      "37.config.escrows.27.premintedTokens": ["undefined"],
      "37.config.escrows.27.contract.upgradeability": ["undefined"],
      "37.config.escrows.27.contract.upgradableBy": ["undefined"],
      "37.config.escrows.27.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.27.isUpcoming": ["undefined"],
      "37.config.escrows.27.source": ["undefined"],
      "37.config.escrows.27.bridgedUsing": ["undefined"],
      "37.config.escrows.27.isHistorical": ["undefined"],
      "37.config.escrows.27.untilTimestamp": ["undefined"],
      "37.config.escrows.27.sharedEscrow": ["undefined"],
      "37.config.escrows.28.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.28.excludedTokens": ["undefined"],
      "37.config.escrows.28.premintedTokens": ["undefined"],
      "37.config.escrows.28.contract.upgradeability": ["undefined"],
      "37.config.escrows.28.contract.upgradableBy": ["undefined"],
      "37.config.escrows.28.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.28.isUpcoming": ["undefined"],
      "37.config.escrows.28.source": ["undefined"],
      "37.config.escrows.28.bridgedUsing": ["undefined"],
      "37.config.escrows.28.isHistorical": ["undefined"],
      "37.config.escrows.28.untilTimestamp": ["undefined"],
      "37.config.escrows.28.sharedEscrow": ["undefined"],
      "37.config.escrows.29.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.29.excludedTokens": ["undefined"],
      "37.config.escrows.29.premintedTokens": ["undefined"],
      "37.config.escrows.29.contract.upgradeability": ["undefined"],
      "37.config.escrows.29.contract.upgradableBy": ["undefined"],
      "37.config.escrows.29.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.29.isUpcoming": ["undefined"],
      "37.config.escrows.29.source": ["undefined"],
      "37.config.escrows.29.bridgedUsing": ["undefined"],
      "37.config.escrows.29.isHistorical": ["undefined"],
      "37.config.escrows.29.untilTimestamp": ["undefined"],
      "37.config.escrows.29.sharedEscrow": ["undefined"],
      "37.config.escrows.30.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.30.excludedTokens": ["undefined"],
      "37.config.escrows.30.premintedTokens": ["undefined"],
      "37.config.escrows.30.contract.upgradeability": ["undefined"],
      "37.config.escrows.30.contract.upgradableBy": ["undefined"],
      "37.config.escrows.30.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.30.isUpcoming": ["undefined"],
      "37.config.escrows.30.source": ["undefined"],
      "37.config.escrows.30.bridgedUsing": ["undefined"],
      "37.config.escrows.30.isHistorical": ["undefined"],
      "37.config.escrows.30.untilTimestamp": ["undefined"],
      "37.config.escrows.30.sharedEscrow": ["undefined"],
      "37.config.escrows.31.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.31.excludedTokens": ["undefined"],
      "37.config.escrows.31.premintedTokens": ["undefined"],
      "37.config.escrows.31.contract.upgradeability": ["undefined"],
      "37.config.escrows.31.contract.upgradableBy": ["undefined"],
      "37.config.escrows.31.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.31.isUpcoming": ["undefined"],
      "37.config.escrows.31.source": ["undefined"],
      "37.config.escrows.31.bridgedUsing": ["undefined"],
      "37.config.escrows.31.isHistorical": ["undefined"],
      "37.config.escrows.31.untilTimestamp": ["undefined"],
      "37.config.escrows.31.sharedEscrow": ["undefined"],
      "37.config.escrows.32.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.32.excludedTokens": ["undefined"],
      "37.config.escrows.32.premintedTokens": ["undefined"],
      "37.config.escrows.32.contract.upgradeability": ["undefined"],
      "37.config.escrows.32.contract.upgradableBy": ["undefined"],
      "37.config.escrows.32.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.32.isUpcoming": ["undefined"],
      "37.config.escrows.32.source": ["undefined"],
      "37.config.escrows.32.bridgedUsing": ["undefined"],
      "37.config.escrows.32.isHistorical": ["undefined"],
      "37.config.escrows.32.untilTimestamp": ["undefined"],
      "37.config.escrows.32.sharedEscrow": ["undefined"],
      "37.config.escrows.33.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.33.excludedTokens": ["undefined"],
      "37.config.escrows.33.premintedTokens": ["undefined"],
      "37.config.escrows.33.contract.upgradeability": ["undefined"],
      "37.config.escrows.33.contract.upgradableBy": ["undefined"],
      "37.config.escrows.33.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.33.isUpcoming": ["undefined"],
      "37.config.escrows.33.source": ["undefined"],
      "37.config.escrows.33.bridgedUsing": ["undefined"],
      "37.config.escrows.33.isHistorical": ["undefined"],
      "37.config.escrows.33.untilTimestamp": ["undefined"],
      "37.config.escrows.33.sharedEscrow": ["undefined"],
      "37.config.escrows.34.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.34.excludedTokens": ["undefined"],
      "37.config.escrows.34.premintedTokens": ["undefined"],
      "37.config.escrows.34.contract.upgradeability": ["undefined"],
      "37.config.escrows.34.contract.upgradableBy": ["undefined"],
      "37.config.escrows.34.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.34.isUpcoming": ["undefined"],
      "37.config.escrows.34.source": ["undefined"],
      "37.config.escrows.34.bridgedUsing": ["undefined"],
      "37.config.escrows.34.isHistorical": ["undefined"],
      "37.config.escrows.34.untilTimestamp": ["undefined"],
      "37.config.escrows.34.sharedEscrow": ["undefined"],
      "37.config.escrows.35.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.35.excludedTokens": ["undefined"],
      "37.config.escrows.35.premintedTokens": ["undefined"],
      "37.config.escrows.35.contract.upgradeability": ["undefined"],
      "37.config.escrows.35.contract.upgradableBy": ["undefined"],
      "37.config.escrows.35.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.35.isUpcoming": ["undefined"],
      "37.config.escrows.35.source": ["undefined"],
      "37.config.escrows.35.bridgedUsing": ["undefined"],
      "37.config.escrows.35.isHistorical": ["undefined"],
      "37.config.escrows.35.untilTimestamp": ["undefined"],
      "37.config.escrows.35.sharedEscrow": ["undefined"],
      "37.config.escrows.36.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.36.excludedTokens": ["undefined"],
      "37.config.escrows.36.premintedTokens": ["undefined"],
      "37.config.escrows.36.contract.upgradeability": ["undefined"],
      "37.config.escrows.36.contract.upgradableBy": ["undefined"],
      "37.config.escrows.36.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.36.isUpcoming": ["undefined"],
      "37.config.escrows.36.source": ["undefined"],
      "37.config.escrows.36.bridgedUsing": ["undefined"],
      "37.config.escrows.36.isHistorical": ["undefined"],
      "37.config.escrows.36.untilTimestamp": ["undefined"],
      "37.config.escrows.36.sharedEscrow": ["undefined"],
      "37.config.escrows.37.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.37.excludedTokens": ["undefined"],
      "37.config.escrows.37.premintedTokens": ["undefined"],
      "37.config.escrows.37.contract.upgradeability": ["undefined"],
      "37.config.escrows.37.contract.upgradableBy": ["undefined"],
      "37.config.escrows.37.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.37.isUpcoming": ["undefined"],
      "37.config.escrows.37.source": ["undefined"],
      "37.config.escrows.37.bridgedUsing": ["undefined"],
      "37.config.escrows.37.isHistorical": ["undefined"],
      "37.config.escrows.37.untilTimestamp": ["undefined"],
      "37.config.escrows.37.sharedEscrow": ["undefined"],
      "37.config.escrows.38.sinceTimestamp": [["custom", "UnixTime"]],
      "37.config.escrows.38.excludedTokens": ["undefined"],
      "37.config.escrows.38.premintedTokens": ["undefined"],
      "37.config.escrows.38.contract.upgradeability": ["undefined"],
      "37.config.escrows.38.contract.upgradableBy": ["undefined"],
      "37.config.escrows.38.contract.upgradeDelay": ["undefined"],
      "37.config.escrows.38.isUpcoming": ["undefined"],
      "37.config.escrows.38.source": ["undefined"],
      "37.config.escrows.38.bridgedUsing": ["undefined"],
      "37.config.escrows.38.isHistorical": ["undefined"],
      "37.config.escrows.38.untilTimestamp": ["undefined"],
      "37.config.escrows.38.sharedEscrow": ["undefined"],
      "37.contracts.addresses.0.upgradeability": ["undefined"],
      "37.contracts.addresses.1.upgradeability": ["undefined"],
      "37.contracts.addresses.2.upgradeability": ["undefined"],
      "37.contracts.addresses.3.upgradeability": ["undefined"],
      "37.contracts.addresses.4.upgradeability": ["undefined"],
      "37.contracts.addresses.5.upgradeability": ["undefined"],
      "37.contracts.addresses.6.upgradeability": ["undefined"],
      "37.permissions.1.references": ["undefined"],
      "37.permissions.2.references": ["undefined"],
      "37.permissions.4.references": ["undefined"],
      "38.createdAt": [["custom", "UnixTime"]],
      "38.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "38.contracts.addresses.0.upgradeability": ["undefined"],
      "39.createdAt": [["custom", "UnixTime"]],
      "39.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.0.excludedTokens": ["undefined"],
      "39.config.escrows.0.premintedTokens": ["undefined"],
      "39.config.escrows.0.contract.name": ["undefined"],
      "39.config.escrows.0.contract.upgradeability": ["undefined"],
      "39.config.escrows.0.contract.upgradableBy": ["undefined"],
      "39.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.0.isUpcoming": ["undefined"],
      "39.config.escrows.0.source": ["undefined"],
      "39.config.escrows.0.bridgedUsing": ["undefined"],
      "39.config.escrows.0.isHistorical": ["undefined"],
      "39.config.escrows.0.untilTimestamp": ["undefined"],
      "39.config.escrows.0.sharedEscrow": ["undefined"],
      "39.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.1.excludedTokens": ["undefined"],
      "39.config.escrows.1.premintedTokens": ["undefined"],
      "39.config.escrows.1.contract.name": ["undefined"],
      "39.config.escrows.1.contract.upgradeability": ["undefined"],
      "39.config.escrows.1.contract.upgradableBy": ["undefined"],
      "39.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.1.isUpcoming": ["undefined"],
      "39.config.escrows.1.source": ["undefined"],
      "39.config.escrows.1.bridgedUsing": ["undefined"],
      "39.config.escrows.1.isHistorical": ["undefined"],
      "39.config.escrows.1.untilTimestamp": ["undefined"],
      "39.config.escrows.1.sharedEscrow": ["undefined"],
      "39.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.2.excludedTokens": ["undefined"],
      "39.config.escrows.2.premintedTokens": ["undefined"],
      "39.config.escrows.2.contract.name": ["undefined"],
      "39.config.escrows.2.contract.upgradeability": ["undefined"],
      "39.config.escrows.2.contract.upgradableBy": ["undefined"],
      "39.config.escrows.2.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.2.isUpcoming": ["undefined"],
      "39.config.escrows.2.source": ["undefined"],
      "39.config.escrows.2.bridgedUsing": ["undefined"],
      "39.config.escrows.2.isHistorical": ["undefined"],
      "39.config.escrows.2.untilTimestamp": ["undefined"],
      "39.config.escrows.2.sharedEscrow": ["undefined"],
      "39.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.3.excludedTokens": ["undefined"],
      "39.config.escrows.3.premintedTokens": ["undefined"],
      "39.config.escrows.3.contract.name": ["undefined"],
      "39.config.escrows.3.contract.upgradeability": ["undefined"],
      "39.config.escrows.3.contract.upgradableBy": ["undefined"],
      "39.config.escrows.3.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.3.isUpcoming": ["undefined"],
      "39.config.escrows.3.source": ["undefined"],
      "39.config.escrows.3.bridgedUsing": ["undefined"],
      "39.config.escrows.3.isHistorical": ["undefined"],
      "39.config.escrows.3.untilTimestamp": ["undefined"],
      "39.config.escrows.3.sharedEscrow": ["undefined"],
      "39.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.4.excludedTokens": ["undefined"],
      "39.config.escrows.4.premintedTokens": ["undefined"],
      "39.config.escrows.4.contract.name": ["undefined"],
      "39.config.escrows.4.contract.upgradeability": ["undefined"],
      "39.config.escrows.4.contract.upgradableBy": ["undefined"],
      "39.config.escrows.4.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.4.isUpcoming": ["undefined"],
      "39.config.escrows.4.source": ["undefined"],
      "39.config.escrows.4.bridgedUsing": ["undefined"],
      "39.config.escrows.4.isHistorical": ["undefined"],
      "39.config.escrows.4.untilTimestamp": ["undefined"],
      "39.config.escrows.4.sharedEscrow": ["undefined"],
      "39.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.5.excludedTokens": ["undefined"],
      "39.config.escrows.5.premintedTokens": ["undefined"],
      "39.config.escrows.5.contract.name": ["undefined"],
      "39.config.escrows.5.contract.upgradeability": ["undefined"],
      "39.config.escrows.5.contract.upgradableBy": ["undefined"],
      "39.config.escrows.5.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.5.isUpcoming": ["undefined"],
      "39.config.escrows.5.source": ["undefined"],
      "39.config.escrows.5.bridgedUsing": ["undefined"],
      "39.config.escrows.5.isHistorical": ["undefined"],
      "39.config.escrows.5.untilTimestamp": ["undefined"],
      "39.config.escrows.5.sharedEscrow": ["undefined"],
      "39.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.6.excludedTokens": ["undefined"],
      "39.config.escrows.6.premintedTokens": ["undefined"],
      "39.config.escrows.6.contract.name": ["undefined"],
      "39.config.escrows.6.contract.upgradeability": ["undefined"],
      "39.config.escrows.6.contract.upgradableBy": ["undefined"],
      "39.config.escrows.6.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.6.isUpcoming": ["undefined"],
      "39.config.escrows.6.source": ["undefined"],
      "39.config.escrows.6.bridgedUsing": ["undefined"],
      "39.config.escrows.6.isHistorical": ["undefined"],
      "39.config.escrows.6.untilTimestamp": ["undefined"],
      "39.config.escrows.6.sharedEscrow": ["undefined"],
      "39.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.7.excludedTokens": ["undefined"],
      "39.config.escrows.7.premintedTokens": ["undefined"],
      "39.config.escrows.7.contract.name": ["undefined"],
      "39.config.escrows.7.contract.upgradeability": ["undefined"],
      "39.config.escrows.7.contract.upgradableBy": ["undefined"],
      "39.config.escrows.7.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.7.isUpcoming": ["undefined"],
      "39.config.escrows.7.source": ["undefined"],
      "39.config.escrows.7.bridgedUsing": ["undefined"],
      "39.config.escrows.7.isHistorical": ["undefined"],
      "39.config.escrows.7.untilTimestamp": ["undefined"],
      "39.config.escrows.7.sharedEscrow": ["undefined"],
      "39.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.8.excludedTokens": ["undefined"],
      "39.config.escrows.8.premintedTokens": ["undefined"],
      "39.config.escrows.8.contract.name": ["undefined"],
      "39.config.escrows.8.contract.upgradeability": ["undefined"],
      "39.config.escrows.8.contract.upgradableBy": ["undefined"],
      "39.config.escrows.8.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.8.isUpcoming": ["undefined"],
      "39.config.escrows.8.source": ["undefined"],
      "39.config.escrows.8.bridgedUsing": ["undefined"],
      "39.config.escrows.8.isHistorical": ["undefined"],
      "39.config.escrows.8.untilTimestamp": ["undefined"],
      "39.config.escrows.8.sharedEscrow": ["undefined"],
      "39.config.escrows.9.sinceTimestamp": [["custom", "UnixTime"]],
      "39.config.escrows.9.excludedTokens": ["undefined"],
      "39.config.escrows.9.premintedTokens": ["undefined"],
      "39.config.escrows.9.contract.name": ["undefined"],
      "39.config.escrows.9.contract.upgradeability": ["undefined"],
      "39.config.escrows.9.contract.upgradableBy": ["undefined"],
      "39.config.escrows.9.contract.upgradeDelay": ["undefined"],
      "39.config.escrows.9.isUpcoming": ["undefined"],
      "39.config.escrows.9.source": ["undefined"],
      "39.config.escrows.9.bridgedUsing": ["undefined"],
      "39.config.escrows.9.isHistorical": ["undefined"],
      "39.config.escrows.9.untilTimestamp": ["undefined"],
      "39.config.escrows.9.sharedEscrow": ["undefined"],
      "39.config.escrows.10.sinceTimestamp": [["custom", "UnixTime"]],
      "39.contracts.addresses.0.upgradeability": ["undefined"],
      "39.contracts.addresses.1.upgradeability": ["undefined"],
      "39.contracts.addresses.2.upgradeability": ["undefined"],
      "39.contracts.addresses.4.upgradeability": ["undefined"],
      "39.contracts.addresses.6.upgradeability": ["undefined"],
      "39.contracts.addresses.7.upgradeability": ["undefined"],
      "39.permissions.0.references": ["undefined"],
      "39.permissions.1.references": ["undefined"],
      "40.createdAt": [["custom", "UnixTime"]],
      "40.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.0.excludedTokens": ["undefined"],
      "40.config.escrows.0.premintedTokens": ["undefined"],
      "40.config.escrows.0.contract.name": ["undefined"],
      "40.config.escrows.0.contract.upgradeability": ["undefined"],
      "40.config.escrows.0.contract.upgradableBy": ["undefined"],
      "40.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.0.isUpcoming": ["undefined"],
      "40.config.escrows.0.source": ["undefined"],
      "40.config.escrows.0.bridgedUsing": ["undefined"],
      "40.config.escrows.0.isHistorical": ["undefined"],
      "40.config.escrows.0.untilTimestamp": ["undefined"],
      "40.config.escrows.0.sharedEscrow": ["undefined"],
      "40.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.1.excludedTokens": ["undefined"],
      "40.config.escrows.1.premintedTokens": ["undefined"],
      "40.config.escrows.1.contract.name": ["undefined"],
      "40.config.escrows.1.contract.upgradeability": ["undefined"],
      "40.config.escrows.1.contract.upgradableBy": ["undefined"],
      "40.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.1.isUpcoming": ["undefined"],
      "40.config.escrows.1.source": ["undefined"],
      "40.config.escrows.1.bridgedUsing": ["undefined"],
      "40.config.escrows.1.isHistorical": ["undefined"],
      "40.config.escrows.1.untilTimestamp": ["undefined"],
      "40.config.escrows.1.sharedEscrow": ["undefined"],
      "40.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.2.excludedTokens": ["undefined"],
      "40.config.escrows.2.premintedTokens": ["undefined"],
      "40.config.escrows.2.contract.name": ["undefined"],
      "40.config.escrows.2.contract.upgradeability": ["undefined"],
      "40.config.escrows.2.contract.upgradableBy": ["undefined"],
      "40.config.escrows.2.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.2.isUpcoming": ["undefined"],
      "40.config.escrows.2.source": ["undefined"],
      "40.config.escrows.2.bridgedUsing": ["undefined"],
      "40.config.escrows.2.isHistorical": ["undefined"],
      "40.config.escrows.2.untilTimestamp": ["undefined"],
      "40.config.escrows.2.sharedEscrow": ["undefined"],
      "40.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.3.excludedTokens": ["undefined"],
      "40.config.escrows.3.premintedTokens": ["undefined"],
      "40.config.escrows.3.contract.name": ["undefined"],
      "40.config.escrows.3.contract.upgradeability": ["undefined"],
      "40.config.escrows.3.contract.upgradableBy": ["undefined"],
      "40.config.escrows.3.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.3.isUpcoming": ["undefined"],
      "40.config.escrows.3.source": ["undefined"],
      "40.config.escrows.3.bridgedUsing": ["undefined"],
      "40.config.escrows.3.isHistorical": ["undefined"],
      "40.config.escrows.3.untilTimestamp": ["undefined"],
      "40.config.escrows.3.sharedEscrow": ["undefined"],
      "40.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.4.excludedTokens": ["undefined"],
      "40.config.escrows.4.premintedTokens": ["undefined"],
      "40.config.escrows.4.contract.name": ["undefined"],
      "40.config.escrows.4.contract.upgradeability": ["undefined"],
      "40.config.escrows.4.contract.upgradableBy": ["undefined"],
      "40.config.escrows.4.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.4.isUpcoming": ["undefined"],
      "40.config.escrows.4.source": ["undefined"],
      "40.config.escrows.4.bridgedUsing": ["undefined"],
      "40.config.escrows.4.isHistorical": ["undefined"],
      "40.config.escrows.4.untilTimestamp": ["undefined"],
      "40.config.escrows.4.sharedEscrow": ["undefined"],
      "40.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.5.excludedTokens": ["undefined"],
      "40.config.escrows.5.premintedTokens": ["undefined"],
      "40.config.escrows.5.contract.name": ["undefined"],
      "40.config.escrows.5.contract.upgradeability": ["undefined"],
      "40.config.escrows.5.contract.upgradableBy": ["undefined"],
      "40.config.escrows.5.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.5.isUpcoming": ["undefined"],
      "40.config.escrows.5.includeInTotal": ["undefined"],
      "40.config.escrows.5.source": ["undefined"],
      "40.config.escrows.5.bridgedUsing": ["undefined"],
      "40.config.escrows.5.isHistorical": ["undefined"],
      "40.config.escrows.5.untilTimestamp": ["undefined"],
      "40.config.escrows.5.sharedEscrow": ["undefined"],
      "40.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.6.excludedTokens": ["undefined"],
      "40.config.escrows.6.premintedTokens": ["undefined"],
      "40.config.escrows.6.contract.name": ["undefined"],
      "40.config.escrows.6.contract.upgradeability": ["undefined"],
      "40.config.escrows.6.contract.upgradableBy": ["undefined"],
      "40.config.escrows.6.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.6.isUpcoming": ["undefined"],
      "40.config.escrows.6.includeInTotal": ["undefined"],
      "40.config.escrows.6.source": ["undefined"],
      "40.config.escrows.6.bridgedUsing": ["undefined"],
      "40.config.escrows.6.isHistorical": ["undefined"],
      "40.config.escrows.6.untilTimestamp": ["undefined"],
      "40.config.escrows.6.sharedEscrow": ["undefined"],
      "40.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.7.excludedTokens": ["undefined"],
      "40.config.escrows.7.premintedTokens": ["undefined"],
      "40.config.escrows.7.contract.name": ["undefined"],
      "40.config.escrows.7.contract.upgradeability": ["undefined"],
      "40.config.escrows.7.contract.upgradableBy": ["undefined"],
      "40.config.escrows.7.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.7.isUpcoming": ["undefined"],
      "40.config.escrows.7.includeInTotal": ["undefined"],
      "40.config.escrows.7.source": ["undefined"],
      "40.config.escrows.7.bridgedUsing": ["undefined"],
      "40.config.escrows.7.isHistorical": ["undefined"],
      "40.config.escrows.7.untilTimestamp": ["undefined"],
      "40.config.escrows.7.sharedEscrow": ["undefined"],
      "40.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.8.excludedTokens": ["undefined"],
      "40.config.escrows.8.premintedTokens": ["undefined"],
      "40.config.escrows.8.contract.name": ["undefined"],
      "40.config.escrows.8.contract.upgradeability": ["undefined"],
      "40.config.escrows.8.contract.upgradableBy": ["undefined"],
      "40.config.escrows.8.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.8.isUpcoming": ["undefined"],
      "40.config.escrows.8.includeInTotal": ["undefined"],
      "40.config.escrows.8.source": ["undefined"],
      "40.config.escrows.8.bridgedUsing": ["undefined"],
      "40.config.escrows.8.isHistorical": ["undefined"],
      "40.config.escrows.8.untilTimestamp": ["undefined"],
      "40.config.escrows.8.sharedEscrow": ["undefined"],
      "40.config.escrows.9.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.9.excludedTokens": ["undefined"],
      "40.config.escrows.9.premintedTokens": ["undefined"],
      "40.config.escrows.9.contract.name": ["undefined"],
      "40.config.escrows.9.contract.upgradeability": ["undefined"],
      "40.config.escrows.9.contract.upgradableBy": ["undefined"],
      "40.config.escrows.9.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.9.isUpcoming": ["undefined"],
      "40.config.escrows.9.includeInTotal": ["undefined"],
      "40.config.escrows.9.source": ["undefined"],
      "40.config.escrows.9.bridgedUsing": ["undefined"],
      "40.config.escrows.9.isHistorical": ["undefined"],
      "40.config.escrows.9.untilTimestamp": ["undefined"],
      "40.config.escrows.9.sharedEscrow": ["undefined"],
      "40.config.escrows.10.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.10.excludedTokens": ["undefined"],
      "40.config.escrows.10.premintedTokens": ["undefined"],
      "40.config.escrows.10.contract.name": ["undefined"],
      "40.config.escrows.10.contract.upgradeability": ["undefined"],
      "40.config.escrows.10.contract.upgradableBy": ["undefined"],
      "40.config.escrows.10.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.10.isUpcoming": ["undefined"],
      "40.config.escrows.10.includeInTotal": ["undefined"],
      "40.config.escrows.10.source": ["undefined"],
      "40.config.escrows.10.bridgedUsing": ["undefined"],
      "40.config.escrows.10.isHistorical": ["undefined"],
      "40.config.escrows.10.untilTimestamp": ["undefined"],
      "40.config.escrows.10.sharedEscrow": ["undefined"],
      "40.config.escrows.11.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.11.excludedTokens": ["undefined"],
      "40.config.escrows.11.premintedTokens": ["undefined"],
      "40.config.escrows.11.contract.name": ["undefined"],
      "40.config.escrows.11.contract.upgradeability": ["undefined"],
      "40.config.escrows.11.contract.upgradableBy": ["undefined"],
      "40.config.escrows.11.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.11.isUpcoming": ["undefined"],
      "40.config.escrows.11.includeInTotal": ["undefined"],
      "40.config.escrows.11.source": ["undefined"],
      "40.config.escrows.11.bridgedUsing": ["undefined"],
      "40.config.escrows.11.isHistorical": ["undefined"],
      "40.config.escrows.11.untilTimestamp": ["undefined"],
      "40.config.escrows.11.sharedEscrow": ["undefined"],
      "40.config.escrows.12.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.12.excludedTokens": ["undefined"],
      "40.config.escrows.12.premintedTokens": ["undefined"],
      "40.config.escrows.12.contract.name": ["undefined"],
      "40.config.escrows.12.contract.upgradeability": ["undefined"],
      "40.config.escrows.12.contract.upgradableBy": ["undefined"],
      "40.config.escrows.12.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.12.isUpcoming": ["undefined"],
      "40.config.escrows.12.includeInTotal": ["undefined"],
      "40.config.escrows.12.source": ["undefined"],
      "40.config.escrows.12.bridgedUsing": ["undefined"],
      "40.config.escrows.12.isHistorical": ["undefined"],
      "40.config.escrows.12.untilTimestamp": ["undefined"],
      "40.config.escrows.12.sharedEscrow": ["undefined"],
      "40.config.escrows.13.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.13.excludedTokens": ["undefined"],
      "40.config.escrows.13.premintedTokens": ["undefined"],
      "40.config.escrows.13.contract.name": ["undefined"],
      "40.config.escrows.13.contract.upgradeability": ["undefined"],
      "40.config.escrows.13.contract.upgradableBy": ["undefined"],
      "40.config.escrows.13.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.13.isUpcoming": ["undefined"],
      "40.config.escrows.13.includeInTotal": ["undefined"],
      "40.config.escrows.13.source": ["undefined"],
      "40.config.escrows.13.bridgedUsing": ["undefined"],
      "40.config.escrows.13.isHistorical": ["undefined"],
      "40.config.escrows.13.untilTimestamp": ["undefined"],
      "40.config.escrows.13.sharedEscrow": ["undefined"],
      "40.config.escrows.14.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.14.excludedTokens": ["undefined"],
      "40.config.escrows.14.premintedTokens": ["undefined"],
      "40.config.escrows.14.contract.name": ["undefined"],
      "40.config.escrows.14.contract.upgradeability": ["undefined"],
      "40.config.escrows.14.contract.upgradableBy": ["undefined"],
      "40.config.escrows.14.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.14.isUpcoming": ["undefined"],
      "40.config.escrows.14.includeInTotal": ["undefined"],
      "40.config.escrows.14.source": ["undefined"],
      "40.config.escrows.14.bridgedUsing": ["undefined"],
      "40.config.escrows.14.isHistorical": ["undefined"],
      "40.config.escrows.14.untilTimestamp": ["undefined"],
      "40.config.escrows.14.sharedEscrow": ["undefined"],
      "40.config.escrows.15.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.15.excludedTokens": ["undefined"],
      "40.config.escrows.15.premintedTokens": ["undefined"],
      "40.config.escrows.15.contract.name": ["undefined"],
      "40.config.escrows.15.contract.upgradeability": ["undefined"],
      "40.config.escrows.15.contract.upgradableBy": ["undefined"],
      "40.config.escrows.15.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.15.isUpcoming": ["undefined"],
      "40.config.escrows.15.includeInTotal": ["undefined"],
      "40.config.escrows.15.source": ["undefined"],
      "40.config.escrows.15.bridgedUsing": ["undefined"],
      "40.config.escrows.15.isHistorical": ["undefined"],
      "40.config.escrows.15.untilTimestamp": ["undefined"],
      "40.config.escrows.15.sharedEscrow": ["undefined"],
      "40.config.escrows.16.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.16.excludedTokens": ["undefined"],
      "40.config.escrows.16.premintedTokens": ["undefined"],
      "40.config.escrows.16.contract.name": ["undefined"],
      "40.config.escrows.16.contract.upgradeability": ["undefined"],
      "40.config.escrows.16.contract.upgradableBy": ["undefined"],
      "40.config.escrows.16.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.16.isUpcoming": ["undefined"],
      "40.config.escrows.16.includeInTotal": ["undefined"],
      "40.config.escrows.16.source": ["undefined"],
      "40.config.escrows.16.bridgedUsing": ["undefined"],
      "40.config.escrows.16.isHistorical": ["undefined"],
      "40.config.escrows.16.untilTimestamp": ["undefined"],
      "40.config.escrows.16.sharedEscrow": ["undefined"],
      "40.config.escrows.17.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.17.excludedTokens": ["undefined"],
      "40.config.escrows.17.premintedTokens": ["undefined"],
      "40.config.escrows.17.contract.name": ["undefined"],
      "40.config.escrows.17.contract.upgradeability": ["undefined"],
      "40.config.escrows.17.contract.upgradableBy": ["undefined"],
      "40.config.escrows.17.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.17.isUpcoming": ["undefined"],
      "40.config.escrows.17.includeInTotal": ["undefined"],
      "40.config.escrows.17.source": ["undefined"],
      "40.config.escrows.17.bridgedUsing": ["undefined"],
      "40.config.escrows.17.isHistorical": ["undefined"],
      "40.config.escrows.17.untilTimestamp": ["undefined"],
      "40.config.escrows.17.sharedEscrow": ["undefined"],
      "40.config.escrows.18.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.18.excludedTokens": ["undefined"],
      "40.config.escrows.18.premintedTokens": ["undefined"],
      "40.config.escrows.18.contract.name": ["undefined"],
      "40.config.escrows.18.contract.upgradeability": ["undefined"],
      "40.config.escrows.18.contract.upgradableBy": ["undefined"],
      "40.config.escrows.18.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.18.isUpcoming": ["undefined"],
      "40.config.escrows.18.includeInTotal": ["undefined"],
      "40.config.escrows.18.source": ["undefined"],
      "40.config.escrows.18.bridgedUsing": ["undefined"],
      "40.config.escrows.18.isHistorical": ["undefined"],
      "40.config.escrows.18.untilTimestamp": ["undefined"],
      "40.config.escrows.18.sharedEscrow": ["undefined"],
      "40.config.escrows.19.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.19.excludedTokens": ["undefined"],
      "40.config.escrows.19.premintedTokens": ["undefined"],
      "40.config.escrows.19.contract.name": ["undefined"],
      "40.config.escrows.19.contract.upgradeability": ["undefined"],
      "40.config.escrows.19.contract.upgradableBy": ["undefined"],
      "40.config.escrows.19.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.19.isUpcoming": ["undefined"],
      "40.config.escrows.19.includeInTotal": ["undefined"],
      "40.config.escrows.19.source": ["undefined"],
      "40.config.escrows.19.bridgedUsing": ["undefined"],
      "40.config.escrows.19.isHistorical": ["undefined"],
      "40.config.escrows.19.untilTimestamp": ["undefined"],
      "40.config.escrows.19.sharedEscrow": ["undefined"],
      "40.config.escrows.20.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.20.excludedTokens": ["undefined"],
      "40.config.escrows.20.premintedTokens": ["undefined"],
      "40.config.escrows.20.contract.name": ["undefined"],
      "40.config.escrows.20.contract.upgradeability": ["undefined"],
      "40.config.escrows.20.contract.upgradableBy": ["undefined"],
      "40.config.escrows.20.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.20.isUpcoming": ["undefined"],
      "40.config.escrows.20.includeInTotal": ["undefined"],
      "40.config.escrows.20.source": ["undefined"],
      "40.config.escrows.20.bridgedUsing": ["undefined"],
      "40.config.escrows.20.isHistorical": ["undefined"],
      "40.config.escrows.20.untilTimestamp": ["undefined"],
      "40.config.escrows.20.sharedEscrow": ["undefined"],
      "40.config.escrows.21.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.21.excludedTokens": ["undefined"],
      "40.config.escrows.21.premintedTokens": ["undefined"],
      "40.config.escrows.21.contract.name": ["undefined"],
      "40.config.escrows.21.contract.upgradeability": ["undefined"],
      "40.config.escrows.21.contract.upgradableBy": ["undefined"],
      "40.config.escrows.21.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.21.isUpcoming": ["undefined"],
      "40.config.escrows.21.includeInTotal": ["undefined"],
      "40.config.escrows.21.source": ["undefined"],
      "40.config.escrows.21.bridgedUsing": ["undefined"],
      "40.config.escrows.21.isHistorical": ["undefined"],
      "40.config.escrows.21.untilTimestamp": ["undefined"],
      "40.config.escrows.21.sharedEscrow": ["undefined"],
      "40.config.escrows.22.sinceTimestamp": [["custom", "UnixTime"]],
      "40.config.escrows.22.excludedTokens": ["undefined"],
      "40.config.escrows.22.premintedTokens": ["undefined"],
      "40.config.escrows.22.contract.name": ["undefined"],
      "40.config.escrows.22.contract.upgradeability": ["undefined"],
      "40.config.escrows.22.contract.upgradableBy": ["undefined"],
      "40.config.escrows.22.contract.upgradeDelay": ["undefined"],
      "40.config.escrows.22.isUpcoming": ["undefined"],
      "40.config.escrows.22.includeInTotal": ["undefined"],
      "40.config.escrows.22.source": ["undefined"],
      "40.config.escrows.22.bridgedUsing": ["undefined"],
      "40.config.escrows.22.isHistorical": ["undefined"],
      "40.config.escrows.22.untilTimestamp": ["undefined"],
      "40.config.escrows.22.sharedEscrow": ["undefined"],
      "40.contracts.0.upgradeability": ["undefined"],
      "40.contracts.1.upgradeability": ["undefined"],
      "40.contracts.2.upgradeability": ["undefined"],
      "40.contracts.addresses.0.upgradeability": ["undefined"],
      "40.contracts.addresses.1.upgradeability": ["undefined"],
      "40.contracts.addresses.2.upgradeability": ["undefined"],
      "40.contracts.addresses.3.upgradeability": ["undefined"],
      "40.permissions.0.references": ["undefined"],
      "40.permissions.1.references": ["undefined"],
      "41.createdAt": [["custom", "UnixTime"]],
      "41.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "41.contracts.addresses.0.upgradeability": ["undefined"],
      "41.contracts.addresses.1.upgradeability": ["undefined"],
      "41.contracts.addresses.2.upgradeability": ["undefined"],
      "41.contracts.addresses.3.upgradeability": ["undefined"],
      "41.contracts.addresses.4.upgradeability": ["undefined"],
      "41.permissions.0.references": ["undefined"],
      "41.permissions.1.references": ["undefined"],
      "42.createdAt": [["custom", "UnixTime"]],
      "42.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "42.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "42.permissions.0.references": ["undefined"],
      "43.createdAt": [["custom", "UnixTime"]],
      "43.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.0.excludedTokens": ["undefined"],
      "43.config.escrows.0.premintedTokens": ["undefined"],
      "43.config.escrows.0.contract.name": ["undefined"],
      "43.config.escrows.0.contract.upgradeability": ["undefined"],
      "43.config.escrows.0.contract.description": ["undefined"],
      "43.config.escrows.0.contract.upgradableBy": ["undefined"],
      "43.config.escrows.0.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.0.isUpcoming": ["undefined"],
      "43.config.escrows.0.source": ["undefined"],
      "43.config.escrows.0.bridgedUsing": ["undefined"],
      "43.config.escrows.0.isHistorical": ["undefined"],
      "43.config.escrows.0.untilTimestamp": ["undefined"],
      "43.config.escrows.0.sharedEscrow": ["undefined"],
      "43.config.escrows.1.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.1.excludedTokens": ["undefined"],
      "43.config.escrows.1.premintedTokens": ["undefined"],
      "43.config.escrows.1.contract.name": ["undefined"],
      "43.config.escrows.1.contract.upgradeability": ["undefined"],
      "43.config.escrows.1.contract.description": ["undefined"],
      "43.config.escrows.1.contract.upgradableBy": ["undefined"],
      "43.config.escrows.1.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.1.isUpcoming": ["undefined"],
      "43.config.escrows.1.source": ["undefined"],
      "43.config.escrows.1.bridgedUsing": ["undefined"],
      "43.config.escrows.1.isHistorical": ["undefined"],
      "43.config.escrows.1.untilTimestamp": ["undefined"],
      "43.config.escrows.1.sharedEscrow": ["undefined"],
      "43.config.escrows.2.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.2.excludedTokens": ["undefined"],
      "43.config.escrows.2.premintedTokens": ["undefined"],
      "43.config.escrows.2.contract.name": ["undefined"],
      "43.config.escrows.2.contract.upgradeability": ["undefined"],
      "43.config.escrows.2.contract.description": ["undefined"],
      "43.config.escrows.2.contract.upgradableBy": ["undefined"],
      "43.config.escrows.2.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.2.isUpcoming": ["undefined"],
      "43.config.escrows.2.source": ["undefined"],
      "43.config.escrows.2.bridgedUsing": ["undefined"],
      "43.config.escrows.2.isHistorical": ["undefined"],
      "43.config.escrows.2.untilTimestamp": ["undefined"],
      "43.config.escrows.2.sharedEscrow": ["undefined"],
      "43.config.escrows.3.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.3.excludedTokens": ["undefined"],
      "43.config.escrows.3.premintedTokens": ["undefined"],
      "43.config.escrows.3.contract.name": ["undefined"],
      "43.config.escrows.3.contract.upgradeability": ["undefined"],
      "43.config.escrows.3.contract.description": ["undefined"],
      "43.config.escrows.3.contract.upgradableBy": ["undefined"],
      "43.config.escrows.3.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.3.isUpcoming": ["undefined"],
      "43.config.escrows.3.source": ["undefined"],
      "43.config.escrows.3.bridgedUsing": ["undefined"],
      "43.config.escrows.3.isHistorical": ["undefined"],
      "43.config.escrows.3.untilTimestamp": ["undefined"],
      "43.config.escrows.3.sharedEscrow": ["undefined"],
      "43.config.escrows.4.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.4.excludedTokens": ["undefined"],
      "43.config.escrows.4.premintedTokens": ["undefined"],
      "43.config.escrows.4.contract.name": ["undefined"],
      "43.config.escrows.4.contract.upgradeability": ["undefined"],
      "43.config.escrows.4.contract.description": ["undefined"],
      "43.config.escrows.4.contract.upgradableBy": ["undefined"],
      "43.config.escrows.4.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.4.isUpcoming": ["undefined"],
      "43.config.escrows.4.source": ["undefined"],
      "43.config.escrows.4.bridgedUsing": ["undefined"],
      "43.config.escrows.4.isHistorical": ["undefined"],
      "43.config.escrows.4.untilTimestamp": ["undefined"],
      "43.config.escrows.4.sharedEscrow": ["undefined"],
      "43.config.escrows.5.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.5.excludedTokens": ["undefined"],
      "43.config.escrows.5.premintedTokens": ["undefined"],
      "43.config.escrows.5.contract.name": ["undefined"],
      "43.config.escrows.5.contract.upgradeability": ["undefined"],
      "43.config.escrows.5.contract.description": ["undefined"],
      "43.config.escrows.5.contract.upgradableBy": ["undefined"],
      "43.config.escrows.5.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.5.isUpcoming": ["undefined"],
      "43.config.escrows.5.source": ["undefined"],
      "43.config.escrows.5.bridgedUsing": ["undefined"],
      "43.config.escrows.5.isHistorical": ["undefined"],
      "43.config.escrows.5.untilTimestamp": ["undefined"],
      "43.config.escrows.5.sharedEscrow": ["undefined"],
      "43.config.escrows.6.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.6.excludedTokens": ["undefined"],
      "43.config.escrows.6.premintedTokens": ["undefined"],
      "43.config.escrows.6.contract.name": ["undefined"],
      "43.config.escrows.6.contract.upgradeability": ["undefined"],
      "43.config.escrows.6.contract.description": ["undefined"],
      "43.config.escrows.6.contract.upgradableBy": ["undefined"],
      "43.config.escrows.6.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.6.isUpcoming": ["undefined"],
      "43.config.escrows.6.source": ["undefined"],
      "43.config.escrows.6.bridgedUsing": ["undefined"],
      "43.config.escrows.6.isHistorical": ["undefined"],
      "43.config.escrows.6.untilTimestamp": ["undefined"],
      "43.config.escrows.6.sharedEscrow": ["undefined"],
      "43.config.escrows.7.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.7.excludedTokens": ["undefined"],
      "43.config.escrows.7.premintedTokens": ["undefined"],
      "43.config.escrows.7.contract.name": ["undefined"],
      "43.config.escrows.7.contract.upgradeability": ["undefined"],
      "43.config.escrows.7.contract.description": ["undefined"],
      "43.config.escrows.7.contract.upgradableBy": ["undefined"],
      "43.config.escrows.7.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.7.isUpcoming": ["undefined"],
      "43.config.escrows.7.source": ["undefined"],
      "43.config.escrows.7.bridgedUsing": ["undefined"],
      "43.config.escrows.7.isHistorical": ["undefined"],
      "43.config.escrows.7.untilTimestamp": ["undefined"],
      "43.config.escrows.7.sharedEscrow": ["undefined"],
      "43.config.escrows.8.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.8.excludedTokens": ["undefined"],
      "43.config.escrows.8.premintedTokens": ["undefined"],
      "43.config.escrows.8.contract.name": ["undefined"],
      "43.config.escrows.8.contract.upgradeability": ["undefined"],
      "43.config.escrows.8.contract.description": ["undefined"],
      "43.config.escrows.8.contract.upgradableBy": ["undefined"],
      "43.config.escrows.8.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.8.isUpcoming": ["undefined"],
      "43.config.escrows.8.source": ["undefined"],
      "43.config.escrows.8.bridgedUsing": ["undefined"],
      "43.config.escrows.8.isHistorical": ["undefined"],
      "43.config.escrows.8.untilTimestamp": ["undefined"],
      "43.config.escrows.8.sharedEscrow": ["undefined"],
      "43.config.escrows.9.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.9.excludedTokens": ["undefined"],
      "43.config.escrows.9.premintedTokens": ["undefined"],
      "43.config.escrows.9.contract.name": ["undefined"],
      "43.config.escrows.9.contract.upgradeability": ["undefined"],
      "43.config.escrows.9.contract.description": ["undefined"],
      "43.config.escrows.9.contract.upgradableBy": ["undefined"],
      "43.config.escrows.9.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.9.isUpcoming": ["undefined"],
      "43.config.escrows.9.source": ["undefined"],
      "43.config.escrows.9.bridgedUsing": ["undefined"],
      "43.config.escrows.9.isHistorical": ["undefined"],
      "43.config.escrows.9.untilTimestamp": ["undefined"],
      "43.config.escrows.9.sharedEscrow": ["undefined"],
      "43.config.escrows.10.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.10.excludedTokens": ["undefined"],
      "43.config.escrows.10.premintedTokens": ["undefined"],
      "43.config.escrows.10.contract.name": ["undefined"],
      "43.config.escrows.10.contract.upgradeability": ["undefined"],
      "43.config.escrows.10.contract.description": ["undefined"],
      "43.config.escrows.10.contract.upgradableBy": ["undefined"],
      "43.config.escrows.10.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.10.isUpcoming": ["undefined"],
      "43.config.escrows.10.source": ["undefined"],
      "43.config.escrows.10.bridgedUsing": ["undefined"],
      "43.config.escrows.10.isHistorical": ["undefined"],
      "43.config.escrows.10.untilTimestamp": ["undefined"],
      "43.config.escrows.10.sharedEscrow": ["undefined"],
      "43.config.escrows.11.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.11.excludedTokens": ["undefined"],
      "43.config.escrows.11.premintedTokens": ["undefined"],
      "43.config.escrows.11.contract.name": ["undefined"],
      "43.config.escrows.11.contract.upgradeability": ["undefined"],
      "43.config.escrows.11.contract.description": ["undefined"],
      "43.config.escrows.11.contract.upgradableBy": ["undefined"],
      "43.config.escrows.11.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.11.isUpcoming": ["undefined"],
      "43.config.escrows.11.source": ["undefined"],
      "43.config.escrows.11.bridgedUsing": ["undefined"],
      "43.config.escrows.11.isHistorical": ["undefined"],
      "43.config.escrows.11.untilTimestamp": ["undefined"],
      "43.config.escrows.11.sharedEscrow": ["undefined"],
      "43.config.escrows.12.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.12.excludedTokens": ["undefined"],
      "43.config.escrows.12.premintedTokens": ["undefined"],
      "43.config.escrows.12.contract.name": ["undefined"],
      "43.config.escrows.12.contract.upgradeability": ["undefined"],
      "43.config.escrows.12.contract.description": ["undefined"],
      "43.config.escrows.12.contract.upgradableBy": ["undefined"],
      "43.config.escrows.12.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.12.isUpcoming": ["undefined"],
      "43.config.escrows.12.source": ["undefined"],
      "43.config.escrows.12.bridgedUsing": ["undefined"],
      "43.config.escrows.12.isHistorical": ["undefined"],
      "43.config.escrows.12.untilTimestamp": ["undefined"],
      "43.config.escrows.12.sharedEscrow": ["undefined"],
      "43.config.escrows.13.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.13.excludedTokens": ["undefined"],
      "43.config.escrows.13.premintedTokens": ["undefined"],
      "43.config.escrows.13.contract.name": ["undefined"],
      "43.config.escrows.13.contract.upgradeability": ["undefined"],
      "43.config.escrows.13.contract.description": ["undefined"],
      "43.config.escrows.13.contract.upgradableBy": ["undefined"],
      "43.config.escrows.13.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.13.isUpcoming": ["undefined"],
      "43.config.escrows.13.source": ["undefined"],
      "43.config.escrows.13.bridgedUsing": ["undefined"],
      "43.config.escrows.13.isHistorical": ["undefined"],
      "43.config.escrows.13.untilTimestamp": ["undefined"],
      "43.config.escrows.13.sharedEscrow": ["undefined"],
      "43.config.escrows.14.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.14.excludedTokens": ["undefined"],
      "43.config.escrows.14.premintedTokens": ["undefined"],
      "43.config.escrows.14.contract.name": ["undefined"],
      "43.config.escrows.14.contract.upgradeability": ["undefined"],
      "43.config.escrows.14.contract.description": ["undefined"],
      "43.config.escrows.14.contract.upgradableBy": ["undefined"],
      "43.config.escrows.14.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.14.isUpcoming": ["undefined"],
      "43.config.escrows.14.source": ["undefined"],
      "43.config.escrows.14.bridgedUsing": ["undefined"],
      "43.config.escrows.14.isHistorical": ["undefined"],
      "43.config.escrows.14.untilTimestamp": ["undefined"],
      "43.config.escrows.14.sharedEscrow": ["undefined"],
      "43.config.escrows.15.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.15.excludedTokens": ["undefined"],
      "43.config.escrows.15.premintedTokens": ["undefined"],
      "43.config.escrows.15.contract.name": ["undefined"],
      "43.config.escrows.15.contract.upgradeability": ["undefined"],
      "43.config.escrows.15.contract.description": ["undefined"],
      "43.config.escrows.15.contract.upgradableBy": ["undefined"],
      "43.config.escrows.15.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.15.isUpcoming": ["undefined"],
      "43.config.escrows.15.source": ["undefined"],
      "43.config.escrows.15.bridgedUsing": ["undefined"],
      "43.config.escrows.15.isHistorical": ["undefined"],
      "43.config.escrows.15.untilTimestamp": ["undefined"],
      "43.config.escrows.15.sharedEscrow": ["undefined"],
      "43.config.escrows.16.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.16.excludedTokens": ["undefined"],
      "43.config.escrows.16.premintedTokens": ["undefined"],
      "43.config.escrows.16.contract.name": ["undefined"],
      "43.config.escrows.16.contract.upgradeability": ["undefined"],
      "43.config.escrows.16.contract.description": ["undefined"],
      "43.config.escrows.16.contract.upgradableBy": ["undefined"],
      "43.config.escrows.16.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.16.isUpcoming": ["undefined"],
      "43.config.escrows.16.source": ["undefined"],
      "43.config.escrows.16.bridgedUsing": ["undefined"],
      "43.config.escrows.16.isHistorical": ["undefined"],
      "43.config.escrows.16.untilTimestamp": ["undefined"],
      "43.config.escrows.16.sharedEscrow": ["undefined"],
      "43.config.escrows.17.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.17.excludedTokens": ["undefined"],
      "43.config.escrows.17.premintedTokens": ["undefined"],
      "43.config.escrows.17.contract.name": ["undefined"],
      "43.config.escrows.17.contract.upgradeability": ["undefined"],
      "43.config.escrows.17.contract.description": ["undefined"],
      "43.config.escrows.17.contract.upgradableBy": ["undefined"],
      "43.config.escrows.17.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.17.isUpcoming": ["undefined"],
      "43.config.escrows.17.source": ["undefined"],
      "43.config.escrows.17.bridgedUsing": ["undefined"],
      "43.config.escrows.17.isHistorical": ["undefined"],
      "43.config.escrows.17.untilTimestamp": ["undefined"],
      "43.config.escrows.17.sharedEscrow": ["undefined"],
      "43.config.escrows.18.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.18.excludedTokens": ["undefined"],
      "43.config.escrows.18.premintedTokens": ["undefined"],
      "43.config.escrows.18.contract.name": ["undefined"],
      "43.config.escrows.18.contract.upgradeability": ["undefined"],
      "43.config.escrows.18.contract.description": ["undefined"],
      "43.config.escrows.18.contract.upgradableBy": ["undefined"],
      "43.config.escrows.18.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.18.isUpcoming": ["undefined"],
      "43.config.escrows.18.source": ["undefined"],
      "43.config.escrows.18.bridgedUsing": ["undefined"],
      "43.config.escrows.18.isHistorical": ["undefined"],
      "43.config.escrows.18.untilTimestamp": ["undefined"],
      "43.config.escrows.18.sharedEscrow": ["undefined"],
      "43.config.escrows.19.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.19.excludedTokens": ["undefined"],
      "43.config.escrows.19.premintedTokens": ["undefined"],
      "43.config.escrows.19.contract.name": ["undefined"],
      "43.config.escrows.19.contract.upgradeability": ["undefined"],
      "43.config.escrows.19.contract.description": ["undefined"],
      "43.config.escrows.19.contract.upgradableBy": ["undefined"],
      "43.config.escrows.19.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.19.isUpcoming": ["undefined"],
      "43.config.escrows.19.source": ["undefined"],
      "43.config.escrows.19.bridgedUsing": ["undefined"],
      "43.config.escrows.19.isHistorical": ["undefined"],
      "43.config.escrows.19.untilTimestamp": ["undefined"],
      "43.config.escrows.19.sharedEscrow": ["undefined"],
      "43.config.escrows.20.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.20.excludedTokens": ["undefined"],
      "43.config.escrows.20.premintedTokens": ["undefined"],
      "43.config.escrows.20.contract.name": ["undefined"],
      "43.config.escrows.20.contract.upgradeability": ["undefined"],
      "43.config.escrows.20.contract.description": ["undefined"],
      "43.config.escrows.20.contract.upgradableBy": ["undefined"],
      "43.config.escrows.20.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.20.isUpcoming": ["undefined"],
      "43.config.escrows.20.source": ["undefined"],
      "43.config.escrows.20.bridgedUsing": ["undefined"],
      "43.config.escrows.20.isHistorical": ["undefined"],
      "43.config.escrows.20.untilTimestamp": ["undefined"],
      "43.config.escrows.20.sharedEscrow": ["undefined"],
      "43.config.escrows.21.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.21.excludedTokens": ["undefined"],
      "43.config.escrows.21.premintedTokens": ["undefined"],
      "43.config.escrows.21.contract.name": ["undefined"],
      "43.config.escrows.21.contract.upgradeability": ["undefined"],
      "43.config.escrows.21.contract.description": ["undefined"],
      "43.config.escrows.21.contract.upgradableBy": ["undefined"],
      "43.config.escrows.21.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.21.isUpcoming": ["undefined"],
      "43.config.escrows.21.source": ["undefined"],
      "43.config.escrows.21.bridgedUsing": ["undefined"],
      "43.config.escrows.21.isHistorical": ["undefined"],
      "43.config.escrows.21.untilTimestamp": ["undefined"],
      "43.config.escrows.21.sharedEscrow": ["undefined"],
      "43.config.escrows.22.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.22.excludedTokens": ["undefined"],
      "43.config.escrows.22.premintedTokens": ["undefined"],
      "43.config.escrows.22.contract.name": ["undefined"],
      "43.config.escrows.22.contract.upgradeability": ["undefined"],
      "43.config.escrows.22.contract.description": ["undefined"],
      "43.config.escrows.22.contract.upgradableBy": ["undefined"],
      "43.config.escrows.22.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.22.isUpcoming": ["undefined"],
      "43.config.escrows.22.source": ["undefined"],
      "43.config.escrows.22.bridgedUsing": ["undefined"],
      "43.config.escrows.22.isHistorical": ["undefined"],
      "43.config.escrows.22.untilTimestamp": ["undefined"],
      "43.config.escrows.22.sharedEscrow": ["undefined"],
      "43.config.escrows.23.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.23.excludedTokens": ["undefined"],
      "43.config.escrows.23.premintedTokens": ["undefined"],
      "43.config.escrows.23.contract.name": ["undefined"],
      "43.config.escrows.23.contract.upgradeability": ["undefined"],
      "43.config.escrows.23.contract.description": ["undefined"],
      "43.config.escrows.23.contract.upgradableBy": ["undefined"],
      "43.config.escrows.23.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.23.isUpcoming": ["undefined"],
      "43.config.escrows.23.source": ["undefined"],
      "43.config.escrows.23.bridgedUsing": ["undefined"],
      "43.config.escrows.23.isHistorical": ["undefined"],
      "43.config.escrows.23.untilTimestamp": ["undefined"],
      "43.config.escrows.23.sharedEscrow": ["undefined"],
      "43.config.escrows.24.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.24.excludedTokens": ["undefined"],
      "43.config.escrows.24.premintedTokens": ["undefined"],
      "43.config.escrows.24.contract.name": ["undefined"],
      "43.config.escrows.24.contract.upgradeability": ["undefined"],
      "43.config.escrows.24.contract.description": ["undefined"],
      "43.config.escrows.24.contract.upgradableBy": ["undefined"],
      "43.config.escrows.24.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.24.isUpcoming": ["undefined"],
      "43.config.escrows.24.source": ["undefined"],
      "43.config.escrows.24.bridgedUsing": ["undefined"],
      "43.config.escrows.24.isHistorical": ["undefined"],
      "43.config.escrows.24.untilTimestamp": ["undefined"],
      "43.config.escrows.24.sharedEscrow": ["undefined"],
      "43.config.escrows.25.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.25.excludedTokens": ["undefined"],
      "43.config.escrows.25.premintedTokens": ["undefined"],
      "43.config.escrows.25.contract.name": ["undefined"],
      "43.config.escrows.25.contract.upgradeability": ["undefined"],
      "43.config.escrows.25.contract.description": ["undefined"],
      "43.config.escrows.25.contract.upgradableBy": ["undefined"],
      "43.config.escrows.25.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.25.isUpcoming": ["undefined"],
      "43.config.escrows.25.source": ["undefined"],
      "43.config.escrows.25.bridgedUsing": ["undefined"],
      "43.config.escrows.25.isHistorical": ["undefined"],
      "43.config.escrows.25.untilTimestamp": ["undefined"],
      "43.config.escrows.25.sharedEscrow": ["undefined"],
      "43.config.escrows.26.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.26.excludedTokens": ["undefined"],
      "43.config.escrows.26.premintedTokens": ["undefined"],
      "43.config.escrows.26.contract.name": ["undefined"],
      "43.config.escrows.26.contract.upgradeability": ["undefined"],
      "43.config.escrows.26.contract.description": ["undefined"],
      "43.config.escrows.26.contract.upgradableBy": ["undefined"],
      "43.config.escrows.26.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.26.isUpcoming": ["undefined"],
      "43.config.escrows.26.source": ["undefined"],
      "43.config.escrows.26.bridgedUsing": ["undefined"],
      "43.config.escrows.26.isHistorical": ["undefined"],
      "43.config.escrows.26.untilTimestamp": ["undefined"],
      "43.config.escrows.26.sharedEscrow": ["undefined"],
      "43.config.escrows.27.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.27.excludedTokens": ["undefined"],
      "43.config.escrows.27.premintedTokens": ["undefined"],
      "43.config.escrows.27.contract.name": ["undefined"],
      "43.config.escrows.27.contract.upgradeability": ["undefined"],
      "43.config.escrows.27.contract.description": ["undefined"],
      "43.config.escrows.27.contract.upgradableBy": ["undefined"],
      "43.config.escrows.27.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.27.isUpcoming": ["undefined"],
      "43.config.escrows.27.source": ["undefined"],
      "43.config.escrows.27.bridgedUsing": ["undefined"],
      "43.config.escrows.27.isHistorical": ["undefined"],
      "43.config.escrows.27.untilTimestamp": ["undefined"],
      "43.config.escrows.27.sharedEscrow": ["undefined"],
      "43.config.escrows.28.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.28.excludedTokens": ["undefined"],
      "43.config.escrows.28.premintedTokens": ["undefined"],
      "43.config.escrows.28.contract.name": ["undefined"],
      "43.config.escrows.28.contract.upgradeability": ["undefined"],
      "43.config.escrows.28.contract.description": ["undefined"],
      "43.config.escrows.28.contract.upgradableBy": ["undefined"],
      "43.config.escrows.28.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.28.isUpcoming": ["undefined"],
      "43.config.escrows.28.source": ["undefined"],
      "43.config.escrows.28.bridgedUsing": ["undefined"],
      "43.config.escrows.28.isHistorical": ["undefined"],
      "43.config.escrows.28.untilTimestamp": ["undefined"],
      "43.config.escrows.28.sharedEscrow": ["undefined"],
      "43.config.escrows.29.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.29.excludedTokens": ["undefined"],
      "43.config.escrows.29.premintedTokens": ["undefined"],
      "43.config.escrows.29.contract.name": ["undefined"],
      "43.config.escrows.29.contract.upgradeability": ["undefined"],
      "43.config.escrows.29.contract.description": ["undefined"],
      "43.config.escrows.29.contract.upgradableBy": ["undefined"],
      "43.config.escrows.29.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.29.isUpcoming": ["undefined"],
      "43.config.escrows.29.source": ["undefined"],
      "43.config.escrows.29.bridgedUsing": ["undefined"],
      "43.config.escrows.29.isHistorical": ["undefined"],
      "43.config.escrows.29.untilTimestamp": ["undefined"],
      "43.config.escrows.29.sharedEscrow": ["undefined"],
      "43.config.escrows.30.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.30.excludedTokens": ["undefined"],
      "43.config.escrows.30.premintedTokens": ["undefined"],
      "43.config.escrows.30.contract.name": ["undefined"],
      "43.config.escrows.30.contract.upgradeability": ["undefined"],
      "43.config.escrows.30.contract.description": ["undefined"],
      "43.config.escrows.30.contract.upgradableBy": ["undefined"],
      "43.config.escrows.30.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.30.isUpcoming": ["undefined"],
      "43.config.escrows.30.source": ["undefined"],
      "43.config.escrows.30.bridgedUsing": ["undefined"],
      "43.config.escrows.30.isHistorical": ["undefined"],
      "43.config.escrows.30.untilTimestamp": ["undefined"],
      "43.config.escrows.30.sharedEscrow": ["undefined"],
      "43.config.escrows.31.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.31.excludedTokens": ["undefined"],
      "43.config.escrows.31.premintedTokens": ["undefined"],
      "43.config.escrows.31.contract.name": ["undefined"],
      "43.config.escrows.31.contract.upgradeability": ["undefined"],
      "43.config.escrows.31.contract.description": ["undefined"],
      "43.config.escrows.31.contract.upgradableBy": ["undefined"],
      "43.config.escrows.31.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.31.isUpcoming": ["undefined"],
      "43.config.escrows.31.source": ["undefined"],
      "43.config.escrows.31.bridgedUsing": ["undefined"],
      "43.config.escrows.31.isHistorical": ["undefined"],
      "43.config.escrows.31.untilTimestamp": ["undefined"],
      "43.config.escrows.31.sharedEscrow": ["undefined"],
      "43.config.escrows.32.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.32.excludedTokens": ["undefined"],
      "43.config.escrows.32.premintedTokens": ["undefined"],
      "43.config.escrows.32.contract.name": ["undefined"],
      "43.config.escrows.32.contract.upgradeability": ["undefined"],
      "43.config.escrows.32.contract.description": ["undefined"],
      "43.config.escrows.32.contract.upgradableBy": ["undefined"],
      "43.config.escrows.32.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.32.isUpcoming": ["undefined"],
      "43.config.escrows.32.source": ["undefined"],
      "43.config.escrows.32.bridgedUsing": ["undefined"],
      "43.config.escrows.32.isHistorical": ["undefined"],
      "43.config.escrows.32.untilTimestamp": ["undefined"],
      "43.config.escrows.32.sharedEscrow": ["undefined"],
      "43.config.escrows.33.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.33.excludedTokens": ["undefined"],
      "43.config.escrows.33.premintedTokens": ["undefined"],
      "43.config.escrows.33.contract.name": ["undefined"],
      "43.config.escrows.33.contract.upgradeability": ["undefined"],
      "43.config.escrows.33.contract.description": ["undefined"],
      "43.config.escrows.33.contract.upgradableBy": ["undefined"],
      "43.config.escrows.33.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.33.isUpcoming": ["undefined"],
      "43.config.escrows.33.source": ["undefined"],
      "43.config.escrows.33.bridgedUsing": ["undefined"],
      "43.config.escrows.33.isHistorical": ["undefined"],
      "43.config.escrows.33.untilTimestamp": ["undefined"],
      "43.config.escrows.33.sharedEscrow": ["undefined"],
      "43.config.escrows.34.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.34.excludedTokens": ["undefined"],
      "43.config.escrows.34.premintedTokens": ["undefined"],
      "43.config.escrows.34.contract.name": ["undefined"],
      "43.config.escrows.34.contract.upgradeability": ["undefined"],
      "43.config.escrows.34.contract.description": ["undefined"],
      "43.config.escrows.34.contract.upgradableBy": ["undefined"],
      "43.config.escrows.34.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.34.isUpcoming": ["undefined"],
      "43.config.escrows.34.source": ["undefined"],
      "43.config.escrows.34.bridgedUsing": ["undefined"],
      "43.config.escrows.34.isHistorical": ["undefined"],
      "43.config.escrows.34.untilTimestamp": ["undefined"],
      "43.config.escrows.34.sharedEscrow": ["undefined"],
      "43.config.escrows.35.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.35.excludedTokens": ["undefined"],
      "43.config.escrows.35.premintedTokens": ["undefined"],
      "43.config.escrows.35.contract.name": ["undefined"],
      "43.config.escrows.35.contract.upgradeability": ["undefined"],
      "43.config.escrows.35.contract.description": ["undefined"],
      "43.config.escrows.35.contract.upgradableBy": ["undefined"],
      "43.config.escrows.35.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.35.isUpcoming": ["undefined"],
      "43.config.escrows.35.source": ["undefined"],
      "43.config.escrows.35.bridgedUsing": ["undefined"],
      "43.config.escrows.35.isHistorical": ["undefined"],
      "43.config.escrows.35.untilTimestamp": ["undefined"],
      "43.config.escrows.35.sharedEscrow": ["undefined"],
      "43.config.escrows.36.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.36.excludedTokens": ["undefined"],
      "43.config.escrows.36.premintedTokens": ["undefined"],
      "43.config.escrows.36.contract.name": ["undefined"],
      "43.config.escrows.36.contract.upgradeability": ["undefined"],
      "43.config.escrows.36.contract.description": ["undefined"],
      "43.config.escrows.36.contract.upgradableBy": ["undefined"],
      "43.config.escrows.36.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.36.isUpcoming": ["undefined"],
      "43.config.escrows.36.source": ["undefined"],
      "43.config.escrows.36.bridgedUsing": ["undefined"],
      "43.config.escrows.36.isHistorical": ["undefined"],
      "43.config.escrows.36.untilTimestamp": ["undefined"],
      "43.config.escrows.36.sharedEscrow": ["undefined"],
      "43.config.escrows.37.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.37.excludedTokens": ["undefined"],
      "43.config.escrows.37.premintedTokens": ["undefined"],
      "43.config.escrows.37.contract.name": ["undefined"],
      "43.config.escrows.37.contract.upgradeability": ["undefined"],
      "43.config.escrows.37.contract.description": ["undefined"],
      "43.config.escrows.37.contract.upgradableBy": ["undefined"],
      "43.config.escrows.37.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.37.isUpcoming": ["undefined"],
      "43.config.escrows.37.source": ["undefined"],
      "43.config.escrows.37.bridgedUsing": ["undefined"],
      "43.config.escrows.37.isHistorical": ["undefined"],
      "43.config.escrows.37.untilTimestamp": ["undefined"],
      "43.config.escrows.37.sharedEscrow": ["undefined"],
      "43.config.escrows.38.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.38.excludedTokens": ["undefined"],
      "43.config.escrows.38.premintedTokens": ["undefined"],
      "43.config.escrows.38.contract.name": ["undefined"],
      "43.config.escrows.38.contract.upgradeability": ["undefined"],
      "43.config.escrows.38.contract.description": ["undefined"],
      "43.config.escrows.38.contract.upgradableBy": ["undefined"],
      "43.config.escrows.38.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.38.isUpcoming": ["undefined"],
      "43.config.escrows.38.source": ["undefined"],
      "43.config.escrows.38.bridgedUsing": ["undefined"],
      "43.config.escrows.38.isHistorical": ["undefined"],
      "43.config.escrows.38.untilTimestamp": ["undefined"],
      "43.config.escrows.38.sharedEscrow": ["undefined"],
      "43.config.escrows.39.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.39.excludedTokens": ["undefined"],
      "43.config.escrows.39.premintedTokens": ["undefined"],
      "43.config.escrows.39.contract.name": ["undefined"],
      "43.config.escrows.39.contract.upgradeability": ["undefined"],
      "43.config.escrows.39.contract.description": ["undefined"],
      "43.config.escrows.39.contract.upgradableBy": ["undefined"],
      "43.config.escrows.39.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.39.isUpcoming": ["undefined"],
      "43.config.escrows.39.source": ["undefined"],
      "43.config.escrows.39.bridgedUsing": ["undefined"],
      "43.config.escrows.39.isHistorical": ["undefined"],
      "43.config.escrows.39.untilTimestamp": ["undefined"],
      "43.config.escrows.39.sharedEscrow": ["undefined"],
      "43.config.escrows.40.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.40.excludedTokens": ["undefined"],
      "43.config.escrows.40.premintedTokens": ["undefined"],
      "43.config.escrows.40.contract.name": ["undefined"],
      "43.config.escrows.40.contract.upgradeability": ["undefined"],
      "43.config.escrows.40.contract.description": ["undefined"],
      "43.config.escrows.40.contract.upgradableBy": ["undefined"],
      "43.config.escrows.40.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.40.isUpcoming": ["undefined"],
      "43.config.escrows.40.source": ["undefined"],
      "43.config.escrows.40.bridgedUsing": ["undefined"],
      "43.config.escrows.40.isHistorical": ["undefined"],
      "43.config.escrows.40.untilTimestamp": ["undefined"],
      "43.config.escrows.40.sharedEscrow": ["undefined"],
      "43.config.escrows.41.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.41.excludedTokens": ["undefined"],
      "43.config.escrows.41.premintedTokens": ["undefined"],
      "43.config.escrows.41.contract.name": ["undefined"],
      "43.config.escrows.41.contract.upgradeability": ["undefined"],
      "43.config.escrows.41.contract.description": ["undefined"],
      "43.config.escrows.41.contract.upgradableBy": ["undefined"],
      "43.config.escrows.41.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.41.isUpcoming": ["undefined"],
      "43.config.escrows.41.source": ["undefined"],
      "43.config.escrows.41.bridgedUsing": ["undefined"],
      "43.config.escrows.41.isHistorical": ["undefined"],
      "43.config.escrows.41.untilTimestamp": ["undefined"],
      "43.config.escrows.41.sharedEscrow": ["undefined"],
      "43.config.escrows.42.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.42.excludedTokens": ["undefined"],
      "43.config.escrows.42.premintedTokens": ["undefined"],
      "43.config.escrows.42.contract.name": ["undefined"],
      "43.config.escrows.42.contract.upgradeability": ["undefined"],
      "43.config.escrows.42.contract.description": ["undefined"],
      "43.config.escrows.42.contract.upgradableBy": ["undefined"],
      "43.config.escrows.42.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.42.isUpcoming": ["undefined"],
      "43.config.escrows.42.source": ["undefined"],
      "43.config.escrows.42.bridgedUsing": ["undefined"],
      "43.config.escrows.42.isHistorical": ["undefined"],
      "43.config.escrows.42.untilTimestamp": ["undefined"],
      "43.config.escrows.42.sharedEscrow": ["undefined"],
      "43.config.escrows.43.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.43.excludedTokens": ["undefined"],
      "43.config.escrows.43.premintedTokens": ["undefined"],
      "43.config.escrows.43.contract.name": ["undefined"],
      "43.config.escrows.43.contract.upgradeability": ["undefined"],
      "43.config.escrows.43.contract.description": ["undefined"],
      "43.config.escrows.43.contract.upgradableBy": ["undefined"],
      "43.config.escrows.43.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.43.isUpcoming": ["undefined"],
      "43.config.escrows.43.source": ["undefined"],
      "43.config.escrows.43.bridgedUsing": ["undefined"],
      "43.config.escrows.43.isHistorical": ["undefined"],
      "43.config.escrows.43.untilTimestamp": ["undefined"],
      "43.config.escrows.43.sharedEscrow": ["undefined"],
      "43.config.escrows.44.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.44.excludedTokens": ["undefined"],
      "43.config.escrows.44.premintedTokens": ["undefined"],
      "43.config.escrows.44.contract.name": ["undefined"],
      "43.config.escrows.44.contract.upgradeability": ["undefined"],
      "43.config.escrows.44.contract.description": ["undefined"],
      "43.config.escrows.44.contract.upgradableBy": ["undefined"],
      "43.config.escrows.44.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.44.isUpcoming": ["undefined"],
      "43.config.escrows.44.source": ["undefined"],
      "43.config.escrows.44.bridgedUsing": ["undefined"],
      "43.config.escrows.44.isHistorical": ["undefined"],
      "43.config.escrows.44.untilTimestamp": ["undefined"],
      "43.config.escrows.44.sharedEscrow": ["undefined"],
      "43.config.escrows.45.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.45.excludedTokens": ["undefined"],
      "43.config.escrows.45.premintedTokens": ["undefined"],
      "43.config.escrows.45.contract.name": ["undefined"],
      "43.config.escrows.45.contract.upgradeability": ["undefined"],
      "43.config.escrows.45.contract.description": ["undefined"],
      "43.config.escrows.45.contract.upgradableBy": ["undefined"],
      "43.config.escrows.45.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.45.isUpcoming": ["undefined"],
      "43.config.escrows.45.source": ["undefined"],
      "43.config.escrows.45.bridgedUsing": ["undefined"],
      "43.config.escrows.45.isHistorical": ["undefined"],
      "43.config.escrows.45.untilTimestamp": ["undefined"],
      "43.config.escrows.45.sharedEscrow": ["undefined"],
      "43.config.escrows.46.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.46.excludedTokens": ["undefined"],
      "43.config.escrows.46.premintedTokens": ["undefined"],
      "43.config.escrows.46.contract.name": ["undefined"],
      "43.config.escrows.46.contract.upgradeability": ["undefined"],
      "43.config.escrows.46.contract.description": ["undefined"],
      "43.config.escrows.46.contract.upgradableBy": ["undefined"],
      "43.config.escrows.46.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.46.isUpcoming": ["undefined"],
      "43.config.escrows.46.source": ["undefined"],
      "43.config.escrows.46.bridgedUsing": ["undefined"],
      "43.config.escrows.46.isHistorical": ["undefined"],
      "43.config.escrows.46.untilTimestamp": ["undefined"],
      "43.config.escrows.46.sharedEscrow": ["undefined"],
      "43.config.escrows.47.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.47.excludedTokens": ["undefined"],
      "43.config.escrows.47.premintedTokens": ["undefined"],
      "43.config.escrows.47.contract.name": ["undefined"],
      "43.config.escrows.47.contract.description": ["undefined"],
      "43.config.escrows.47.contract.upgradableBy": ["undefined"],
      "43.config.escrows.47.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.47.isUpcoming": ["undefined"],
      "43.config.escrows.47.source": ["undefined"],
      "43.config.escrows.47.bridgedUsing": ["undefined"],
      "43.config.escrows.47.isHistorical": ["undefined"],
      "43.config.escrows.47.untilTimestamp": ["undefined"],
      "43.config.escrows.47.sharedEscrow": ["undefined"],
      "43.config.escrows.48.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.48.excludedTokens": ["undefined"],
      "43.config.escrows.48.premintedTokens": ["undefined"],
      "43.config.escrows.48.contract.name": ["undefined"],
      "43.config.escrows.48.contract.upgradeability": ["undefined"],
      "43.config.escrows.48.contract.description": ["undefined"],
      "43.config.escrows.48.contract.upgradableBy": ["undefined"],
      "43.config.escrows.48.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.48.isUpcoming": ["undefined"],
      "43.config.escrows.48.source": ["undefined"],
      "43.config.escrows.48.bridgedUsing": ["undefined"],
      "43.config.escrows.48.isHistorical": ["undefined"],
      "43.config.escrows.48.untilTimestamp": ["undefined"],
      "43.config.escrows.48.sharedEscrow": ["undefined"],
      "43.config.escrows.49.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.49.excludedTokens": ["undefined"],
      "43.config.escrows.49.premintedTokens": ["undefined"],
      "43.config.escrows.49.contract.name": ["undefined"],
      "43.config.escrows.49.contract.upgradeability": ["undefined"],
      "43.config.escrows.49.contract.description": ["undefined"],
      "43.config.escrows.49.contract.upgradableBy": ["undefined"],
      "43.config.escrows.49.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.49.isUpcoming": ["undefined"],
      "43.config.escrows.49.source": ["undefined"],
      "43.config.escrows.49.bridgedUsing": ["undefined"],
      "43.config.escrows.49.isHistorical": ["undefined"],
      "43.config.escrows.49.untilTimestamp": ["undefined"],
      "43.config.escrows.49.sharedEscrow": ["undefined"],
      "43.config.escrows.50.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.50.excludedTokens": ["undefined"],
      "43.config.escrows.50.premintedTokens": ["undefined"],
      "43.config.escrows.50.contract.name": ["undefined"],
      "43.config.escrows.50.contract.upgradeability": ["undefined"],
      "43.config.escrows.50.contract.description": ["undefined"],
      "43.config.escrows.50.contract.upgradableBy": ["undefined"],
      "43.config.escrows.50.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.50.isUpcoming": ["undefined"],
      "43.config.escrows.50.source": ["undefined"],
      "43.config.escrows.50.bridgedUsing": ["undefined"],
      "43.config.escrows.50.isHistorical": ["undefined"],
      "43.config.escrows.50.untilTimestamp": ["undefined"],
      "43.config.escrows.50.sharedEscrow": ["undefined"],
      "43.config.escrows.51.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.51.excludedTokens": ["undefined"],
      "43.config.escrows.51.premintedTokens": ["undefined"],
      "43.config.escrows.51.contract.name": ["undefined"],
      "43.config.escrows.51.contract.upgradeability": ["undefined"],
      "43.config.escrows.51.contract.description": ["undefined"],
      "43.config.escrows.51.contract.upgradableBy": ["undefined"],
      "43.config.escrows.51.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.51.isUpcoming": ["undefined"],
      "43.config.escrows.51.source": ["undefined"],
      "43.config.escrows.51.bridgedUsing": ["undefined"],
      "43.config.escrows.51.isHistorical": ["undefined"],
      "43.config.escrows.51.untilTimestamp": ["undefined"],
      "43.config.escrows.51.sharedEscrow": ["undefined"],
      "43.config.escrows.52.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.52.excludedTokens": ["undefined"],
      "43.config.escrows.52.premintedTokens": ["undefined"],
      "43.config.escrows.52.contract.name": ["undefined"],
      "43.config.escrows.52.contract.upgradeability": ["undefined"],
      "43.config.escrows.52.contract.description": ["undefined"],
      "43.config.escrows.52.contract.upgradableBy": ["undefined"],
      "43.config.escrows.52.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.52.isUpcoming": ["undefined"],
      "43.config.escrows.52.source": ["undefined"],
      "43.config.escrows.52.bridgedUsing": ["undefined"],
      "43.config.escrows.52.isHistorical": ["undefined"],
      "43.config.escrows.52.untilTimestamp": ["undefined"],
      "43.config.escrows.52.sharedEscrow": ["undefined"],
      "43.config.escrows.53.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.53.excludedTokens": ["undefined"],
      "43.config.escrows.53.premintedTokens": ["undefined"],
      "43.config.escrows.53.contract.name": ["undefined"],
      "43.config.escrows.53.contract.upgradeability": ["undefined"],
      "43.config.escrows.53.contract.description": ["undefined"],
      "43.config.escrows.53.contract.upgradableBy": ["undefined"],
      "43.config.escrows.53.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.53.isUpcoming": ["undefined"],
      "43.config.escrows.53.source": ["undefined"],
      "43.config.escrows.53.bridgedUsing": ["undefined"],
      "43.config.escrows.53.isHistorical": ["undefined"],
      "43.config.escrows.53.untilTimestamp": ["undefined"],
      "43.config.escrows.53.sharedEscrow": ["undefined"],
      "43.config.escrows.54.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.54.excludedTokens": ["undefined"],
      "43.config.escrows.54.premintedTokens": ["undefined"],
      "43.config.escrows.54.contract.name": ["undefined"],
      "43.config.escrows.54.contract.upgradeability": ["undefined"],
      "43.config.escrows.54.contract.description": ["undefined"],
      "43.config.escrows.54.contract.upgradableBy": ["undefined"],
      "43.config.escrows.54.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.54.isUpcoming": ["undefined"],
      "43.config.escrows.54.source": ["undefined"],
      "43.config.escrows.54.bridgedUsing": ["undefined"],
      "43.config.escrows.54.isHistorical": ["undefined"],
      "43.config.escrows.54.untilTimestamp": ["undefined"],
      "43.config.escrows.54.sharedEscrow": ["undefined"],
      "43.config.escrows.55.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.55.excludedTokens": ["undefined"],
      "43.config.escrows.55.premintedTokens": ["undefined"],
      "43.config.escrows.55.contract.name": ["undefined"],
      "43.config.escrows.55.contract.upgradeability": ["undefined"],
      "43.config.escrows.55.contract.description": ["undefined"],
      "43.config.escrows.55.contract.upgradableBy": ["undefined"],
      "43.config.escrows.55.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.55.isUpcoming": ["undefined"],
      "43.config.escrows.55.source": ["undefined"],
      "43.config.escrows.55.bridgedUsing": ["undefined"],
      "43.config.escrows.55.isHistorical": ["undefined"],
      "43.config.escrows.55.untilTimestamp": ["undefined"],
      "43.config.escrows.55.sharedEscrow": ["undefined"],
      "43.config.escrows.56.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.56.excludedTokens": ["undefined"],
      "43.config.escrows.56.premintedTokens": ["undefined"],
      "43.config.escrows.56.contract.name": ["undefined"],
      "43.config.escrows.56.contract.upgradeability": ["undefined"],
      "43.config.escrows.56.contract.description": ["undefined"],
      "43.config.escrows.56.contract.upgradableBy": ["undefined"],
      "43.config.escrows.56.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.56.isUpcoming": ["undefined"],
      "43.config.escrows.56.source": ["undefined"],
      "43.config.escrows.56.bridgedUsing": ["undefined"],
      "43.config.escrows.56.isHistorical": ["undefined"],
      "43.config.escrows.56.untilTimestamp": ["undefined"],
      "43.config.escrows.56.sharedEscrow": ["undefined"],
      "43.config.escrows.57.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.57.excludedTokens": ["undefined"],
      "43.config.escrows.57.premintedTokens": ["undefined"],
      "43.config.escrows.57.contract.name": ["undefined"],
      "43.config.escrows.57.contract.upgradeability": ["undefined"],
      "43.config.escrows.57.contract.description": ["undefined"],
      "43.config.escrows.57.contract.upgradableBy": ["undefined"],
      "43.config.escrows.57.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.57.isUpcoming": ["undefined"],
      "43.config.escrows.57.source": ["undefined"],
      "43.config.escrows.57.bridgedUsing": ["undefined"],
      "43.config.escrows.57.isHistorical": ["undefined"],
      "43.config.escrows.57.untilTimestamp": ["undefined"],
      "43.config.escrows.57.sharedEscrow": ["undefined"],
      "43.config.escrows.58.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.58.excludedTokens": ["undefined"],
      "43.config.escrows.58.premintedTokens": ["undefined"],
      "43.config.escrows.58.contract.name": ["undefined"],
      "43.config.escrows.58.contract.upgradeability": ["undefined"],
      "43.config.escrows.58.contract.description": ["undefined"],
      "43.config.escrows.58.contract.upgradableBy": ["undefined"],
      "43.config.escrows.58.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.58.isUpcoming": ["undefined"],
      "43.config.escrows.58.source": ["undefined"],
      "43.config.escrows.58.bridgedUsing": ["undefined"],
      "43.config.escrows.58.isHistorical": ["undefined"],
      "43.config.escrows.58.untilTimestamp": ["undefined"],
      "43.config.escrows.58.sharedEscrow": ["undefined"],
      "43.config.escrows.59.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.59.excludedTokens": ["undefined"],
      "43.config.escrows.59.premintedTokens": ["undefined"],
      "43.config.escrows.59.contract.name": ["undefined"],
      "43.config.escrows.59.contract.upgradeability": ["undefined"],
      "43.config.escrows.59.contract.description": ["undefined"],
      "43.config.escrows.59.contract.upgradableBy": ["undefined"],
      "43.config.escrows.59.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.59.isUpcoming": ["undefined"],
      "43.config.escrows.59.source": ["undefined"],
      "43.config.escrows.59.bridgedUsing": ["undefined"],
      "43.config.escrows.59.isHistorical": ["undefined"],
      "43.config.escrows.59.untilTimestamp": ["undefined"],
      "43.config.escrows.59.sharedEscrow": ["undefined"],
      "43.config.escrows.60.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.60.excludedTokens": ["undefined"],
      "43.config.escrows.60.premintedTokens": ["undefined"],
      "43.config.escrows.60.contract.name": ["undefined"],
      "43.config.escrows.60.contract.upgradeability": ["undefined"],
      "43.config.escrows.60.contract.description": ["undefined"],
      "43.config.escrows.60.contract.upgradableBy": ["undefined"],
      "43.config.escrows.60.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.60.isUpcoming": ["undefined"],
      "43.config.escrows.60.source": ["undefined"],
      "43.config.escrows.60.bridgedUsing": ["undefined"],
      "43.config.escrows.60.isHistorical": ["undefined"],
      "43.config.escrows.60.untilTimestamp": ["undefined"],
      "43.config.escrows.60.sharedEscrow": ["undefined"],
      "43.config.escrows.61.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.61.excludedTokens": ["undefined"],
      "43.config.escrows.61.premintedTokens": ["undefined"],
      "43.config.escrows.61.contract.name": ["undefined"],
      "43.config.escrows.61.contract.upgradeability": ["undefined"],
      "43.config.escrows.61.contract.description": ["undefined"],
      "43.config.escrows.61.contract.upgradableBy": ["undefined"],
      "43.config.escrows.61.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.61.isUpcoming": ["undefined"],
      "43.config.escrows.61.source": ["undefined"],
      "43.config.escrows.61.bridgedUsing": ["undefined"],
      "43.config.escrows.61.isHistorical": ["undefined"],
      "43.config.escrows.61.untilTimestamp": ["undefined"],
      "43.config.escrows.61.sharedEscrow": ["undefined"],
      "43.config.escrows.62.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.62.excludedTokens": ["undefined"],
      "43.config.escrows.62.premintedTokens": ["undefined"],
      "43.config.escrows.62.contract.name": ["undefined"],
      "43.config.escrows.62.contract.upgradeability": ["undefined"],
      "43.config.escrows.62.contract.description": ["undefined"],
      "43.config.escrows.62.contract.upgradableBy": ["undefined"],
      "43.config.escrows.62.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.62.isUpcoming": ["undefined"],
      "43.config.escrows.62.source": ["undefined"],
      "43.config.escrows.62.bridgedUsing": ["undefined"],
      "43.config.escrows.62.isHistorical": ["undefined"],
      "43.config.escrows.62.untilTimestamp": ["undefined"],
      "43.config.escrows.62.sharedEscrow": ["undefined"],
      "43.config.escrows.63.sinceTimestamp": [["custom", "UnixTime"]],
      "43.config.escrows.63.excludedTokens": ["undefined"],
      "43.config.escrows.63.premintedTokens": ["undefined"],
      "43.config.escrows.63.contract.name": ["undefined"],
      "43.config.escrows.63.contract.upgradeability": ["undefined"],
      "43.config.escrows.63.contract.description": ["undefined"],
      "43.config.escrows.63.contract.upgradableBy": ["undefined"],
      "43.config.escrows.63.contract.upgradeDelay": ["undefined"],
      "43.config.escrows.63.isUpcoming": ["undefined"],
      "43.config.escrows.63.source": ["undefined"],
      "43.config.escrows.63.bridgedUsing": ["undefined"],
      "43.config.escrows.63.isHistorical": ["undefined"],
      "43.config.escrows.63.untilTimestamp": ["undefined"],
      "43.config.escrows.63.sharedEscrow": ["undefined"],
      "43.contracts.addresses.0.upgradeability": ["undefined"],
      "43.contracts.addresses.1.upgradeability": ["undefined"],
      "43.contracts.addresses.2.upgradeability": ["undefined"],
      "43.contracts.addresses.3.upgradeability": ["undefined"],
      "43.contracts.addresses.4.upgradeability": ["undefined"],
      "43.contracts.addresses.5.upgradeability": ["undefined"],
      "44.createdAt": [["custom", "UnixTime"]],
      "44.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "44.contracts.addresses.2.upgradeability": ["undefined"],
      "44.contracts.addresses.4.upgradeability": ["undefined"],
      "45.createdAt": [["custom", "UnixTime"]],
      "45.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "46.createdAt": [["custom", "UnixTime"]],
      "46.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "47.createdAt": [["custom", "UnixTime"]],
      "47.config.escrows.0.sinceTimestamp": [["custom", "UnixTime"]],
      "47.contracts.addresses.0.upgradeability": ["undefined"]
    },
    "referentialEqualities": {
      "0.riskView.sourceUpgradeability": [
        "6.riskView.sourceUpgradeability",
        "7.riskView.sourceUpgradeability",
        "8.riskView.sourceUpgradeability",
        "12.riskView.sourceUpgradeability",
        "15.riskView.sourceUpgradeability",
        "29.riskView.sourceUpgradeability",
        "38.riskView.sourceUpgradeability",
        "39.riskView.sourceUpgradeability",
        "40.riskView.sourceUpgradeability",
        "45.riskView.sourceUpgradeability"
      ],
      "0.riskView.destinationToken": [
        "5.riskView.destinationToken",
        "6.riskView.destinationToken",
        "16.riskView.destinationToken",
        "18.riskView.destinationToken",
        "19.riskView.destinationToken",
        "29.riskView.destinationToken",
        "39.riskView.destinationToken",
        "40.riskView.destinationToken",
        "42.riskView.destinationToken"
      ],
      "1.riskView.destinationToken": [
        "7.riskView.destinationToken",
        "41.riskView.destinationToken",
        "44.riskView.destinationToken",
        "47.riskView.destinationToken"
      ],
      "2.contracts.risks.0": [
        "5.contracts.risks.0",
        "9.contracts.risks.0",
        "11.contracts.risks.0",
        "16.contracts.risks.0",
        "17.contracts.risks.0",
        "18.contracts.risks.1",
        "22.contracts.risks.0",
        "24.contracts.risks.0",
        "25.contracts.risks.0",
        "26.contracts.risks.0",
        "27.contracts.risks.0",
        "28.contracts.risks.0",
        "30.contracts.risks.0",
        "31.contracts.risks.0",
        "32.contracts.risks.0",
        "33.contracts.risks.0",
        "34.contracts.risks.0",
        "36.contracts.risks.0",
        "37.contracts.risks.0",
        "44.contracts.risks.0",
        "46.contracts.risks.0"
      ],
      "9.riskView.destinationToken": [
        "12.riskView.destinationToken",
        "24.riskView.destinationToken",
        "26.riskView.destinationToken",
        "27.riskView.destinationToken",
        "32.riskView.destinationToken",
        "33.riskView.destinationToken",
        "45.riskView.destinationToken"
      ],
      "17.contracts.addresses.0.upgradableBy": [
        "17.contracts.addresses.1.upgradableBy"
      ],
      "20.contracts.addresses.0.upgradableBy": [
        "20.contracts.addresses.1.upgradableBy",
        "20.contracts.addresses.3.upgradableBy"
      ],
      "25.contracts.addresses.0.upgradableBy": [
        "25.contracts.addresses.1.upgradableBy",
        "25.contracts.addresses.2.upgradableBy",
        "25.contracts.addresses.3.upgradableBy"
      ],
      "30.contracts.addresses.0.upgradableBy": [
        "30.contracts.addresses.2.upgradableBy",
        "30.contracts.addresses.3.upgradableBy",
        "30.contracts.addresses.5.upgradableBy",
        "30.contracts.addresses.8.upgradableBy",
        "30.contracts.addresses.9.upgradableBy",
        "30.contracts.addresses.12.upgradableBy",
        "30.config.escrows.0.contract.upgradableBy",
        "30.config.escrows.1.contract.upgradableBy",
        "30.config.escrows.2.contract.upgradableBy",
        "30.config.escrows.3.contract.upgradableBy",
        "30.config.escrows.4.contract.upgradableBy"
      ]
    }
  }
}
