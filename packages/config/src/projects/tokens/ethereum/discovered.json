{
  "name": "tokens",
  "chain": "ethereum",
  "blockNumber": 22615727,
  "configHash": "0x21086b60a9239aa7eaa7bac1ef991b38af177246a4b26cc689ce3407bc03ee07",
  "entries": [
    {
      "address": "0x0000000000000000000000000000000000000001",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "DepositContract",
      "address": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
      "type": "Contract",
      "template": "global/DepositContract",
      "sourceHashes": [
        "0x50e829416130215b875975340a7567d915ecf66f25070a50813ca972a4322191"
      ],
      "proxyType": "immutable",
      "description": "Ethereum Beacon Chain deposit contract.",
      "ignoreInWatchMode": ["get_deposit_count", "get_deposit_root"],
      "sinceTimestamp": 1602667372,
      "sinceBlock": 11052984,
      "values": {
        "$immutable": true,
        "get_deposit_count": "0x07fd1f0000000000",
        "get_deposit_root": "0xbf37b08509d30f1a69403671ac1a64605640692c9516907c412996288e3d1b8f"
      },
      "implementationNames": {
        "0x00000000219ab540356cBB839Cbe05303d7705Fa": "DepositContract"
      }
    },
    {
      "address": "0x007DE4a5F7bc37E2F26c0cb2E8A95006EE9B89b5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x04D5b12b196a8CADEB2F476F22Ffb1334Ef9F94c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x0762bCc4D604Aa3B5122C7D6571Cf5368EF3F09c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ValidatorsExitBusOracle",
      "address": "0x0De4Ea0184c2ad0BacA7183356Aea5B8d5Bf5c6e",
      "type": "Contract",
      "template": "tokens/Lido/ValidatorsExitBusOracle",
      "sourceHashes": [
        "0x04c21a54dfbc4ca3baf7ce93d62b487e1071a6439bde71a1896d76f073a66848",
        "0xba2e8ff1fb232454e73ee740f5c151763047d29a9c660b33be8926930334a768"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "getConsensusReport",
        "getProcessingState",
        "getResumeSinceTimestamp",
        "getTotalRequestsProcessed"
      ],
      "sinceTimestamp": 1683024035,
      "sinceBlock": 17172556,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0xA89Ea51FddE660f67d1850e03C9c9862d33Bc42c",
        "$pastUpgrades": [
          [
            "2023-05-02T10:40:35.000Z",
            "0xef3eea1523d2161c2f36ba61e327e3520231614c055b8a88c7f5928d18e423ea",
            ["0x6F6541C2203196fEeDd14CD2C09550dA1CbEDa31"]
          ],
          [
            "2023-05-15T15:15:59.000Z",
            "0x592d68a259af899fb435da0ac08c2fd500cb423f37f1d8ce8e3120cb84186b21",
            ["0xA89Ea51FddE660f67d1850e03C9c9862d33Bc42c"]
          ]
        ],
        "$upgradeCount": 2,
        "DATA_FORMAT_LIST": 1,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "GENESIS_TIME": 1606824023,
        "getConsensusContract": "0x7FaDB6358950c5fAA66Cb5EB8eE5147De3df355a",
        "getConsensusReport": {
          "hash": "0xf7de144ac5813c8d336762a86e0cebeb71a16b36c032a2587ab495327225bf43",
          "refSlot": 11834399,
          "processingDeadlineTime": 1748865611,
          "processingStarted": true
        },
        "getConsensusVersion": 3,
        "getContractVersion": 1,
        "getProcessingState": {
          "currentFrameRefSlot": 11834399,
          "processingDeadlineTime": 1748865611,
          "dataHash": "0xf7de144ac5813c8d336762a86e0cebeb71a16b36c032a2587ab495327225bf43",
          "dataSubmitted": true,
          "dataFormat": 1,
          "requestsCount": 0,
          "requestsSubmitted": 0
        },
        "getResumeSinceTimestamp": 1684163759,
        "getTotalRequestsProcessed": 90732,
        "isPaused": false,
        "MANAGE_CONSENSUS_CONTRACT_ROLE": "0x04a0afbbd09d5ad397fc858789da4f8edd59f5ca5098d70faa490babee945c3b",
        "MANAGE_CONSENSUS_VERSION_ROLE": "0xc31b1e4b732c5173dc51d519dfa432bad95550ecc4b0f9a61c2a558a2a8e4341",
        "PAUSE_INFINITELY": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0xA89Ea51FddE660f67d1850e03C9c9862d33Bc42c",
        "proxy__getIsOssified": false,
        "RESUME_ROLE": "0x2fc10cc8ae19568712f7a176fb4978616a610650813c9d05326c34abb62749c7",
        "SECONDS_PER_SLOT": 12,
        "SUBMIT_DATA_ROLE": "0x65fa0c17458517c727737e4153dd477fa3e328cf706640b0f68b1a285c5990da"
      },
      "implementationNames": {
        "0x0De4Ea0184c2ad0BacA7183356Aea5B8d5Bf5c6e": "OssifiableProxy",
        "0xA89Ea51FddE660f67d1850e03C9c9862d33Bc42c": "ValidatorsExitBusOracle"
      }
    },
    {
      "address": "0x10277B1922e56d1B69f4dCe5A35696C791F78cac",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x14D5d5B71E048d2D75a39FfC5B407e3a3AB6F314",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x16aB869E6dEe6eF9068E5cF75C1a5A57981257CD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x285f8537e1dAeEdaf617e96C742F2Cf36d63CcfB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x2914767E232FD7708ab06bA60dB16c36C555751d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x294ED1f214F4e0ecAE31C3Eae4F04EBB3b36C9d0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Voting",
      "address": "0x2e59A20f205bB85a89C53f1936454680651E618e",
      "type": "Contract",
      "template": "tokens/Lido/Voting",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0xa842994a8949a7342519ad27871fef42aa9cb51c4a52846aed4a726af01590b4"
      ],
      "proxyType": "EIP897 proxy",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "ethereum:0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f",
          "role": "admin"
        }
      ],
      "ignoreInWatchMode": ["votesLength"],
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0xf165148978Fa3cE74d76043f833463c340CFB704",
        "appId": "0x0abcd104777321a82b010357f20887d61247493d89d2e987ff57bcecbde00e1e",
        "CREATE_VOTES_ROLE": "0xe7dcd7275292e064d090fbc5f3bd7995be23b502c1fed5cd94cfddbbdcd32bbc",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0xf165148978Fa3cE74d76043f833463c340CFB704",
        "isDepositable": false,
        "isForwarder": true,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "minAcceptQuorumPct": "50000000000000000",
        "MODIFY_QUORUM_ROLE": "0xad15e7261800b4bb73f1b69d3864565ffb1fd00cb93cf14fe48da8f1f2149f39",
        "MODIFY_SUPPORT_ROLE": "0xda3972983e62bdf826c4b807c4c9c2b8a941e1f83dfa76d53d6aeac11e1be650",
        "objectionPhaseTime": 172800,
        "PCT_BASE": "1000000000000000000",
        "proxyType": 2,
        "supportRequiredPct": "500000000000000000",
        "token": "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",
        "UNSAFELY_MODIFY_VOTE_TIME_ROLE": "0x068ca51c9d69625c7add396c98ca4f3b27d894c3b973051ad3ee53017d7094ea",
        "votesLength": 189,
        "voteTime": 432000
      },
      "implementationNames": {
        "0x2e59A20f205bB85a89C53f1936454680651E618e": "AppProxyUpgradeable",
        "0xf165148978Fa3cE74d76043f833463c340CFB704": "Voting"
      }
    },
    {
      "name": "L1StandardBridge",
      "address": "0x3154Cf16ccdb4C6d922629664174b904d80F2C35",
      "type": "Contract",
      "template": "opstack/L1StandardBridge",
      "sourceHashes": [
        "0xbfb58685ff2f2f07eaa01a3c4e3c33c97686bfd3ae7c50c49f9da6ef5098cb31",
        "0x4e15d99844dc5a4304c2396a66c95ec41218ea311c8e524b118fad7beed0bb53"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit ERC20 tokens from host chain to this chain.",
      "sinceTimestamp": 1686793895,
      "sinceBlock": 17482143,
      "values": {
        "$admin": "0x0475cBCAebd9CE8AfA5025828d5b98DFb67E059E",
        "$implementation": "0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "l2TokenBridge": "0x4200000000000000000000000000000000000010",
        "messenger": "0x866E82a600A1414e583f7F13623F1aC5d58b0Afa",
        "MESSENGER": "0x866E82a600A1414e583f7F13623F1aC5d58b0Afa",
        "OTHER_BRIDGE": "0x4200000000000000000000000000000000000010",
        "otherBridge": "0x4200000000000000000000000000000000000010",
        "paused": false,
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "tokenPairs": {
          "0x4Bbf46E7c31eDc1F33aF4d57F0C4a0f13398427c": [
            "0x8Fbd0648971d56f1f2c35Fa075Ff5Bc75fb0e39D"
          ],
          "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704": [
            "0x70dd44F96B261c596589C984Db23FA107919Db85",
            "0x2Ae3F1Ec7F1F5012CFEab0185bfc7aa3cf0DEc22"
          ],
          "0xba100000625a3754423978a60c9317c58a424e3D": [
            "0x7c6b91D9Be155A6Db01f749217d76fF02A7227F2",
            "0x4158734D47Fc9692176B5085E0F52ee0Da5d47F1"
          ],
          "0x6B175474E89094C44Da98b954EedeAC495271d0F": [
            "0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb"
          ],
          "0xad45e6179e11487bF754CD5b3cE9B6b5d1a3280e": [
            "0x0963a1aBAF36Ca88C21032b82e479353126A1C4b"
          ],
          "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": [
            "0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA",
            "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
          ],
          "0xC8D9871a79551Ab4439C9E08f12962E3785f0437": [
            "0xE2B21D4684b2bA62F3BE1FE286eacb90D26E394d"
          ],
          "0xae78736Cd615f374D3085123A210448E74Fc6393": [
            "0x190b2aA820495c0e92840E8FA699741976cd6439",
            "0xB6fe221Fe9EeF5aBa221c348bA20A1Bf5e73624c"
          ],
          "0xc00e94Cb662C3520282E6f5717214004A7f26888": [
            "0x9e1028F5F1D5eDE59748FFceE5532509976840E0"
          ],
          "0xfcaF0e4498E78d65526a507360F755178b804Ba8": [
            "0x1EBA7a6a72c894026Cd654AC5CDCF83A46445B08"
          ],
          "0x4FbB350052Bca5417566f188eB2EBCE5b19BC964": [
            "0x09188484e1Ab980DAeF53a9755241D759C5B7d60"
          ],
          "0x865377367054516e17014CcdED1e7d814EDC9ce4": [
            "0x4621b7A9c75199271F773Ebd9A499dbd165c3191"
          ],
          "0x8947da500Eb47F82df21143D0C01A29862a8C3c5": [
            "0xf34e0cff046e154CAfCae502C7541b9E5FD8C249"
          ],
          "0xCdF7028ceAB81fA0C6971208e83fa7872994beE5": [
            "0x26f3901aC8a79c50fb0d8289C74f0d09AdC42E29",
            "0xCdF7028ceAB81fA0C6971208e83fa7872994beE5"
          ],
          "0xDFDb7f72c1F195C5951a234e8DB9806EB0635346": [
            "0x117cFd9060525452db4A34d51c0b3b7599087f05",
            "0x37289326b7Bca5a776A5071b8d693C0588c5C9A6"
          ],
          "0xBAac2B4491727D78D2b78815144570b9f2Fe8899": [
            "0xDb9888b842408B0b8eFa1f5477bD9F351754999E",
            "0xAfb89a09D82FBDE58f18Ac6437B3fC81724e4dF6"
          ],
          "0x43D4A3cd90ddD2F8f4f693170C9c8098163502ad": [
            "0x91e1D2B9b0D9AfCF1F024dF09A68799fB200bc63"
          ],
          "0xB49fa25978abf9a248b8212Ab4b87277682301c0": [
            "0x703D57164CA270b0B330A87FD159CfEF1490c0a5"
          ],
          "0xD533a949740bb3306d119CC777fa900bA034cd52": [
            "0x8Ee73c484A26e0A5df2Ee2a4960B789967dd0415"
          ],
          "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E": [
            "0x417Ac0e078398C154EdFadD9Ef675d30Be60Af93"
          ],
          "0x6B3595068778DD592e39A122f4f5a5cF09C90fE2": [
            "0x7D49a065D17d6d4a55dc13649901fdBB98B2AFBA"
          ],
          "0x799ebfABE77a6E34311eeEe9825190B9ECe32824": [
            "0xFE8B128bA8C78aabC59d4c64cEE7fF28e9379921",
            "0xA7d68d155d17cB30e311367c2Ef1E82aB6022b67"
          ],
          "0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2": [
            "0x9Cc2fC2f75768b0307925C7935396Ec9D94bbA44",
            "0x929B939f8524c3Be977af57A4A0aD3fb1E374b50",
            "0xba7D47f471ADD16875e765edEe0858C3413A56Fd"
          ],
          "0xca1207647Ff814039530D7d35df0e1Dd2e91Fa84": [
            "0x8aE125E8653821E851F12A49F7765db9a9ce7384",
            "0x54BC229d1cB15F8B6415EfEab4290a40bc8b7D84"
          ],
          "0x1571eD0bed4D987fe2b498DdBaE7DFA19519F651": [
            "0xE7798f023fC62146e8Aa1b36Da45fb70855a77Ea"
          ],
          "0x76ff2AB6b34142421F44A68cC8Dd08f45F9Ee2F2": [
            "0x76ff2AB6b34142421F44A68cC8Dd08f45F9Ee2F2"
          ],
          "0x936Ab482d6bd111910a42849D3A51Ff80BB0A711": [
            "0xf0f326af3b1Ed943ab95C29470730CC8Cf66ae47"
          ],
          "0x6c3ea9036406852006290770BEdFcAbA0e23A0e8": [
            "0x5fd0787a5A66D24C5a868c2e6a296ca2B1452558"
          ],
          "0x766AbF229Ea28f6816525cDFEA9168E6480aAFD5": [
            "0xf5AEEb851c095B8a76e09647AeFCB8DE2C1168FF"
          ],
          "0x1C9922314ED1415c95b9FD453c3818fd41867d0B": [
            "0xf7C1CEfCf7E1dd8161e00099facD3E1Db9e528ee"
          ],
          "0x5ba19d656B65f1684cFea4Af428C23B9f3628F97": [
            "0x96e890c6b2501a69cAD5Dba402BFB871a2A2874C"
          ],
          "0x17d2628D30F8e9E966c9Ba831c9B9b01ea8Ea75C": [
            "0x17d2628D30F8e9E966c9Ba831c9B9b01ea8Ea75C"
          ],
          "0x0cEC1A9154Ff802e7934Fc916Ed7Ca50bDE6844e": [
            "0xAe31207aC34423C41576Ff59BFB4E036150f9cF7",
            "0xd652C5425aea2Afd5fb142e120FeCf79e18fafc3",
            "0x4200000000000000000000000000000000000006"
          ],
          "0x8A9C67fee641579dEbA04928c4BC45F66e26343A": [
            "0xde0D2ee637D3e4Fd02bc99508CA5e94dd7055766"
          ],
          "0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6": [
            "0xbf1aeA8670D2528E08334083616dD9C5F3B087aE"
          ],
          "0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e": [
            "0x9EaF8C1E34F05a589EDa6BAfdF391Cf6Ad3CB239"
          ],
          "0x320623b8E4fF03373931769A31Fc52A4E78B5d70": [
            "0xaB36452DbAC151bE02b16Ca17d8919826072f64a"
          ],
          "0xEDB171C18cE90B633DB442f2A6F72874093b49Ef": [
            "0x489fe42C267fe0366B16b0c39e7AEEf977E841eF"
          ],
          "0xA0d69E286B938e21CBf7E51D71F6A4c8918f482F": [
            "0x0000000000000000000000000000000000000000",
            "0xCfA3Ef56d303AE4fAabA0592388F19d7C3399FB4"
          ],
          "0xCF3C8Be2e2C42331Da80EF210e9B1b307C03d36A": [
            "0xc9d7411768FBbbd2ab0A97273E18882AD776383E",
            "0xf1095aa7DC127ed45441aCfb742694d6a0261b00"
          ],
          "0xBD8FdDa057de7e0162b7A386BeC253844B5E07A5": [
            "0xc7F5057502495C59372176BBd7B784Bb6BE2fE10"
          ],
          "0x5Fa20D59d2A907E5FEd9Fb80B4A8D9F0d069a48D": [
            "0x13741C5dF9aB03E7Aa9Fb3Bf1f714551dD5A5F8a"
          ],
          "0x0F72964Fa4b766521d84107991E837c30D0EF2b1": [
            "0x5E42c17CAEab64527D9d80d506a3FE01179afa02"
          ],
          "0x5f98805A4E8be255a32880FDeC7F6728C6568bA0": [
            "0x368181499736d0c0CC614DBB145E2EC1AC86b8c6"
          ],
          "0xa0246c9032bC3A600820415aE600c6388619A14D": [
            "0xD08a2917653d4E460893203471f0000826fb4034"
          ],
          "0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202": [
            "0x28fe69Ff6864C1C218878BDCA01482D36B9D57b1"
          ],
          "0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F": [
            "0x22e6966B799c4D5B13BE962E1D117b56327FDa66"
          ],
          "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0": [
            "0xc1CBa3fCea344f92D9239c08C0568f6F2F0ee452"
          ],
          "0x111111111117dC0aa78b770fA6A738034120C302": [
            "0xc5fecC3a29Fb57B5024eEc8a2239d4621e111CBE"
          ],
          "0x6b66ccd1340c479B07B390d326eaDCbb84E726Ba": [
            "0x1C7a460413dD4e964f96D8dFC56E7223cE88CD85"
          ],
          "0x6B0b3a982b4634aC68dD83a4DBF02311cE324181": [
            "0x528852EF932E4c82361b76b22EbBb2A11A0d481D",
            "0x97c806e7665d3AFd84A8Fe1837921403D59F3Dcc",
            "0x4200000000000000000000000000000000000006",
            "0xc5fecC3a29Fb57B5024eEc8a2239d4621e111CBE",
            "0x29DE57876F139570BC7dD381634e2B042bbB191d",
            "0x6B0b3a982b4634aC68dD83a4DBF02311cE324181"
          ],
          "0x3f14920c99BEB920Afa163031c4e47a3e03B3e4A": [
            "0x3f14920c99BEB920Afa163031c4e47a3e03B3e4A"
          ],
          "0x82D09e30d5D682D69B4A5d97C61b7BA651457625": [
            "0x78b3C724A2F663D11373C4a1978689271895256f"
          ],
          "0x97D0CfEB4FdE54B430307c9482d6f79C761Fe9B6": [
            "0x287f0D88e29a3D7AEb4d0c10BAE5B902dB69B17D"
          ],
          "0x226bb599a12C826476e3A771454697EA52E9E220": [
            "0x18dD5B087bCA9920562aFf7A0199b96B9230438b"
          ],
          "0x1E0b2992079B620AA13A7c2E7c88D2e1E18E46E9": [
            "0x8f019931375454Fe4EE353427eB94E2E0C9e0a8C"
          ],
          "0x2Ebd53d035150f328bd754D6DC66B99B0eDB89aa": [
            "0x93dc5Cb35627A759848c7A7F0079EA7b49E435a5"
          ],
          "0x09395a2A58DB45db0da254c7EAa5AC469D8bDc85": [
            "0x858c50C3AF1913b0E849aFDB74617388a1a5340d"
          ],
          "0x0A638F07ACc6969abF392bB009f216D22aDEa36d": [
            "0xddB293BB5C5258F7484A94a0fBd5c8B2F6E4e376"
          ],
          "0x761A3557184cbC07b7493da0661c41177b2f97fA": [
            "0x321725ee44CB4bfA544CF45a5A585b925d30A58C"
          ],
          "0x0350fe3641bbd4d62ed6f381a9F13A9369a80350": [
            "0x7299cD731d0712dB09E7dF43fD670D75Db3319Bc"
          ],
          "0x0b6A24A288eF6e1bFFd94EBe0EE026D80Cb4cE82": [
            "0x4493faE71502871245B7049580b3195bC930e661"
          ],
          "0x81f8f0bb1cB2A06649E51913A151F0E7Ef6FA321": [
            "0x490a4B510d0Ea9f835D2dF29Eb73b4FcA5071937"
          ],
          "0xF17A3fE536F8F7847F1385ec1bC967b2Ca9caE8D": [
            "0x13F4196cC779275888440b3000AE533BbBbC3166"
          ],
          "0x1168dB88417201C2d26B96F53CfDEeEEfcAf0d85": [
            "0xd5D39fF1cB95a567920801BC846d03Ea2Bc1B947"
          ],
          "0xc52FaFDc900cB92Ae01E6E4F8979aF7f436e2EB2": [
            "0x395Ae52bB17aef68C2888d941736A71dC6d4e125",
            "0xD1917629B3E6A72E6772Aab5dBe58Eb7FA3C2F33"
          ],
          "0x514910771AF9Ca656af840dff83E8264EcF986CA": [
            "0x88Fb150BDc53A65fe94Dea0c9BA0a6dAf8C6e196"
          ],
          "0x44ff8620b8cA30902395A7bD3F2407e1A091BF73": [
            "0x0b3e328455c4059EEb9e3f84b5543F74E24e7E1b"
          ],
          "0xBA50933C268F567BDC86E1aC131BE072C6B0b71a": [
            "0x1C9Fa01e87487712706Fb469a13bEb234262C867"
          ],
          "0xD33526068D116cE69F19A9ee46F0bd304F21A51f": [
            "0x1f73EAf55d696BFFA9b0EA16fa987B93b0f4d302"
          ],
          "0xc770EEfAd204B5180dF6a14Ee197D99d808ee52d": [
            "0x30D1660B258dc20dd545eC2CbBAFDE4Fc741e851",
            "0x2dbe0d779c7A04F7a5de83326973effE23356930"
          ],
          "0xdAC17F958D2ee523a2206206994597C13D831ec7": [
            "0xfde4C96c8593536E31F229EA8f37b2ADa2699bb2"
          ],
          "0xfF836A5821E69066c87E268bC51b849FaB94240C": [
            "0x2809ee30C77d7887e4F77394a1Ac0E49De0E397F"
          ],
          "0xAC49c84412391237787e45192fBB3C1655616f5D": [
            "0x374Ad0f47F4ca39c78E5Cc54f1C9e426FF8f231A"
          ],
          "0xC1f33e0cf7e40a67375007104B929E49a581bafE": [
            "0x8f2E6758C4D6570344bd5007DEc6301cd57590A0"
          ],
          "0x0590cc9232eBF68D81F6707A119898219342ecB9": [
            "0x31413c1Ef43Ec45C40c62194331030aF05f4e10C",
            "0x0Af1580f49121d7a42b0F9125f5F7dc172f8a469"
          ],
          "0xADFF444e8Ecd41931096E1BBdcf1D4A472c6392c": [
            "0xADa6DA59F39AA320cB06A561d1d050C98114184D"
          ],
          "0x02e7F808990638E9e67E1f00313037EDe2362361": [
            "0xC7DcCA0a3e69bD762C8DB257f868f76Be36c8514"
          ],
          "0x37329f8F4571aeae1ea7bd1d4fF05dFC438Cd422": [
            "0x1D34e08120dbD1Ea9BDBcD90C2dC919b50Ddff4C",
            "0x37329f8F4571aeae1ea7bd1d4fF05dFC438Cd422"
          ],
          "0xc22B30E4cce6b78aaaADae91E44E73593929a3e9": [
            "0x197D38DC562DfB2490eC1A1d5C4CC4319d178Bb4"
          ],
          "0xfAc0403a24229d7e2Edd994D50F5940624CBeac2": [
            "0xCd9C2e6F9BD17B4210F7387310ebeEFBd75a8F38",
            "0xfAc0403a24229d7e2Edd994D50F5940624CBeac2"
          ],
          "0x4dFae3690b93c47470b03036A17B23C1Be05127C": [
            "0x9F371C6388732E2E2359BC44Ea9a12D2B4A904DD"
          ],
          "0x68d009F251FF3a271477F77aCb704C3b0F32a0c0": [
            "0x6aD71308a68Bb17b4B9Ee9F6637D055A1Af1FD84"
          ],
          "0x9a96ec9B57Fb64FbC60B423d1f4da7691Bd35079": [
            "0xD687E3c439C1caeeBE0d1437D739b79D92a8d41f",
            "0x7F05a7A9AF2f5a07D1e64877C8dC37a64a22508E"
          ],
          "0x72e4f9F808C49A2a61dE9C5896298920Dc4EEEa9": [
            "0x2a06A17CBC6d0032Cac2c6696DA90f29D39a1a29",
            "0x000000000000000000000000000000000000FDFD"
          ],
          "0x0001A500A6B18995B03f44bb040A5fFc28E45CB0": [
            "0x54330d28ca3357F294334BDC454a032e7f353416"
          ],
          "0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a": [
            "0x2Da56AcB9Ea78330f947bD57C54119Debda7AF71",
            "0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a",
            "0x4200000000000000000000000000000000000006",
            "0x02E335a43463e59007803BE260cf37637a3c9eC9"
          ],
          "0x27f103f86070Cc639FEf262787a16887D22D8415": [
            "0xc59B8B95c2599Ae452E9E9f33B1d155a18793b48"
          ],
          "0xE0f63A424a4439cBE457D80E4f4b51aD25b2c56C": [
            "0x50dA645f148798F68EF2d7dB7C1CB22A6819bb2C"
          ],
          "0xD101dCC414F310268c37eEb4cD376CcFA507F571": [
            "0x4C47d80E73CE141423A39Ca278ca1f1119666d38",
            "0xFbB75A59193A3525a8825BeBe7D4b56899E2f7e1",
            "0x0000000000000000000000000000000000000000"
          ],
          "0x7cB683151A83c2B10A30cBB003CDA9996228a2bA": [
            "0xB00d803CB2367a7DA82351DCb9D213230da7B92A"
          ],
          "0xfb130d93E49DcA13264344966A611dc79a456Bc5": [
            "0x881Ed0FCeF78120A135eC6cC66cEf2779FE95BBA",
            "0x4FB9B20DaFE45d91ae287f2E07B2e79709308178"
          ],
          "0xB58E61C3098d85632Df34EecfB899A1Ed80921cB": [
            "0x20D1c515e38aE9c345836853E2af98455F919637"
          ],
          "0xEC213F83defB583af3A000B1c0ada660b1902A0F": [
            "0x3816dD4bd44c8830c2FA020A5605bAC72FA3De7A"
          ],
          "0xDe7D85157d9714EADf595045CC12Ca4A5f3E2aDb": [
            "0x4489d0a0345eCB216A3994De780d453c7fA6312C"
          ],
          "0x102e941B77Bcaa7e35D368CaFE51eF8F79c8d1Ef": [
            "0x1c4076e33D1A165636f89F1A2025271e238C25d7"
          ],
          "0x9AAb071B4129B083B01cB5A0Cb513Ce7ecA26fa5": [
            "0x20538A5b2545b6FE3B8FF88167fCd9a28E9170D8",
            "0x102A7fE099Ca1d917562080A9BFd6a0Dfd711b78",
            "0x37f0c2915CeCC7e977183B8543Fc0864d03E064C"
          ],
          "0x50DE6856358Cc35f3A9a57eAAA34BD4cB707d2cd": [
            "0x6AF3cb766D6cd37449bfD321D961A61B0515c1BC"
          ],
          "0xfE3B138879D6d0555bE4132DcfE6E7424E257A2E": [
            "0x04D1963C76EB1BEc59d0eEb249Ed86F736B82993"
          ],
          "0x7102653225D537e2FE703723ad83edFeb606396e": [
            "0x59e71de66744d1a176d0154b712161562DD03C35"
          ],
          "0x8B12BD54CA9B2311960057C8F3C88013e79316E3": [
            "0x4379c13143Eb91148fF9282CFb2f93536687A45b"
          ],
          "0xB17548c7B510427baAc4e267BEa62e800b247173": [
            "0x2974dC646e375e83bd1c0342625b49f288987fA4"
          ],
          "0x9aFa9999e45484Adf5d8EED8D9Dfe0693BACd838": [
            "0x717d31A60a9e811469673429c9F8Ea24358990f1"
          ],
          "0xAB846Fb6C81370327e784Ae7CbB6d6a6af6Ff4BF": [
            "0x224114c444e3C3d936532fE08351648700570909"
          ],
          "0xE41d2489571d322189246DaFA5ebDe1F4699F498": [
            "0x3bB4445D30AC020a84c1b5A8A2C6248ebC9779D0"
          ],
          "0xaA7a9CA87d3694B5755f213B5D04094b8d0F0A6F": [
            "0xA81a52B4dda010896cDd386C7fBdc5CDc835ba23"
          ],
          "0x21413c119b0C11C5d96aE1bD328917bC5C8ED67E": [
            "0x54B1c48B4B4b97347379A6D49935767d7b15bF65"
          ],
          "0x7AE4f8885f6cFa41a692cb9DA3789cfa6A83e9f2": [
            "0x1db0c569ebb4a8b57AC01833B9792F526305e062"
          ],
          "0x7Fd4d7737597E7b4ee22AcbF8D94362343ae0a79": [
            "0x3d2EbA645c44BBD32A34b7c017667711eb5b173C"
          ],
          "0x58cB30368ceB2d194740b144EAB4c2da8a917Dcb": [
            "0x82c8F48AC694841360dE84d649a0d48d239B61F8"
          ],
          "0xF64265e65c4529879a7ABf467E00D39E39C0B0DA": [
            "0x00854F87a6A5f362580E4f83787c9B658e4C25D0",
            "0x54a65B16D18527160FAFC6FCfEBAeD47c2976dfA"
          ],
          "0x1796ae0b0fa4862485106a0de9b654eFE301D0b2": [
            "0xc4BA74d522A817797a0400024367099d1Ab69C96",
            "0x60edae6E86546428DA423b5FBe0fba46Ca552Fc7"
          ],
          "0x83F20F44975D03b1b09e64809B757c47f942BEeA": [
            "0x99aC4484e8a1dbd6A185380B3A811913Ac884D87"
          ],
          "0x594DaaD7D77592a2b97b725A7AD59D7E188b5bFa": [
            "0x7A2C5e7788E55Ec0a7ba4aEeC5B3da322718Fb5e"
          ],
          "0xc8168d5665f4418353728ac970713e09C0B7c20e": [
            "0xE8740FF403060DaE99c63A684E0DfE3eaa97e9Bc"
          ],
          "0x7697B462A7c4Ff5F8b55BDBC2F4076c2aF9cF51A": [
            "0xF3907Bc0FFF5Ff5aCf1E3dD7987005779C7bf57d"
          ],
          "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984": [
            "0xc3De830EA07524a0761646a6a4e4be0e114a3C83"
          ],
          "0x3F382DbD960E3a9bbCeaE22651E88158d2791550": [
            "0xcD2F22236DD9Dfe2356D7C543161D4d260FD9BcB"
          ],
          "0x617eAD3c59Ded3ea1BB17881118Cf310144b450f": [
            "0xFEE5178BB6aD41E7D5BBC7f6145fEB27460dD1Ed"
          ],
          "0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D": [
            "0x5259384690aCF240e9b0A8811bD0FFbFBDdc125C"
          ],
          "0x90DE74265a416e1393A450752175AED98fe11517": [
            "0xD7eA82D19f1f59FF1aE95F1945Ee6E6d86A25B96"
          ],
          "0x4946Fcea7C692606e8908002e55A582af44AC121": [
            "0x6059d0ed9368c36941514d2864fD114a84853d5a"
          ],
          "0xeD35af169aF46a02eE13b9d79Eb57d6D68C1749e": [
            "0x3792DBDD07e87413247DF995e692806aa13D3299"
          ],
          "0x5fab9761d60419C9eeEbe3915A8FA1ed7e8d2E1B": [
            "0xD7ea8433B434223b3DA2931620391Df157D1c22d",
            "0x5eAA326fB2fc97fAcCe6A79A304876daD0F2e96c"
          ],
          "0xc28eb2250d1AE32c7E74CFb6d6b86afC9BEb6509": [
            "0x9A6d24c02eC35ad970287eE8296D4D6552a31DbE"
          ],
          "0xe701C284eD9De407dA905d918D06dD94F0908C3A": [
            "0x7687325c3B889B8D92614D3Af8C2bA3556953ece"
          ],
          "0xeDF6568618A00C6F0908Bf7758A16F76B6E04aF9": [
            "0x998b3Fd0998bffF66D28aB03DfE417FC3B884188"
          ],
          "0x0d86883FAf4FfD7aEb116390af37746F45b6f378": [
            "0xEFb97aaF77993922aC4be4Da8Fbc9A2425322677"
          ],
          "0x78da5799CF427Fee11e9996982F4150eCe7a99A7": [
            "0x8E5E9DF4F0EA39aE5270e79bbABFCc34203A3470"
          ],
          "0x0469dFb82A816C5F0a566625Cec09216A721E90e": [
            "0xE0742c2d2Bdbb3c138Ce81Bc5589DC07865f0a49"
          ],
          "0x1CBf7f3C89A68B45a781CF222087b9011A3233e4": [
            "0x102c36A76D0C1A36EDCA5Df07344FfB65F66A309"
          ],
          "0x6ADb2E268de2aA1aBF6578E4a8119b960E02928F": [
            "0x606B2Db8Bf642677Fe12E8F067bF55145A350cb5"
          ],
          "0xFd09911130e6930Bf87F2B0554c44F400bD80D3e": [
            "0xACAd1d3107808577022387C07512E7828694B2a2"
          ],
          "0x491604c0FDF08347Dd1fa4Ee062a822A5DD06B5D": [
            "0x259Fac10c5CbFEFE3E710e1D9467f70a76138d45"
          ],
          "0xbf5495Efe5DB9ce00f80364C8B423567e58d2110": [
            "0x2416092f143378750bb29b79eD961ab195CcEea5"
          ],
          "0x9118daBfb8386ce581f2975CC7e98a43Ed34Ca55": [
            "0x1D24A76A12f703e444cF755dC8c6999D89cf125A"
          ],
          "0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee": [
            "0x4c94DE27c94962Dba6Ebb77924Ac54189db75EFA"
          ],
          "0xA4fFdf3208F46898CE063e25c1C43056FA754739": [
            "0x58D75a1c4477914f9a98A8708fEaeD1DbE40b8a3"
          ],
          "0x085780639CC2cACd35E474e71f4d000e2405d8f6": [
            "0x63525b8F9a78251611aDA0A05724EeeF48100fbd"
          ],
          "0x365AccFCa291e7D3914637ABf1F7635dB165Bb09": [
            "0x90eb5f8310C6d2289Ef2475D9B8aE44589663D58"
          ],
          "0x67F4C72a50f8Df6487720261E188F2abE83F57D7": [
            "0x3BFc2bb3B3c187ddC79e38d4A17c830E2a380b70"
          ],
          "0x25cBB21A9dA7C3C63bb77CCCa5B2E2482AEdB710": [
            "0x2EDe02eC52Cbb49E81885c8fa171C3Ba8bcD5374"
          ],
          "0x88800092fF476844f74dC2FC427974BBee2794Ae": [
            "0x0BbbEad62f7647AE8323d2cb243A0DB74B7C2b80"
          ],
          "0x431ad2ff6a9C365805eBaD47Ee021148d6f7DBe0": [
            "0x178929287b25fe1aC9e0b112CE3899312b6d0557"
          ],
          "0xb31eF9e52d94D4120eb44Fe1ddfDe5B4654A6515": [
            "0x455234AB787665a219125235fB01b22b512DfCaA"
          ],
          "0xDD16eC0F66E54d453e6756713E533355989040E4": [
            "0x4FB9B20DaFE45d91ae287f2E07B2e79709308178"
          ],
          "0x8C0D76C9B18779665475F3E212D9Ca1Ed6A1A0e6": [
            "0x6ef3864876424ADE834a7C1BE8C0CF3d71208B84"
          ],
          "0xf4308b0263723b121056938c2172868E408079D0": [
            "0x1f4446fAAAed23090f324f051C3F8c5ce5aD1c36"
          ],
          "0x43Dfc4159D86F3A37A5A4B3D4580b888ad7d4DDd": [
            "0x2B31294D12c4483a6dCD1D34CfF219c946dd8F7F"
          ],
          "0xed328E9C1179a30ddC1E7595E036AEd8760C22aF": [
            "0xc48823EC67720a04A9DFD8c7d109b2C3D6622094"
          ],
          "0x6982508145454Ce325dDbE47a25d4ec3d2311933": [
            "0xB4fDe59a779991bfB6a52253B51947828b982be3"
          ],
          "0x514cdb9cd8A2fb2BdCf7A3b8DDd098CaF466E548": [
            "0x3De7cEB4e41A7714728d29D454141914eC11bBbc"
          ],
          "0x3593D125a4f7849a1B059E64F4517A86Dd60c95d": [
            "0x3992B27dA26848C2b19CeA6Fd25ad5568B68AB98"
          ],
          "0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006": [
            "0x38815A4455921667d673B4cb3d48F0383eE93400"
          ],
          "0x9Ce115f0341ae5daBC8B477b74E83db2018A6f42": [
            "0x3a38dde9824e18CC4C0A147824F95Bf5d608F0B3"
          ],
          "0x7c8E7A5CA7c6EdCEc00B6bF12DA207AEe4Af5513": [
            "0xDf690C65d067035364a58369C26820D3696D7799"
          ],
          "0x217f218fe9eB1Ef180FA4Dae75ebA6Bdf568084a": [
            "0x3F46463323889050d2DA0f2267aB3540F0D5E05B"
          ],
          "0xBcE56276591128047313e64744b3EBE03998783f": [
            "0x2793Ab60892921Cf8ACFAF7fFDF3604924994A5c"
          ],
          "0xe0bCEEF36F3a6eFDd5EEBFACD591423f8549B9D5": [
            "0xd33c7B753ECaa85E5D5F5B5fD99Dec59f26a087E"
          ],
          "0xed4e879087ebD0e8A77d66870012B5e0dffd0Fa4": [
            "0xcacf1ca03983CE6c7E235fb20C70aCC70ed13509"
          ],
          "0x4FFe9CC172527DF1E40D0b2EfE1e9F05884A13dA": [
            "0xD54EecfCA8194Cdf750033B50b559a120834990D"
          ],
          "0x23894DC9da6c94ECb439911cAF7d337746575A72": [
            "0xFf9957816c813C5Ad0b9881A8990Df1E3AA2a057"
          ],
          "0x42379293f2b7a5b379abf54329a8CfdD0E518a9B": [
            "0x74b32F58b65095e72B49A5D0FcDc5Bfab6168d17"
          ],
          "0xA735A3AF76CC30791C61c10d585833829d36CBe0": [
            "0x18E692c03De43972Fe81058f322fa542Ae1A5E2c"
          ],
          "0x0bBCEfA5F3630Cae34842cb9D9b36BC0d4257a0d": [
            "0x3c3860d89b81c91974Fc1f8A41aeEef604c17058"
          ],
          "0xd9ebbC7970e26B4eCeD7323b9331763E8272D011": [
            "0x029a3b0532871735809A51E8653d6017eF04b6Fa"
          ],
          "0x6fB3e0A217407EFFf7Ca062D46c26E5d60a14d69": [
            "0xBCBAf311ceC8a4EAC0430193A528d9FF27ae38C1"
          ],
          "0x7C5b267ED81009aa7374B5CA7E5137Da47045bA8": [
            "0x1287A235474E0331C0975e373bdD066444d1Bd35"
          ],
          "0x38547D918b9645F2D94336B6b61AEB08053E142c": [
            "0x38547D918b9645F2D94336B6b61AEB08053E142c"
          ],
          "0x321C2fE4446C7c963dc41Dd58879AF648838f98D": [
            "0xBB22Ff867F8Ca3D5F2251B4084F6Ec86D4666E14"
          ],
          "0xFc169284da39e8d337D01AB011C3e5d92f7DDBa6": [
            "0x0A4c8Ee5a092Ba333B54C142634c871768891558"
          ],
          "0x5c1760c98be951A4067DF234695c8014D8e7619C": [
            "0x0a93a7BE7e7e426fC046e204C44d6b03A302b631"
          ],
          "0xCB56b52316041A62B6b5D0583DcE4A8AE7a3C629": [
            "0xf88Cf71B891a89A1CB02ec17ce3aD80e5Ae31e1b"
          ],
          "0xDb82c0d91E057E05600C8F8dc836bEb41da6df14": [
            "0xEf0b105b4F2cE61D2A7Ae62D03B1f4cB6C4fbEec"
          ],
          "0x55296f69f40Ea6d20E478533C15A6B08B654E758": [
            "0xD7B99ffB8B2afc6fe013a17207cbe50f223aDc94"
          ],
          "0x42EDBbA2f54e1E765235A81Bd416F1DA89Dc8540": [
            "0x6AEde1aec1C4062E4ED2e91F14877c04db97b3F6"
          ],
          "0x0D505C03d30e65f6e9b4Ef88855a47a89e4b7676": [
            "0xD1dB4851bcF5B41442cAA32025Ce0Afe6B8EabC2"
          ],
          "0x8207c1FfC5B6804F6024322CcF34F29c3541Ae26": [
            "0x7002458B1DF59EccB57387bC79fFc7C29E22e6f7"
          ],
          "0x60Eb57d085C59932d5fAa6c6026268A4386927d0": [
            "0x977ad78482888CE57846b0A19b07Cf8d1aac6038"
          ],
          "0x8f3470A7388c05eE4e7AF3d01D8C722b0FF52374": [
            "0x170fc490250A7ee62f41fa367DaD324a50c573B1"
          ],
          "0xf31698DDAd0d11160Fe85c500397A470CD3d492E": [
            "0xAc12F930318Be4F9d37f602cBF89CD33E99aa9D4"
          ],
          "0x53319181e003E7f86fB79f794649a2aB680Db244": [
            "0x9172852305F32819469bf38A3772f29361d7b768",
            "0x91930fd11ABAa5241241d3B07c02A8d0B5ac1920"
          ],
          "0xDd66781D0E9a08D4FBb5eC7BAc80B691BE27F21D": [
            "0x9B700B043e9587ddE9a0c29A9483e2F8FA450d54"
          ],
          "0xCF078DA6e85389de507ceeDE0E3d217e457B9d49": [
            "0xE7399151B688A265F347693d358821a5A8c213Ec",
            "0x0000000000000000000000000000000000000000"
          ],
          "0x8dCE83ECa4af45dbe618Da1779F9Aaca43201084": [
            "0x681A09A902D9C7445b3B1Ab282C38D60c72F1f09"
          ],
          "0xA2cd3D43c775978A96BdBf12d733D5A1ED94fb18": [
            "0x9c632E6Aaa3eA73f91554f8A3cB2ED2F29605e0C"
          ],
          "0x9F52c8ecbEe10e00D9faaAc5Ee9Ba0fF6550F511": [
            "0x0000000000000000000000000000000000000000",
            "0xd0D1e44FC9aDAEB732F73fFC2429CD1dB9cD4529"
          ],
          "0x32E6C34Cd57087aBBD59B5A4AECC4cB495924356": [
            "0xd15Baa770d6141f77b32FC68beF4a233Ca1fBcbe"
          ],
          "0xe632ea2eF2CFD8Fc4a2731C76F99078Aef6a4B31": [
            "0xb363c1235734f4C036Eb82C84C87e099C316fb48"
          ],
          "0xC0BC84e95864BdfDCd1CCFB8A3AA522E79Ca1410": [
            "0xceA0Be764485f3E22Aa843dFfF3D189F5af6a361"
          ],
          "0x954b890704693af242613edEf1B603825afcD708": [
            "0x620ddE9fFfc63aFF05140F53a3c8b6e31dc93374"
          ],
          "0x0Bc4dF77353ae96f31bC82bC2536bb23B2009919": [
            "0x2112b92A4f6496B7b2f10850857FfA270464d054"
          ],
          "0x45080a6531d671DDFf20DB42f93792a489685e32": [
            "0x6b37F4AD0022bbe32c21829Fa40FdAEcAD8C8d10"
          ],
          "0xFA99A87b14B02e2240C79240C5a20F945ca5EF76": [
            "0xf0345Ba710F1354e41B808737a35A517dE5397dB"
          ],
          "0x8BA6DcC667d3FF64C1A2123cE72FF5F0199E5315": [
            "0x3A9fa5027e3c7eBe2318cE2b67dD3b22C6015Cd8"
          ],
          "0x6b5204B0Be36771253Cc38e88012E02B752f0f36": [
            "0xB5617AC8918CDC0e877c9Fb7e75B9dF62DBD539B"
          ],
          "0x4aBD5745F326932B1b673bfa592a20d7BB6bc455": [
            "0x0Dd66Db0f5C7EC8A4547338A0072fB8B64278c0C"
          ],
          "0x6f80310CA7F2C654691D1383149Fa1A57d8AB1f8": [
            "0xF734eFdE0C424BA2B547b186586dE417b0954802"
          ],
          "0x60e683C6514Edd5F758A55b6f393BeBBAfaA8d5e": [
            "0xc4730f86d1F86cE0712a7b17EE919Db7dEFad7FE"
          ],
          "0x547213367cfB08ab418E7b54d7883b2C2AA27Fd7": [
            "0xe31eE12bDFDD0573D634124611e85338e2cBF0cF"
          ],
          "0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD": [
            "0x0D760ee479401Bb4C40BDB7604b329FfF411b3f2"
          ],
          "0x6Ae2A128cD07d672164cA9f2712Ea737d198Dd41": [
            "0xF576BA572dFF9cCa80F5525Eed05aF7E3F29bFd4"
          ],
          "0x30aE41D5f9988D359c733232C6c693c0e645C77E": [
            "0x0f3091255DfAE02b540CD601eE25E6550759c310"
          ],
          "0xab814ce69E15F6B9660A3B184c0B0C97B9394A6b": [
            "0x3568c7a4f7545805e379c264303239781B4E9A79"
          ],
          "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": [
            "0x4200000000000000000000000000000000000006"
          ],
          "0x0b3eE85E3419ed38A7D00a56010237aA9a712CdC": [
            "0xcFB948647440Ea5586F0A74bF685ddEDe1384585"
          ],
          "0x3af33bEF05C2dCb3C7288b77fe1C8d2AeBA4d789": [
            "0xdfF3C626De2Ccd1ECf67E97abc8A74C102C86545"
          ],
          "0xE951bC69eAc0Ad75253000272cFDd3AD6212B714": [
            "0x9EAac9316E0F61552efb1c59279D2ed3c65AE0AF"
          ],
          "0x411D4e147636C63380Fe8D569e9D05DA88688381": [
            "0xc3636a50D5eCfd2cCC943eFF2Cc4010233f5ee66"
          ],
          "0x857aFCeCbdc857a8829820a775Faee1D99d42538": [
            "0xA797CF0ec94793B8803DD1A3BE3B4BA49E8B01E2"
          ],
          "0xf241FD6fB9E46F17BA816D4463A2447F3d477Be0": [
            "0x8BfB09521EBc971C493FceF170B5A5f169aB54fA"
          ],
          "0xcF7801cEf3e91a7e366cf77Ed3d0B6439bB34766": [
            "0x06de990abC8E6dC2E1a9Ee10E402b3AfCeF5Cdb0"
          ],
          "0x252D223D0550BC6c137B003D90bc74F5341A2818": [
            "0x252D223D0550BC6c137B003D90bc74F5341A2818"
          ],
          "0x5B2e491082493Ac11c9DCBe0Be2135d7A902aA57": [
            "0x8eBe9Bf80CfEb21D8fE0BAff1e373375982fC9b1"
          ],
          "0x32C4ADB9cF57f972bc375129de91C897b4F364F1": [
            "0xAa2293967B8D297E7FC4DC3e169ABF9fb79fCE91"
          ],
          "0xF43F21384d03b5cBbddd58d2de64071e4Ce76AB0": [
            "0x4032758A0A5dADC52ea7206fBa72aE3BBf2A44E1"
          ],
          "0xb23d80f5FefcDDaa212212F028021B41DEd428CF": [
            "0xfA980cEd6895AC314E7dE34Ef1bFAE90a5AdD21b"
          ],
          "0xae28075B58fFc9a6bA22CC4adE7300E0c828D94c": [
            "0xF9e6726354605586fba7393e6e082F6E40557086"
          ],
          "0x39b46B212bDF15b42B166779b9d1787A68b9D0c3": [
            "0x5b2124D427fAc9C80c902cbDD74b03Dd85d7d3FE"
          ],
          "0xc2e660C62F72c2ad35AcE6DB78a616215E2F2222": [
            "0x40AeED4852Df0Ae3624E7027DEdDFb972Dbc8852"
          ],
          "0xd0a6053f087E87a25dC60701ba6E663b1a548E85": [
            "0xB676f87A6E701f0DE8De5Ab91B56b66109766DB1"
          ],
          "0xbD9908b0Cdd50386F92efCC8e1d71766C2782Df0": [
            "0xf501E4c51dBd89B95de24b9D53778Ff97934cd9c"
          ],
          "0x37FC4b48CE93469dbEA9918468993C735049642a": [
            "0xD988824d7fA1998D0ABBab2F79A82aF762886caC"
          ],
          "0xC0c293ce456fF0ED870ADd98a0828Dd4d2903DBF": [
            "0x1509706a6c66CA549ff0cB464de88231DDBe213B"
          ],
          "0x18084fbA666a33d37592fA2633fD49a74DD93a88": [
            "0x236aa50979D5f3De3Bd1Eeb40E81137F22ab794b"
          ],
          "0x9559Aaa82d9649C7A7b220E7c461d2E74c9a3593": [
            "0xB6fe221Fe9EeF5aBa221c348bA20A1Bf5e73624c"
          ],
          "0x06F3C323f0238c72BF35011071f2b5B7F43A054c": [
            "0x45D9C101a3870Ca5024582fd788F4E1e8F7971c3"
          ],
          "0xc11158c5dA9db1D553ED28f0C2BA1CbEDD42CFcb": [
            "0xc11158c5dA9db1D553ED28f0C2BA1CbEDD42CFcb"
          ],
          "0x9DFAD1b7102D46b1b197b90095B5c4E9f5845BBA": [
            "0x24914CB6BD01E6a0CF2a9c0478e33c25926e6a0c"
          ],
          "0x88dF592F8eb5D7Bd38bFeF7dEb0fBc02cf3778a0": [
            "0xF8e9E61FFB2b491f7DF29823a76009743671CD96"
          ],
          "0xF35155E38C8750372ca024a3d1b5cc7174AaaBbC": [
            "0x136B80f6Aa5d03456eAAE779747CC0a5F6835899"
          ],
          "0x4467f14A5A99D622a84832a066D174682A280386": [
            "0xde756510Fb296BFCd04cB793B986C3ca9320Cae4"
          ],
          "0x73A740d256188395D9AF56db31AB1e9Bb2F2978D": [
            "0x71513ff59609353fa239623366412B1ADd18C09B"
          ],
          "0x423071774C43c0Aaf4210b439E7CDA8c797e2F26": [
            "0x2D189eABb667aA1ecFC01963a6a3A5d83960f558"
          ],
          "0x82967568A57625675b260Ebab1294038C9ACcC6e": [
            "0x7Cea109FC3516eD1248ae9AA67B5a352cF74075e"
          ],
          "0x525574C899A7c877a11865339e57376092168258": [
            "0x0f1cFD0Bb452DB90a3bFC0848349463010419AB2"
          ],
          "0x86ed939B500E121C0C5f493F399084Db596dAd20": [
            "0xA5649B56AA4e74d8661Ee9656130072df7666784"
          ],
          "0x677ddbd918637E5F2c79e164D402454dE7dA8619": [
            "0x0937876EFd6C4101Be68cd89ba58D5Ecf0d53A64"
          ],
          "0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d": [
            "0xfB6919cb8468Eb39747C1cb216D51B03b835B35B"
          ],
          "0x1b40183EFB4Dd766f11bDa7A7c3AD8982e998421": [
            "0xc8a7B50498f7D3Da97249DE165908F0f588490ED"
          ],
          "0x966f17CD63C93C39f38897e5c633e59Cef0591f1": [
            "0x0956CB4A1D8924680FEb671d2E4a122E2114313e"
          ],
          "0x812Ba41e071C7b7fA4EBcFB62dF5F45f6fA853Ee": [
            "0x5Ca35eBC4f25B042d2cAE75914c7e882E631fA9A"
          ],
          "0x4104b135DBC9609Fc1A9490E61369036497660c8": [
            "0x5Dbe772a051FA853433cDAe923C3b3aE955Df7BD"
          ],
          "0xec53bF9167f50cDEB3Ae105f56099aaaB9061F83": [
            "0x2081Ab0D9EC9e4303234Ab26D86b20B3367946ee"
          ],
          "0x6C05b8141cEfb64502B6DfcAAE7C77BAbBaC18FA": [
            "0x8f4E4221ba88D4E9Bb76ECFB91d7C5ce08D7d5b9"
          ],
          "0xF655C8567E0f213e6C634CD2A68d992152161dC6": [
            "0xb8A9a92DFE1303728394dD0f8362a09962dEC24f"
          ],
          "0x5d3D01FD6d2Ad1169b17918eB4f153C6616288eB": [
            "0x9E5189a77f698305Ef76510AFF1C528cff48779c"
          ],
          "0x25f8087EAD173b73D6e8B84329989A8eEA16CF73": [
            "0xaAC78d1219c08AecC8e37e03858FE885f5EF1799"
          ],
          "0xDEf1CA1fb7FBcDC777520aa7f396b4E015F497aB": [
            "0xc694a91e6b071bF030A18BD3053A7fE09B6DaE69"
          ],
          "0x5Dfe42eEA70a3e6f93EE54eD9C321aF07A85535C": [
            "0x946A2C918F3D928B918C01D813644f27Bcd29D96",
            "0xB025ee78b54B5348BD638Fe4a6D77Ec2F813f4f9",
            "0x2c613Ecf0966b84562d3A083227C753B4d5ABF12"
          ],
          "0x1e4746dC744503b53b4A082cB3607B169a289090": [
            "0xbd4e5C2f8dE5065993d29A9794E2B7cEfc41437A"
          ],
          "0xd2bDaAF2b9cc6981fd273DcB7C04023bFbe0a7fe": [
            "0x3203856eaC03d343f9d5245BA2F39861838A7B36"
          ],
          "0x1c00c3E03C3a10a0C1d9B6d1A42e797d7CB4147a": [
            "0xDD177b9086c0F781380c4E5D7a3109cc85977AcF"
          ],
          "0xDb0aEfdfde3dd64088C4A9bd0dB31f6ceCDb043d": [
            "0x054Ab57D364730ed9ed665FF97A92E9813c42515"
          ],
          "0xc944E90C64B2c07662A292be6244BDf05Cda44a7": [
            "0x0F4d237B09Cb37d207BA60353Dc254d4530D4dF1"
          ],
          "0x0655977FEb2f289A4aB78af67BAB0d17aAb84367": [
            "0x646A737B9B6024e49f5908762B3fF73e65B5160c"
          ],
          "0x906c012fa4C30d580537c2b72d1789F56F488a80": [
            "0x728f0a7FEC1859Cb0d71A432271D4E80310d235f"
          ],
          "0x154e35c2b0024B3e079c5c5e4fC31c979c189cCB": [
            "0xC6A3c02B6A350262E8BB665D6cb9c5853d1AaFc7"
          ],
          "0x039b598c6b99e70058E1e9021E000BdacD33d026": [
            "0x039b598c6b99e70058E1e9021E000BdacD33d026"
          ],
          "0x58D97B57BB95320F9a05dC918Aef65434969c2B2": [
            "0xBAa5CC21fd487B8Fcc2F632f3F4E8D37262a0842"
          ],
          "0x808507121B80c02388fAd14726482e061B8da827": [
            "0xA99F6e6785Da0F5d6fB42495Fe424BCE029Eeb3E"
          ],
          "0x21BfBDa47A0B4B5b1248c767Ee49F7caA9B23697": [
            "0x27E3Bc3a66E24CaD043aC3d93A12A8070E3897ba"
          ],
          "0x3D3D35bb9bEC23b06Ca00fe472b50E7A4c692C30": [
            "0x46c8651dDedD50CBDF71de85D3de9AaC80247B62"
          ],
          "0x0B6F3c17e1626a7cBfA4302CE4E3c45522d23A83": [
            "0xCB3D15e352ceFA5Be4b63b5F3F08a9f2c3e9efF2"
          ],
          "0xaea46A60368A7bD060eec7DF8CBa43b7EF41Ad85": [
            "0x74F804B4140ee70830B3Eef4e690325841575F89"
          ],
          "0x5eA1dd3f3F3685C32D771B2E89A70d9c5cCf8A0C": [
            "0x041040e0A67150BCaf126456b52751017f1c368E"
          ],
          "0xF8206A19Fca5999425358DE4E4cDEFc7F5C5D4cA": [
            "0x7853222656286912e6Ee36f674571e953761DC7e",
            "0xcfAe55e5616007181af140cbcB7A4A087Fec8d07"
          ],
          "0xC82E3dB60A52CF7529253b4eC688f631aad9e7c2": [
            "0x61CA70b867A48265e553a7FBb81bfe44FADa7AE6"
          ],
          "0x20d4DB1946859E2Adb0e5ACC2eac58047aD41395": [
            "0x6585a54A98fADA893904EB8A9E9CDFb927bddf39"
          ],
          "0x05BE1d4c307C19450A6Fd7cE7307cE72a3829A60": [
            "0x5C5B1DE218f86f00Fa547ac4f70DA2C39BB8A039"
          ],
          "0x886f224128b84e59eDBB0E5c2A3195B8Cf0E9db2": [
            "0x418D5E096225729001Bb54e62EF7aD6873550146"
          ],
          "0xF5a893Cc9b09c46FDAeCE4301Abc88C5c9C926C2": [
            "0xaCB1c6492a3d7CB8F38F04496381902ba55Ed3C5"
          ],
          "0xB98d4C97425d9908E66E53A6fDf673ACcA0BE986": [
            "0xe2A8cCB00E328a0EC2204CB0c736309D7c1fa556"
          ],
          "0xaa0f0433e5f1cdA65B664Ab14624bC97939C2B50": [
            "0x4a51088E7D6F77208412eAd1bCd1C0e992f7Df5c"
          ],
          "0x6e15A54B5EcAc17e58daDedDbe8506a7560252F9": [
            "0x2C24497D4086490e7EaD87CC12597fb50c2E6eD6"
          ],
          "0x8457CA5040ad67fdebbCC8EdCE889A335Bc0fbFB": [
            "0x75f2231A289Ea35895246b21e9c6E5BbF5ce69ED"
          ],
          "0x0943a203d80d89D79Bf5EAa1780Fc72A016FB729": [
            "0xab387E8f0dF922dEDd9d5067e51816D08a938174"
          ],
          "0x686f2404e77Ab0d9070a46cdfb0B7feCDD2318b0": [
            "0xd5b22dCfa9a919b28Afe164fc7Af10b832d4B022"
          ],
          "0xec463D00aa4dA76fb112cD2e4AC1C6BeF02da6ea": [
            "0xEF22cb48B8483dF6152e1423b19dF5553BbD818b"
          ],
          "0x9A8d3C809e34B0226475c12b68c1AC7938d09B98": [
            "0xca73ed1815e5915489570014e024b7EbE65dE679"
          ],
          "0xB90B2A35C65dBC466b04240097Ca756ad2005295": [
            "0x570b1533F6dAa82814B25B62B5c7c4c55eB83947"
          ],
          "0x1337420dED5ADb9980CFc35f8f2B054ea86f8aB1": [
            "0xd4554BEa546EFa83C1E6B389ecac40EA999B3E78"
          ],
          "0x7d871dbA85ff33f4ed03d6146a421B1507589dab": [
            "0x9Fa4dE109aA3aEfd708de90BD4CAb6cFC5983954"
          ],
          "0x08d9040214c4AbA39292Fd2e7De20BbBA7A8DCe4": [
            "0xd91d07e4949A858D29005D339610DB2402EF5b73"
          ],
          "0x6EB693b1079E96e1e4aAb3079E18759657AfF882": [
            "0x57414656AC535680367f519eeC9f0D7Ffe99e2D0"
          ],
          "0x98933f2396DBaABf812b6E6d27dA4DF109C4c55F": [
            "0xcCe908f47318C0eFE6aaE4D65288a57Ea2Fd91d9"
          ],
          "0xfE80D611c6403f70e5B1b9B722D2B3510B740B2B": [
            "0x010cd9b9be7E416E07793dc6Ce2F45868A80a50a"
          ],
          "0xfF20817765cB7f73d4bde2e66e067E58D11095C2": [
            "0xb358489D5d92641EdB4D8eE8063f8005964346Ba"
          ],
          "0xF17e65822b568B3903685a7c9F496CF7656Cc6C2": [
            "0xf5Dbaa3DFC5e81405c7306039fB037a3DCD57Ce2"
          ],
          "0x9E46A38F5DaaBe8683E10793b06749EEF7D733d1": [
            "0xE6bAA3Fedb5Dc88b2c59ba4812388Bb0906D19dB"
          ],
          "0xeB206204f2A39A46355aa291eA16656eC67480b5": [
            "0x93757336dE76f24f7eEE15e6150e4ec42fbDaA21"
          ],
          "0x309396Ee38A6c2C1b3B2ad9bc73bDc44E57FE453": [
            "0x53D46f0B40f45a3c802Db2d14Bab970ea3296980"
          ],
          "0xa71261C2b51cB8030700F5601Ca597c522dc232e": [
            "0xBB2A93AFcF5d3af8AE28dd50d6c18556eA532c5a"
          ],
          "0x037A54AaB062628C9Bbae1FDB1583c195585fe41": [
            "0xd7468c14ae76C3Fc308aEAdC223D5D1F71d3c171"
          ],
          "0x610dBd98A28EbbA525e9926b6aaF88f9159edbfd": [
            "0x08D7Ea3c148672C4b03999EB0D0467733Da2db6A"
          ],
          "0x7ABc8A5768E6bE61A6c693a6e4EAcb5B60602C4D": [
            "0xB1E1f3Cc2B6fE4420C1Ac82022b457018Eb628ff"
          ],
          "0x354a0dB99096e36deeDa4FFa4025f0Dd6357e664": [
            "0x354a0dB99096e36deeDa4FFa4025f0Dd6357e664"
          ],
          "0xB4Db3E389A425D3454451aD455bb845f6da7e8df": [
            "0xB4Db3E389A425D3454451aD455bb845f6da7e8df"
          ],
          "0x1F5e3E54D7098136C72F7358a9b2FD56A1ec174b": [
            "0x1F5e3E54D7098136C72F7358a9b2FD56A1ec174b"
          ],
          "0xF6e85D03A4b8E621565D4E80d406F117ff4C1583": [
            "0xF6e85D03A4b8E621565D4E80d406F117ff4C1583"
          ],
          "0xA608512BBC9934E4b1DDeCF0F5Fb38b6Ad93308D": [
            "0xA608512BBC9934E4b1DDeCF0F5Fb38b6Ad93308D"
          ],
          "0x3FF52bf18E4eD766DdCa054eAE86dEDc866aaef5": [
            "0x4E741AfD7CD615c44C5855fD2539cFcc682521C9"
          ],
          "0x09d98b06C28EF976715c00c0D6A7D9C0Dd8B631B": [
            "0xA7aCd41B1cA7cbD85C7359CAaaa8b0Ca2C74688E"
          ],
          "0x92e52a1A235d9A103D970901066CE910AAceFD37": [
            "0x26cf750abAf38aF7109Effdbdf79bA50d2EE09A1"
          ],
          "0xAF4144cd943ed5362Fed2BaE6573184659CBe6FF": [
            "0xAF4144cd943ed5362Fed2BaE6573184659CBe6FF"
          ],
          "0x68E2e5c9DFF32419A108713f83274a4Fb5e194CA": [
            "0xe898bCD00B86A3eaE43914319D2D4460230f735c"
          ],
          "0x794a06DdD7d55AFe9BaE400988545ab68FFb9796": [
            "0xe18c07D858fB1bbF8c06fD78c13b86AfD3d04e28"
          ],
          "0x9D39A5DE30e57443BfF2A8307A4256c8797A3497": [
            "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
          ],
          "0x1aE7e1d0ce06364CED9aD58225a1705b3e5DB92b": [
            "0x05FC1Fa527Ae2f2cEC350C4468837baB44C2Bf1A"
          ],
          "0x2f38B1a516239739CdCD2C228D1Eb96E29800975": [
            "0x677F124CD209489F6621eebDFdA1E32c625214d4"
          ],
          "0x79C6Ffe2ccBca761e9E289A69432bFfB0b744876": [
            "0xa0e8F4Dc8Da84fA518610d56C0Ec4C7f385E0014",
            "0x69EAC44Bf0f8653D1D78B86A544a134293E840FC"
          ],
          "0x24c98fef12B39bFD61872ECe38308e35E70beE0f": [
            "0xA515763E896ecc9c36ABcFE066e65d1D455d1E49"
          ],
          "0xB26631c6dda06aD89B93C71400D25692de89c068": [
            "0x686015EbF044a1B8A4bE750346be00293a996071"
          ],
          "0xdd3B11eF34cd511a2DA159034a05fcb94D806686": [
            "0xB3e3c89B8D9c88B1fe96856E382959eE6291ebbA"
          ],
          "0x2196B84EaCe74867b73fb003AfF93C11FcE1D47A": [
            "0x85d0E1BdE4E71AEDE97e0F0412c6E4B3D1E59a97"
          ],
          "0x71b14F197DBB6b937665C78120fC07f8355c2C2C": [
            "0x000096630066820566162C94874A776532705231"
          ],
          "0xc98D64DA73a6616c42117b582e832812e7B8D57F": [
            "0xDb4d83343623027B6b4C4D3354AE9FdA4A90AD67"
          ],
          "0x031B8d752d73d7Fe9678ACEf26e818280D0646b4": [
            "0xCa4C2E10037ac1AF9f501eCB11A710776c87d2d5"
          ],
          "0x29C7D81b5629a02d288dfe8d7c78a289957885e3": [
            "0x766e914c4003A1CF43bFddFcd8782E54fab320bB"
          ],
          "0x607f451f850CB612a07b37b6315be23F55165610": [
            "0xcaacD56d3d9b41D9D1272457e77F8ae510fdB688"
          ],
          "0x1B1FF83AE0751ffb7ce0224e9C330e859E95dD16": [
            "0xc7837BE3d71E00fcbE76D77602BCf353Df859664"
          ],
          "0xe53EC727dbDEB9E2d5456c3be40cFF031AB40A55": [
            "0x576B74d41c47E96673954d8cdba0bD1CF1677b15",
            "0x391359ab0CCef572DcaC78F74E47D7C06Db0b982"
          ],
          "0xCfFCFDAda28ab44D5440301470dCD410E75C4765": [
            "0x431c248257c1d3897FeA3B99eb8e2e4De008cBDF"
          ],
          "0xdBB7a34Bf10169d6d2D0d02A6cbb436cF4381BFa": [
            "0xdf49c226ED9CF05Be0e38cdb86Df4E8A945158B1"
          ],
          "0xcab8546b5B009192953d8f0d269780fb4d05DEfD": [
            "0x84Ea4D1b8ad81e398f8EF82Dd055781f61F05649"
          ],
          "0xCb76314C2540199f4B844D4ebbC7998C604880cA": [
            "0xdF36186772a8fDA4bE100dbaCc0B48EF00C53089"
          ],
          "0xFc1C93a2507975E98b9d0E9260Ded61A00152BF1": [
            "0x37CfcDd301E992cd0c2435049D7075C6583B1D0E"
          ],
          "0x3a48CC26aF23E109d14478Ba33B4E0eb62625a2C": [
            "0x1527d463cC46686f815551314BD0E5Af253d58C0"
          ],
          "0x4af322Ff4A6f2858F6B51E546B9EC499654493C5": [
            "0x514D8E8099286a13486Ef6C525C120f51C239B52"
          ],
          "0x9E6be44cC1236eEf7e1f197418592D363BedCd5A": [
            "0x2b4D0Fc2294Aa9686ADF6c5a7Ba25f66Dccdf6C0"
          ],
          "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9": [
            "0x63706e401c06ac8513145b7687A14804d17f814b"
          ],
          "0x97CeaaccD743a8A6D78f5C21B1dAe12FCa9A3Ab1": [
            "0xfbaD5BE3A505889df2Aa189580E3bD36118Bf4D8"
          ],
          "0xabAb3B0DB38f2303ACbCAB672905E41A18e396d8": [
            "0xd46E2EDC7314eE5cb69f86aB7b0E84e349971eFB"
          ],
          "0x236501327e701692a281934230AF0b6BE8Df3353": [
            "0x7dc0964E4269150207D9830Cc4Af087A708f70A4"
          ],
          "0x8503a7b00B4b52692cC6c14e5b96F142E30547b7": [
            "0xD9dF947d2A8f9c28c37Af7Cb7C526022Fb14Efa2"
          ],
          "0x9Fd9278f04f01c6a39a9d1c1CD79f7782C6ADe08": [
            "0xf4fa93f76220414cDf6FD95A85e7A407e2DD3e3d"
          ],
          "0x996d67AA9b37df96428ad3608cb21352BF1FDB90": [
            "0x58cDA7e1ef2de86586033989f7Fe5dB705F2a2F5"
          ],
          "0x20b4Be7dF8E79D75207339dBD4d8498B6eA93E69": [
            "0x20B4B7dFFB6c1a7fe70715387d69248a62aFDa69"
          ],
          "0xd0D56273290D339aaF1417D9bfa1bb8cFe8A0933": [
            "0x379503eBB4276AEf546157a0DE66A245C9413450"
          ],
          "0x1D96Fd43EE07Aa79f8Fd003cbdF404fb5ce41AD2": [
            "0x9Bb160C50dB4AE4f16CE950FC1B0A100578Ba14B",
            "0x55365c9E68E70122020184F4441B498E8bf06AC6"
          ],
          "0x9e91F79070926A191e41367d40aD582686f9e66D": [
            "0x958A405cfD2789E2b7f261d542fEAe84A8514c44"
          ],
          "0xFA5c890B6ff227EF87b514135f2cF7036C9B58aC": [
            "0x9Bb160C50dB4AE4f16CE950FC1B0A100578Ba14B"
          ],
          "0x467Bccd9d29f223BcE8043b84E8C8B282827790F": [
            "0x09bE1692ca16e06f536F0038fF11D1dA8524aDB1"
          ],
          "0xF1A7000000950C7ad8Aff13118Bb7aB561A448ee": [
            "0xF1A7000000950C7ad8Aff13118Bb7aB561A448ee"
          ],
          "0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39": [
            "0x60B407479ef0ddF6Cc146ceD609aa07d4296F204"
          ],
          "0xA882606494D86804B5514E07e6Bd2D6a6eE6d68A": [
            "0xE683712D8F8231df7617C39DA733fd5258EdEcBf"
          ],
          "0xdd9df52Db6a9D6C6C05Eb80324AA72fc29cFc747": [
            "0x47fa7D5B4273c9A44f138A4b59775614a6A0BF58"
          ],
          "0x8f91D55588CA6F688583544A6e506dBe074E5993": [
            "0xC0AD8363Ba8186ae0a1FB1746FCa5687BEa6425e"
          ],
          "0xC477D038d5420C6A9e0b031712f61c5120090de9": [
            "0x2192607C3CBA9Ec3D490206d10d831E68E5F3c97"
          ],
          "0x32353A6C91143bfd6C7d363B546e62a9A2489A20": [
            "0xB55078F255BaA7A0b3f324dCEdcEd2eF5309a46d"
          ],
          "0x06561dC5CEdCc012a4EA68609b17d41499622E4c": [
            "0xa528f1903B1Cb425c05f1C80BF92f158A4932118"
          ],
          "0x1bFCe574dEFf725A3f483C334b790E25c8FA9779": [
            "0x7f092d3edaC0726e1BDe1A8dF7Cd95BAD9B1da53"
          ],
          "0x464eBE77c293E473B48cFe96dDCf88fcF7bFDAC0": [
            "0xDAE49C25fAd3a62a8e8bFB6dA12c46bE611f9f7a"
          ],
          "0x76A0e27618462bDAC7a29104bdcfFf4E6BFCea2D": [
            "0x624e2e7fDc8903165F64891672267AB0FCB98831"
          ],
          "0xb5130F4767AB0ACC579f25a76e8f9E977CB3F948": [
            "0xb5130F4767AB0ACC579f25a76e8f9E977CB3F948"
          ],
          "0x5D56B6581D2e7e7574aDce2Dc593f499A53D7505": [
            "0x79f658754Af09e022184d09799736954f069f896"
          ],
          "0x000000Fa00b200406de700041CFc6b19BbFB4d13": [
            "0x00000000A22C618fd6b4D7E9A335C4B96B189a38"
          ],
          "0xb7109df1a93f8fe2B8162c6207C9B846C1C68090": [
            "0xA866d0ffa4e9e52eAde4770Af11496E8d237086C"
          ],
          "0x62955B49be143357f3F88d85c4BB670cf1880F3c": [
            "0x00096697DC24bd10423690126D91546A20Ccb3F0"
          ],
          "0x7866E48C74CbFB8183cd1a929cd9b95a7a5CB4F4": [
            "0x946F8B0eF009F3F5B1b35E6511a82A58b09d8d4e"
          ],
          "0x744d70FDBE2Ba4CF95131626614a1763DF805B9E": [
            "0x662015EC830DF08C0FC45896FaB726542e8AC09E"
          ],
          "0xD05001Db979ff2f1a3B2105875d3454E90dd2961": [
            "0xa69f80524381275A7fFdb3AE01c54150644c8792"
          ],
          "0xbC396689893D065F41bc2C6EcbeE5e0085233447": [
            "0xCD6dDDa305955AcD6b94b934f057E8b0daaD58dE"
          ],
          "0xceCFbfbEd09bB3f06211A841d939223E093368A2": [
            "0x251Cd892227703CAcAAd75656B46c20D2d89bAF9"
          ],
          "0xa80505c408C4DEFD9522981cD77e026f5a49FE63": [
            "0x3Cf255a7A03d74B6F9D58456cBedbc0705626354"
          ],
          "0xf60b6d2A3336262841F61c7fe4A45901cD08d5F9": [
            "0x67A5294b47f3576d5Ae5A32aeF96B6AB708444Dd"
          ],
          "0x7D8146cf21e8D7cbe46054e01588207b51198729": [
            "0x4c89488d06c9B3ac1Ad8E61396A7430357d3b6e7"
          ],
          "0x5a13B8CD0473430Db9C8F780e023F2E5b7B1ae62": [
            "0xCB757876b793db414Db46F2799EC95bBDC0Bb5Dc"
          ],
          "0xe485E2f1bab389C08721B291f6b59780feC83Fd7": [
            "0x6774DFC16e1D9B6cE5b0AeC4fFed37A0dAeF0602"
          ],
          "0x1456a1897509Bb9A42610d8fF5FE869D2612C181": [
            "0x8D78a88f7D01516d88EF4832a3119F4Fb9BC780a"
          ],
          "0x35f15275041B53324dF461d5ccC952EE19D4a982": [
            "0x166d48F5449315F90cC5543886Bf74bbe6EA3Fb0"
          ],
          "0x81e32d4652Be82AE225DEdd1bD0bf3BCba8FEE07": [
            "0x77Eb290DF0a5aaB15f681085FaeA1F653A3fc9b7"
          ],
          "0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf": [
            "0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf"
          ],
          "0xcfcEcFe2bD2FED07A9145222E8a7ad9Cf1Ccd22A": [
            "0xb20A4Bd059F5914a2F8B9c18881c637f79efb7df"
          ],
          "0x00320e2bAECf8A950749bf88709c9DB00cE8F59E": [
            "0xDe3b449686C60db3711cb6f8c916DB72888b8967"
          ],
          "0xA849EaaE994fb86Afa73382e9Bd88c2B6b18Dc71": [
            "0xe1A38a87c076b456C6B39ecA955fd62Ac27e5ef4"
          ],
          "0x02E335a43463e59007803BE260cf37637a3c9eC9": [
            "0x02E335a43463e59007803BE260cf37637a3c9eC9"
          ],
          "0x89fDfbb953f2A99A6340e6b906e0D5f577d446EC": [
            "0xA62f6691ccFF782245BF47992c9346C187d760d3"
          ],
          "0xbA3f535bbCcCcA2A154b573Ca6c5A49BAAE0a3ea": [
            "0x1B5F7fA46ED0F487F049C42f374cA4827d65A264"
          ],
          "0x103747924E74708139a9400e4Ab4BEA79FFFA380": [
            "0x5F674bF6d559229bDd29D642d2e0978f1E282722"
          ],
          "0x1305BDB2226449CDC1429e15C1522D92d718d282": [
            "0x23121a142b23cF7f3e5A2bb17b190BBF6CDBbE1e"
          ],
          "0x1F57da732A77636D913C9a75d685B26CC85DCC3A": [
            "0xEEB221A559F4aD1746F41460807E56d06D198A58"
          ],
          "0x09E4B2195FE9f7D19B33469E28EC57C90CfAA0FB": [
            "0x093e2b9b53F9508ABe33e1FeE011a97F6B30aA72"
          ],
          "0x7483e83b481c69a93cb025395194e0dc4F32d9C4": [
            "0xb3836098d1e94EC651D74D053d4a0813316B2a2f"
          ],
          "0x4e107a0000DB66f0E9Fd2039288Bf811dD1f9c74": [
            "0x4e107a0000DB66f0E9Fd2039288Bf811dD1f9c74"
          ],
          "0xdab396cCF3d84Cf2D07C4454e10C8A6F5b008D2b": [
            "0x9d50D46E641D3d2210f61ACe28733377F75E93e6",
            "0xB78e7D4C5d47Af92942321eD40419dab0E573810"
          ],
          "0x051f39E9815eBeef8965FCe6ff36A93431C28724": [
            "0xD78CaC09f62d19Eec389f1c5eAfe02DCb6f6DD43"
          ],
          "0x590830dFDf9A3F68aFCDdE2694773dEBDF267774": [
            "0x590830dFDf9A3F68aFCDdE2694773dEBDF267774"
          ],
          "0xc0c592D6f9804f4fA8316cb4B95B047EF8F95a56": [
            "0x5Fc2843838e65eb0B5d33654628F446d54602791"
          ],
          "0x8e0EeF788350f40255D86DFE8D91ec0AD3a4547F": [
            "0xe30C0801a516F0C67EbC0c4B45FfA7dCBd72ea9a"
          ],
          "0xe5e0b73380181273abCfD88695F52C4D0C825661": [
            "0xE0Cd4cAcDdcBF4f36e845407CE53E87717b6601d"
          ],
          "0xaB8Fff605D92753521522AD2c52e01a00B1702d9": [
            "0x61527cd3667243b0a80D41cb690237444e42a8d0"
          ],
          "0x06904a21f2dB805487FcBDC3b3Fe9607dAaa5D54": [
            "0x5262001CB1c8060BeA611B0a59518f56d83aB70E"
          ],
          "0xa20ce45A0348c88f484Cf92ac3278A46ba98A563": [
            "0xe9dC36dfB05AA56114E115157F82a2B3b28fF99E"
          ],
          "0x26001a4219e58f15f542778F818c5F2B03F27BaA": [
            "0x613a603cDdAeFe663aF2148e11e398c8225F41FC"
          ]
        },
        "version": "2.3.0"
      },
      "implementationNames": {
        "0x3154Cf16ccdb4C6d922629664174b904d80F2C35": "L1ChugSplashProxy",
        "0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A": "L1StandardBridge"
      },
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "name": "LidoExecutionLayerRewardsVault",
      "address": "0x388C818CA8B9251b393131C08a736A67ccB19297",
      "type": "Contract",
      "sourceHashes": [
        "0xd7305a2d008e26be8f8e72e060e9781b7b5e8b3037fad9d367b5ae5d624d08c1"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1653382011,
      "sinceBlock": 14834805,
      "values": {
        "$immutable": true,
        "LIDO": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "TREASURY": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"
      },
      "implementationNames": {
        "0x388C818CA8B9251b393131C08a736A67ccB19297": "LidoExecutionLayerRewardsVault"
      }
    },
    {
      "name": "CSEarlyAdoption",
      "address": "0x3D5148ad93e2ae5DedD1f7A8B3C19E7F67F90c0E",
      "type": "Contract",
      "sourceHashes": [
        "0x5e36c7f26b71bb611cc2a2b83eb557ff3593363fc3ba1c59ff2a32a5c2565122"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1728566351,
      "sinceBlock": 20935463,
      "values": {
        "$immutable": true,
        "CURVE_ID": 1,
        "MODULE": "0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F",
        "TREE_ROOT": "0x359e02c5c065c682839661c9bdfaf38db472629bf5f7a7e8f0261b31dc9332c2"
      },
      "implementationNames": {
        "0x3D5148ad93e2ae5DedD1f7A8B3C19E7F67F90c0E": "CSEarlyAdoption"
      }
    },
    {
      "name": "Lido Dao Agent",
      "address": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
      "type": "Contract",
      "template": "tokens/Lido/LidoDaoAgent",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0xa2a0001d171ac04fee445851ab0e1c994c3b76a49ae877c1b3d2b563ae8b8178"
      ],
      "proxyType": "EIP897 proxy",
      "description": "Custom role-based operations entrypoint for Lido.",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "ethereum:0x0De4Ea0184c2ad0BacA7183356Aea5B8d5Bf5c6e",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x4D4074628678Bd302921c20573EEa1ed38DdF7FB",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x4d72BFF1BeaC69925F8Bd12526a39BAAb069e5Da",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x852deD011285fe67063a08005c71a85690503Cee",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xD99CC66fEC647E68294C6477B40fC7E0F6F618D0",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xFdDf38947aFB03C621C71b06C9C70bce73f12999",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37",
        "ADD_PRESIGNED_HASH_ROLE": "0x0b29780bb523a130b3b01f231ef49ed2fa2781645591a0b0a44ca98f15a5994c",
        "ADD_PROTECTED_TOKEN_ROLE": "0x6eb2a499556bfa2872f5aa15812b956cc4a71b4d64eb3553f7073c7e41415aaa",
        "appId": "0x701a4fd1f5174d12a0f1d9ad2c88d0ad11ab6aad0ac72b7d9ce621815f8016a9",
        "DESIGNATE_SIGNER_ROLE": "0x23ce341656c3f14df6692eebd4757791e33662b7dcf9970c8308303da5472b7c",
        "designatedSigner": "0x0000000000000000000000000000000000000000",
        "ERC1271_INTERFACE_ID": "0xfb855dc9",
        "ERC1271_RETURN_INVALID_SIGNATURE": "0x00000000",
        "ERC1271_RETURN_VALID_SIGNATURE": "0x20c13b0b",
        "EXECUTE_ROLE": "0xcebf517aa4440d1d125e0355aae64401211d0848a23c02cc5d29a14822580ba4",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getProtectedTokensLength": 0,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37",
        "isDepositable": true,
        "isForwarder": true,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "PROTECTED_TOKENS_CAP": 10,
        "protectedTokens": [],
        "proxyType": 2,
        "REMOVE_PROTECTED_TOKEN_ROLE": "0x71eee93d500f6f065e38b27d242a756466a00a52a1dbcd6b4260f01a8640402a",
        "RUN_SCRIPT_ROLE": "0xb421f7ad7646747f3051c50c0b8e2377839296cd4973e27f63821d73e390338f",
        "SAFE_EXECUTE_ROLE": "0x0a1ad7b87f5846153c6d5a1f761d71c7d0cfd122384f56066cd33239b7933694",
        "TRANSFER_ROLE": "0x8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c"
      },
      "implementationNames": {
        "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c": "AppProxyUpgradeable",
        "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37": "Agent"
      }
    },
    {
      "address": "0x404335BcE530400a5814375E7Ec1FB55fAff3eA2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4200000000000000000000000000000000000010",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LegacyOracle",
      "address": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
      "type": "Contract",
      "template": "tokens/Lido/LegacyOracle",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0xacfebcd69dc18081773b5b8a5526a62a7653f6b71894e95de0ee1c661eb3a5d4"
      ],
      "proxyType": "EIP897 proxy",
      "ignoreInWatchMode": [
        "getBeaconSpec",
        "getCurrentEpochId",
        "getCurrentFrame",
        "getLastCompletedEpochId",
        "getLastCompletedReportDelta"
      ],
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0xa29b819654cE6224A222bb5f586920105E2D7E0E",
        "appId": "0x8b47ba2a8454ec799cd91646e7ec47168e91fd139b23f017455f3e5898aaba93",
        "getAccountingOracle": "0x852deD011285fe67063a08005c71a85690503Cee",
        "getBeaconSpec": {
          "epochsPerFrame": 225,
          "slotsPerEpoch": 32,
          "secondsPerSlot": 12,
          "genesisTime": 1606824023
        },
        "getContractVersion": 4,
        "getCurrentEpochId": 369864,
        "getCurrentFrame": {
          "frameEpochId": 369675,
          "frameStartTime": 1748779223,
          "frameEndTime": 1748865622
        },
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getLastCompletedEpochId": 369675,
        "getLastCompletedReportDelta": {
          "postTotalPooledEther": "9712033027760740633827249",
          "preTotalPooledEther": "9750705483524764079948551",
          "timeElapsed": 86400
        },
        "getLido": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getVersion": 4,
        "hasInitialized": true,
        "implementation": "0xa29b819654cE6224A222bb5f586920105E2D7E0E",
        "isDepositable": false,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "proxyType": 2
      },
      "implementationNames": {
        "0x442af784A788A5bd6F42A01Ebe9F287a871243fb": "AppProxyUpgradeable",
        "0xa29b819654cE6224A222bb5f586920105E2D7E0E": "LegacyOracle"
      }
    },
    {
      "name": "CSFeeOracle",
      "address": "0x4D4074628678Bd302921c20573EEa1ed38DdF7FB",
      "type": "Contract",
      "template": "tokens/Lido/CSFeeOracle",
      "sourceHashes": [
        "0x0e9e628d137fa4b53b03ce51b1b0e0122d524ca323f45751894d2e62c91c2651",
        "0xeac43c3fd7eae13460161196e3255017b4296896629f70133974d9e26bd2b742"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1728566339,
      "sinceBlock": 20935462,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0x919ac5C6c62B6ef7B05cF05070080525a7B0381E",
        "$pastUpgrades": [
          [
            "2024-10-10T13:18:59.000Z",
            "0x3dfff1bb9a5dd98d252ab44ae3ef8a002a4ab84ef6f35f5b7aeeae60f91ec32e",
            ["0x919ac5C6c62B6ef7B05cF05070080525a7B0381E"]
          ]
        ],
        "$upgradeCount": 1,
        "avgPerfLeewayBP": 500,
        "CONTRACT_MANAGER_ROLE": "0x8135f02737a6b32709c1f229001b55183df0d6abcb3022e8bae091ad43fd9e6d",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "feeDistributor": "0xD99CC66fEC647E68294C6477B40fC7E0F6F618D0",
        "GENESIS_TIME": 1606824023,
        "getConsensusContract": "0x71093efF8D8599b5fA340D665Ad60fA7C80688e4",
        "getConsensusVersion": 2,
        "getContractVersion": 1,
        "getResumeSinceTimestamp": 0,
        "isPaused": false,
        "MANAGE_CONSENSUS_CONTRACT_ROLE": "0x04a0afbbd09d5ad397fc858789da4f8edd59f5ca5098d70faa490babee945c3b",
        "MANAGE_CONSENSUS_VERSION_ROLE": "0xc31b1e4b732c5173dc51d519dfa432bad95550ecc4b0f9a61c2a558a2a8e4341",
        "PAUSE_INFINITELY": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x919ac5C6c62B6ef7B05cF05070080525a7B0381E",
        "proxy__getIsOssified": false,
        "RECOVERER_ROLE": "0xb3e25b5404b87e5a838579cb5d7481d61ad96ee284d38ec1e97c07ba64e7f6fc",
        "RESUME_ROLE": "0x2fc10cc8ae19568712f7a176fb4978616a610650813c9d05326c34abb62749c7",
        "SECONDS_PER_SLOT": 12,
        "SUBMIT_DATA_ROLE": "0x65fa0c17458517c727737e4153dd477fa3e328cf706640b0f68b1a285c5990da"
      },
      "implementationNames": {
        "0x4D4074628678Bd302921c20573EEa1ed38DdF7FB": "OssifiableProxy",
        "0x919ac5C6c62B6ef7B05cF05070080525a7B0381E": "CSFeeOracle"
      }
    },
    {
      "name": "CSAccounting",
      "address": "0x4d72BFF1BeaC69925F8Bd12526a39BAAb069e5Da",
      "type": "Contract",
      "template": "tokens/Lido/CSAccounting",
      "sourceHashes": [
        "0x0e9e628d137fa4b53b03ce51b1b0e0122d524ca323f45751894d2e62c91c2651",
        "0xc45cf7de845f22be0dadd18370faa3a228bdaa579f0c450f4459acbef0c91c05"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": ["getBondLockRetentionPeriod", "totalBondShares"],
      "sinceTimestamp": 1728566339,
      "sinceBlock": 20935462,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0x71FCD2a6F38B644641B0F46c345Ea03Daabf2758",
        "$pastUpgrades": [
          [
            "2024-10-10T13:18:59.000Z",
            "0x94ce92b9b05768e1908e5eab2097dc80da33715a37de5ffb149fc6142fa2a93b",
            ["0x71FCD2a6F38B644641B0F46c345Ea03Daabf2758"]
          ]
        ],
        "$upgradeCount": 1,
        "ACCOUNTING_MANAGER_ROLE": "0x40579467dba486691cc62fd8536d22c6d4dc9cdc7bc716ef2518422aa554c098",
        "chargePenaltyRecipient": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "CSM": "0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEFAULT_BOND_CURVE_ID": 0,
        "feeDistributor": "0xD99CC66fEC647E68294C6477B40fC7E0F6F618D0",
        "getBondLockRetentionPeriod": 4838400,
        "getResumeSinceTimestamp": 0,
        "isPaused": false,
        "LIDO": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "LIDO_LOCATOR": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "MANAGE_BOND_CURVES_ROLE": "0xd35e4a788498271198ec69c34f1dc762a1eee8200c111f598da1b3dde946783d",
        "MAX_BOND_LOCK_RETENTION_PERIOD": 31536000,
        "MAX_CURVE_LENGTH": 10,
        "MIN_BOND_LOCK_RETENTION_PERIOD": 2419200,
        "MIN_CURVE_LENGTH": 1,
        "PAUSE_INFINITELY": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x71FCD2a6F38B644641B0F46c345Ea03Daabf2758",
        "proxy__getIsOssified": false,
        "RECOVERER_ROLE": "0xb3e25b5404b87e5a838579cb5d7481d61ad96ee284d38ec1e97c07ba64e7f6fc",
        "RESET_BOND_CURVE_ROLE": "0xb5dffea014b759c493d63b1edaceb942631d6468998125e1b4fe427c99082134",
        "RESUME_ROLE": "0x2fc10cc8ae19568712f7a176fb4978616a610650813c9d05326c34abb62749c7",
        "SET_BOND_CURVE_ROLE": "0x645c9e6d2a86805cb5a28b1e4751c0dab493df7cf935070ce405489ba1a7bf72",
        "totalBondShares": "9045311759721314283749",
        "WITHDRAWAL_QUEUE": "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
        "WSTETH": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
      },
      "implementationNames": {
        "0x4d72BFF1BeaC69925F8Bd12526a39BAAb069e5Da": "OssifiableProxy",
        "0x71FCD2a6F38B644641B0F46c345Ea03Daabf2758": "CSAccounting"
      }
    },
    {
      "name": "NodeOperatorsRegistry",
      "address": "0x55032650b14df07b85bF18A3a3eC8E0Af2e028d5",
      "type": "Contract",
      "template": "tokens/Lido/NodeOperatorsRegistry",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0x3cbd0a87fa76b571f664c2e9d40dc8c24a1b88642270b2ebf0247128c866a937"
      ],
      "proxyType": "EIP897 proxy",
      "ignoreInWatchMode": [
        "getStakingModuleSummary",
        "getActiveNodeOperatorsCount",
        "getNodeOperatorsCount"
      ],
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0x1770044a38402e3CfCa2Fcfa0C84a093c9B42135",
        "appId": "0x7071f283424072341f856ac9e947e7ec0eb68719f757a7e785979b6b8717579d",
        "getActiveNodeOperatorsCount": 37,
        "getContractVersion": 3,
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getLocator": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "getNodeOperatorsCount": 39,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getRewardDistributionState": 2,
        "getStakingModuleSummary": {
          "totalExitedValidators": 109581,
          "totalDepositedValidators": 376774,
          "depositableValidatorsCount": 38451
        },
        "getStuckPenaltyDelay": 432000,
        "getType": "0x637572617465642d6f6e636861696e2d76310000000000000000000000000000",
        "hasInitialized": true,
        "implementation": "0x1770044a38402e3CfCa2Fcfa0C84a093c9B42135",
        "isDepositable": false,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "MANAGE_NODE_OPERATOR_ROLE": "0x78523850fdd761612f46e844cf5a16bda6b3151d6ae961fd7e8e7b92bfbca7f8",
        "MANAGE_SIGNING_KEYS": "0x75abc64490e17b40ea1e66691c3eb493647b24430b358bd87ec3e5127f1621ee",
        "MAX_NODE_OPERATOR_NAME_LENGTH": 255,
        "MAX_NODE_OPERATORS_COUNT": 200,
        "MAX_STUCK_PENALTY_DELAY": 31536000,
        "proxyType": 2,
        "SET_NODE_OPERATOR_LIMIT_ROLE": "0x07b39e0faf2521001ae4e58cb9ffd3840a63e205d288dc9c93c3774f0d794754",
        "STAKING_ROUTER_ROLE": "0xbb75b874360e0bfd87f964eadd8276d8efb7c942134fc329b513032d0803e0c6"
      },
      "implementationNames": {
        "0x55032650b14df07b85bF18A3a3eC8E0Af2e028d5": "AppProxyUpgradeable",
        "0x1770044a38402e3CfCa2Fcfa0C84a093c9B42135": "NodeOperatorsRegistry"
      }
    },
    {
      "address": "0x590Cb94bE977a769d9E7D95D9eff8DeAe82e430C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x59232aC80E6d403b6381393e52f4665ECA328558",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Lido DAO Token",
      "address": "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",
      "type": "Contract",
      "template": "tokens/Lido/MiniMeToken",
      "sourceHashes": [
        "0x1098670857010f37e15b128a92baa1ccb42e961bd5e02b478a0c69fd8d66eb46"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": true,
        "controller": "0xf73a1260d222f447210581DDf212D915c09a3249",
        "creationBlock": 11473216,
        "decimals": 18,
        "name": "Lido DAO Token",
        "parentSnapShotBlock": 0,
        "parentToken": "0x0000000000000000000000000000000000000000",
        "symbol": "LDO",
        "tokenFactory": "0x909d05F384D0663eD4BE59863815aB43b4f347Ec",
        "totalSupply": "1000000000000000000000000000",
        "transfersEnabled": true,
        "version": "MMT_0.1"
      },
      "implementationNames": {
        "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32": "MiniMeToken"
      }
    },
    {
      "address": "0x5C7DcaECB4D8e49Ea2487c5Cc23C5131Ddb2252F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x5fd0dDbC3351d009eb3f88DE7Cd081a614C519F1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x61c91ECd902EB56e314bB2D5c5C07785444Ea1c8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OracleReportSanityChecker",
      "address": "0x6232397ebac4f5772e53285B26c47914E9461E75",
      "type": "Contract",
      "template": "tokens/Lido/OracleReportSanityChecker",
      "sourceHashes": [
        "0xd50222dc8dfe7cd169366ab34979e2962975f9b018fa27dc1443d09a8698dc92"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1728395495,
      "sinceBlock": 20921274,
      "values": {
        "$immutable": true,
        "ALL_LIMITS_MANAGER_ROLE": "0x5bf88568a012dfc9fe67407ad6775052bddc4ac89902dea1f4373ef5d9f1e35b",
        "ANNUAL_BALANCE_INCREASE_LIMIT_MANAGER_ROLE": "0x12c02753cd3d584dc4bb965eb0c88392c4c4d7c00433fdb7490d33c61ea57622",
        "APPEARED_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE": "0x14ca7b84baa11a976283347b0159b8ddf2dcf5fd5cf613cc567a3423cf510119",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXITED_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE": "0x60b9982471bc0620c7b74959f48a86c55c92c11876fddc5b0b54d1ec47153e5d",
        "getLidoLocator": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "getMaxPositiveTokenRebase": 750000,
        "getOracleReportLimits": {
          "exitedValidatorsPerDayLimit": 3600,
          "appearedValidatorsPerDayLimit": 1800,
          "annualBalanceIncreaseBPLimit": 1000,
          "simulatedShareRateDeviationBPLimit": 50,
          "maxValidatorExitRequestsPerReport": 600,
          "maxItemsPerExtraDataTransaction": 8,
          "maxNodeOperatorsPerExtraDataItem": 24,
          "requestTimestampMargin": 7680,
          "maxPositiveTokenRebase": 750000,
          "initialSlashingAmountPWei": 8,
          "inactivityPenaltiesAmountPWei": 101,
          "clBalanceOraclesErrorUpperBPLimit": 50
        },
        "INITIAL_SLASHING_AND_PENALTIES_MANAGER_ROLE": "0xebfa317a5d279811b024586b17a50f48924bce86f6293b233927322d7209b507",
        "MAX_ITEMS_PER_EXTRA_DATA_TRANSACTION_ROLE": "0x13445b811594f3a8800b82296d63f371c695d2f86c1069c899ded3d73f523d2e",
        "MAX_NODE_OPERATORS_PER_EXTRA_DATA_ITEM_ROLE": "0xb3f2d16385bde8a7121e101a021aff43bbe4d4137a587832caf1f583b9d34395",
        "MAX_POSITIVE_TOKEN_REBASE_MANAGER_ROLE": "0x78de2bab4a3a0c88f50b6bb7c2290e0eb46bc61d575eae694d8bffbc2ca98c92",
        "MAX_VALIDATOR_EXIT_REQUESTS_PER_REPORT_ROLE": "0x9925400e72399e0a89e9b346878fc47ac0031526d0e060e33ff372d7a5d11ba8",
        "REQUEST_TIMESTAMP_MARGIN_MANAGER_ROLE": "0x2f8719116fbba3aba2a39759e34dcd29ea3516f7568c8321695aaea208280cd3",
        "SECOND_OPINION_MANAGER_ROLE": "0xaa0e0f619f5a9368ee035bae759cfe7da8958f44bd71456a05198effc68ea647",
        "secondOpinionOracle": "0x0000000000000000000000000000000000000000",
        "SHARE_RATE_DEVIATION_LIMIT_MANAGER_ROLE": "0x7b21c0949109e9e143f66d6aa1f8a065b3f4ab47ee9f84f6837fd0490eace4d5"
      },
      "implementationNames": {
        "0x6232397ebac4f5772e53285B26c47914E9461E75": "OracleReportSanityChecker"
      }
    },
    {
      "address": "0x64F4396bb0669C72858Cc50C779b48EB25F45770",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HashConsensus",
      "address": "0x71093efF8D8599b5fA340D665Ad60fA7C80688e4",
      "type": "Contract",
      "template": "tokens/Lido/HashConsensus",
      "sourceHashes": [
        "0xd7c073e5462dc74227ab219c6db299253e6a83e1a470f27a9d5dcff04fd6b46f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getConsensusState",
        "getCurrentFrame",
        "getFastLaneMembers",
        "getFrameConfig",
        "getMembers",
        "getReportVariants"
      ],
      "sinceTimestamp": 1728566351,
      "sinceBlock": 20935463,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          },
          "MANAGE_MEMBERS_AND_QUORUM_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DISABLE_CONSENSUS_ROLE": "0x10b016346186602d93fc7a27ace09ba944baf9453611b186d36acd3d3d667dc0",
        "getChainConfig": {
          "slotsPerEpoch": 32,
          "secondsPerSlot": 12,
          "genesisTime": 1606824023
        },
        "getConsensusState": {
          "refSlot": 11664479,
          "consensusReport": "0x13079fe34de3fcb7d303791fdbf6569beb7bbdc26c05c9174e56c7004ff652b7",
          "isReportProcessing": true
        },
        "getCurrentFrame": {
          "refSlot": 11664479,
          "reportProcessingDeadlineSlot": 11866079
        },
        "getFastLaneMembers": {
          "addresses": [
            "0x61c91ECd902EB56e314bB2D5c5C07785444Ea1c8",
            "0xe57B3792aDCc5da47EF4fF588883F0ee0c9835C9",
            "0x285f8537e1dAeEdaf617e96C742F2Cf36d63CcfB",
            "0x73181107c8D9ED4ce0bbeF7A0b4ccf3320C41d12",
            "0xA7410857ABbf75043d61ea54e07D57A6EB6EF186"
          ],
          "lastReportedRefSlots": [11261279, 11664479, 0, 11462879, 11664479]
        },
        "getFrameConfig": {
          "initialEpoch": 326715,
          "epochsPerFrame": 6300,
          "fastLaneLengthSlots": 1800
        },
        "getInitialRefSlot": 10454879,
        "getMembers": {
          "addresses": [
            "0x73181107c8D9ED4ce0bbeF7A0b4ccf3320C41d12",
            "0xA7410857ABbf75043d61ea54e07D57A6EB6EF186",
            "0x404335BcE530400a5814375E7Ec1FB55fAff3eA2",
            "0x946D3b081ed19173dC83Cd974fC69e1e760B7d78",
            "0x007DE4a5F7bc37E2F26c0cb2E8A95006EE9B89b5",
            "0xc79F702202E3A6B0B6310B537E786B9ACAA19BAf",
            "0x61c91ECd902EB56e314bB2D5c5C07785444Ea1c8",
            "0xe57B3792aDCc5da47EF4fF588883F0ee0c9835C9",
            "0x285f8537e1dAeEdaf617e96C742F2Cf36d63CcfB"
          ],
          "lastReportedRefSlots": [
            11462879, 11664479, 11462879, 11664479, 11462879, 11664479,
            11261279, 11664479, 0
          ]
        },
        "getQuorum": 5,
        "getReportProcessor": "0x4D4074628678Bd302921c20573EEa1ed38DdF7FB",
        "getReportVariants": {
          "variants": [
            "0x13079fe34de3fcb7d303791fdbf6569beb7bbdc26c05c9174e56c7004ff652b7"
          ],
          "support": [5]
        },
        "MANAGE_FAST_LANE_CONFIG_ROLE": "0x4af6faa30fabb2c4d8d567d06168f9be8adb583156c1ecb424b4832a7e4d6717",
        "MANAGE_FRAME_CONFIG_ROLE": "0x921f40f434e049d23969cbe68d9cf3ac1013fbe8945da07963af6f3142de6afe",
        "MANAGE_MEMBERS_AND_QUORUM_ROLE": "0x66a484cf1a3c6ef8dfd59d24824943d2853a29d96f34a01271efc55774452a51",
        "MANAGE_REPORT_PROCESSOR_ROLE": "0xc5219a8d2d0107a57aad00b22081326d173df87bad251126f070df2659770c3e"
      },
      "implementationNames": {
        "0x71093efF8D8599b5fA340D665Ad60fA7C80688e4": "HashConsensus"
      }
    },
    {
      "address": "0x73181107c8D9ED4ce0bbeF7A0b4ccf3320C41d12",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7383DDEd70cCCFd99835612C4148fA986e9DE560",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7912Fa976BcDe9c2cf728e213e892AD7588E6AaF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7A3a1bE19470919318aAD57ba162891a97e2982E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Wrapped liquid staked Ether 2.0 Token",
      "address": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
      "type": "Contract",
      "template": "tokens/Lido/wstETH",
      "sourceHashes": [
        "0x6b938c3d38678ebb00f3860def4bdf9d5d8ab7008a6d598cc109fdf7a6c34e0e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["tokensPerStEth", "stEthPerToken", "totalSupply"],
      "sinceTimestamp": 1613752640,
      "sinceBlock": 11888477,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xd4a8ff90a402dc7d4fcbf60f5488291263c743ccff180e139f47d139cedfd5fe",
        "name": "Wrapped liquid staked Ether 2.0",
        "stETH": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "stEthPerToken": "1204284668948239435",
        "symbol": "wstETH",
        "tokensPerStEth": "830368455054193121",
        "totalSupply": "3525576440306614623064546"
      },
      "implementationNames": {
        "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0": "WstETH"
      }
    },
    {
      "name": "HashConsensus",
      "address": "0x7FaDB6358950c5fAA66Cb5EB8eE5147De3df355a",
      "type": "Contract",
      "template": "tokens/Lido/HashConsensus",
      "sourceHashes": [
        "0xdcb2da84a44fbac1b8d7ea814fd34325ac06bb8169fad7507a00835a3ffb25de"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getConsensusState",
        "getCurrentFrame",
        "getFastLaneMembers",
        "getFrameConfig",
        "getMembers",
        "getReportVariants"
      ],
      "sinceTimestamp": 1683024059,
      "sinceBlock": 17172558,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          },
          "MANAGE_MEMBERS_AND_QUORUM_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DISABLE_CONSENSUS_ROLE": "0x10b016346186602d93fc7a27ace09ba944baf9453611b186d36acd3d3d667dc0",
        "getChainConfig": {
          "slotsPerEpoch": 32,
          "secondsPerSlot": 12,
          "genesisTime": 1606824023
        },
        "getConsensusState": {
          "refSlot": 11834399,
          "consensusReport": "0xf7de144ac5813c8d336762a86e0cebeb71a16b36c032a2587ab495327225bf43",
          "isReportProcessing": true
        },
        "getCurrentFrame": {
          "refSlot": 11834399,
          "reportProcessingDeadlineSlot": 11836799
        },
        "getFastLaneMembers": {
          "addresses": [
            "0x404335BcE530400a5814375E7Ec1FB55fAff3eA2",
            "0x946D3b081ed19173dC83Cd974fC69e1e760B7d78",
            "0x007DE4a5F7bc37E2F26c0cb2E8A95006EE9B89b5",
            "0xc79F702202E3A6B0B6310B537E786B9ACAA19BAf",
            "0x61c91ECd902EB56e314bB2D5c5C07785444Ea1c8"
          ],
          "lastReportedRefSlots": [
            11834399, 11834399, 11834399, 11834399, 11817599
          ]
        },
        "getFrameConfig": {
          "initialEpoch": 201600,
          "epochsPerFrame": 75,
          "fastLaneLengthSlots": 100
        },
        "getInitialRefSlot": 6451199,
        "getMembers": {
          "addresses": [
            "0x73181107c8D9ED4ce0bbeF7A0b4ccf3320C41d12",
            "0xA7410857ABbf75043d61ea54e07D57A6EB6EF186",
            "0x404335BcE530400a5814375E7Ec1FB55fAff3eA2",
            "0x946D3b081ed19173dC83Cd974fC69e1e760B7d78",
            "0x007DE4a5F7bc37E2F26c0cb2E8A95006EE9B89b5",
            "0xc79F702202E3A6B0B6310B537E786B9ACAA19BAf",
            "0x61c91ECd902EB56e314bB2D5c5C07785444Ea1c8",
            "0xe57B3792aDCc5da47EF4fF588883F0ee0c9835C9",
            "0x285f8537e1dAeEdaf617e96C742F2Cf36d63CcfB"
          ],
          "lastReportedRefSlots": [
            11834399, 11834399, 11834399, 11834399, 11834399, 11834399,
            11817599, 11834399, 11834399
          ]
        },
        "getQuorum": 5,
        "getReportProcessor": "0x0De4Ea0184c2ad0BacA7183356Aea5B8d5Bf5c6e",
        "getReportVariants": {
          "variants": [
            "0xf7de144ac5813c8d336762a86e0cebeb71a16b36c032a2587ab495327225bf43"
          ],
          "support": [8]
        },
        "MANAGE_FAST_LANE_CONFIG_ROLE": "0x4af6faa30fabb2c4d8d567d06168f9be8adb583156c1ecb424b4832a7e4d6717",
        "MANAGE_FRAME_CONFIG_ROLE": "0x921f40f434e049d23969cbe68d9cf3ac1013fbe8945da07963af6f3142de6afe",
        "MANAGE_MEMBERS_AND_QUORUM_ROLE": "0x66a484cf1a3c6ef8dfd59d24824943d2853a29d96f34a01271efc55774452a51",
        "MANAGE_REPORT_PROCESSOR_ROLE": "0xc5219a8d2d0107a57aad00b22081326d173df87bad251126f070df2659770c3e"
      },
      "implementationNames": {
        "0x7FaDB6358950c5fAA66Cb5EB8eE5147De3df355a": "HashConsensus"
      }
    },
    {
      "name": "AccountingOracle",
      "address": "0x852deD011285fe67063a08005c71a85690503Cee",
      "type": "Contract",
      "template": "tokens/Lido/AccountingOracle",
      "sourceHashes": [
        "0x04c21a54dfbc4ca3baf7ce93d62b487e1071a6439bde71a1896d76f073a66848",
        "0x8eb8fe1367a0eb2d485632fc86c4e0eea79ee0a2dd3f72a2982a622b3c62f1ba"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": ["getConsensusReport", "getProcessingState"],
      "sinceTimestamp": 1683023999,
      "sinceBlock": 17172553,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0x0e65898527E77210fB0133D00dd4C0E86Dc29bC7",
        "$pastUpgrades": [
          [
            "2023-05-02T10:39:59.000Z",
            "0x3def88f27741216b131de2861cf89af2ca2ac4242b384ee33dca8cc70c51c8dd",
            ["0x6F6541C2203196fEeDd14CD2C09550dA1CbEDa31"]
          ],
          [
            "2023-05-15T15:15:59.000Z",
            "0x592d68a259af899fb435da0ac08c2fd500cb423f37f1d8ce8e3120cb84186b21",
            ["0xF3c5E0A67f32CF1dc07a8817590efa102079a1aF"]
          ],
          [
            "2024-10-25T16:03:23.000Z",
            "0x0078b3e0cecb3b50c78a22e0b1a985e6cde3bf431e9cb3b2ba4e50260122d542",
            ["0x0e65898527E77210fB0133D00dd4C0E86Dc29bC7"]
          ]
        ],
        "$upgradeCount": 3,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXTRA_DATA_FORMAT_EMPTY": 0,
        "EXTRA_DATA_FORMAT_LIST": 1,
        "EXTRA_DATA_TYPE_EXITED_VALIDATORS": 2,
        "EXTRA_DATA_TYPE_STUCK_VALIDATORS": 1,
        "GENESIS_TIME": 1606824023,
        "getConsensusContract": "0xD624B08C83bAECF0807Dd2c6880C3154a5F0B288",
        "getConsensusReport": {
          "hash": "0x032e82eccc07b6d1ce34d07529e0a4991908d9de2055e23aa6ce059b497f4f18",
          "refSlot": 11829599,
          "processingDeadlineTime": 1748865611,
          "processingStarted": true
        },
        "getConsensusVersion": 3,
        "getContractVersion": 2,
        "getProcessingState": {
          "currentFrameRefSlot": 11829599,
          "processingDeadlineTime": 1748865611,
          "mainDataHash": "0x032e82eccc07b6d1ce34d07529e0a4991908d9de2055e23aa6ce059b497f4f18",
          "mainDataSubmitted": true,
          "extraDataHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extraDataFormat": 0,
          "extraDataSubmitted": true,
          "extraDataItemsCount": 0,
          "extraDataItemsSubmitted": 0
        },
        "LEGACY_ORACLE": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
        "LIDO": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "LOCATOR": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "MANAGE_CONSENSUS_CONTRACT_ROLE": "0x04a0afbbd09d5ad397fc858789da4f8edd59f5ca5098d70faa490babee945c3b",
        "MANAGE_CONSENSUS_VERSION_ROLE": "0xc31b1e4b732c5173dc51d519dfa432bad95550ecc4b0f9a61c2a558a2a8e4341",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x0e65898527E77210fB0133D00dd4C0E86Dc29bC7",
        "proxy__getIsOssified": false,
        "SECONDS_PER_SLOT": 12,
        "SUBMIT_DATA_ROLE": "0x65fa0c17458517c727737e4153dd477fa3e328cf706640b0f68b1a285c5990da"
      },
      "implementationNames": {
        "0x852deD011285fe67063a08005c71a85690503Cee": "OssifiableProxy",
        "0x0e65898527E77210fB0133D00dd4C0E86Dc29bC7": "AccountingOracle"
      }
    },
    {
      "name": "EVMScriptRegistry",
      "address": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
      "type": "Contract",
      "template": "tokens/Lido/EVMScriptRegistry",
      "sourceHashes": [
        "0x3cab9c9a12a52c625f55b2d3d9693f8eb062cb0d41841589b557888ad01afced",
        "0x00350407c4a32b62d60dbac5ac3093bf4bffd482f40b2df2a9cd3268365b84e5"
      ],
      "proxyType": "EIP897 proxy",
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": true,
        "$implementation": "0xBF1Ce0Bc4EdaAD8e576b3b55e19c4C15Cf6999eb",
        "appId": "0xddbcfd564f642ab5627cf68b9b7d374fb4f8a36e941a75d89c87998cef03bd61",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0xBF1Ce0Bc4EdaAD8e576b3b55e19c4C15Cf6999eb",
        "isDepositable": false,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "proxyType": 1,
        "REGISTRY_ADD_EXECUTOR_ROLE": "0xc4e90f38eea8c4212a009ca7b8947943ba4d4a58d19b683417f65291d1cd9ed2",
        "REGISTRY_MANAGER_ROLE": "0xf7a450ef335e1892cb42c8ca72e7242359d7711924b75db5717410da3f614aa3"
      },
      "implementationNames": {
        "0x853cc0D5917f49B57B8e9F89e491F5E18919093A": "AppProxyPinned",
        "0xBF1Ce0Bc4EdaAD8e576b3b55e19c4C15Cf6999eb": "EVMScriptRegistry"
      }
    },
    {
      "name": "WithdrawalQueueERC721",
      "address": "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
      "type": "Contract",
      "template": "tokens/Lido/WithdrawalQueueERC721",
      "sourceHashes": [
        "0x04c21a54dfbc4ca3baf7ce93d62b487e1071a6439bde71a1896d76f073a66848",
        "0x700596a656c09529255fe261db91a5a98b3795dc7aac6bd680e1b9d5ad5f2f5f"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "getLastFinalizedRequestId",
        "getLastRequestId",
        "getLockedEtherAmount",
        "unfinalizedRequestNumber",
        "unfinalizedStETH"
      ],
      "sinceTimestamp": 1683023927,
      "sinceBlock": 17172547,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0xE42C659Dc09109566720EA8b2De186c2Be7D94D9",
        "$pastUpgrades": [
          [
            "2023-05-02T10:38:47.000Z",
            "0x98c2170be034f750f5006cb69ea0aeeaf0858b11f6324ee53d582fa4dd49bc1a",
            ["0x6F6541C2203196fEeDd14CD2C09550dA1CbEDa31"]
          ],
          [
            "2023-05-15T15:15:59.000Z",
            "0x592d68a259af899fb435da0ac08c2fd500cb423f37f1d8ce8e3120cb84186b21",
            ["0xE42C659Dc09109566720EA8b2De186c2Be7D94D9"]
          ]
        ],
        "$upgradeCount": 2,
        "BUNKER_MODE_DISABLED_TIMESTAMP": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "bunkerModeSinceTimestamp": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "FINALIZE_ROLE": "0x485191a2ef18512555bd4426d18a716ce8e98c80ec2de16394dcf86d7d91bc80",
        "getBaseURI": "https://wq-api.lido.fi/v1/nft",
        "getContractVersion": 1,
        "getLastFinalizedRequestId": 81903,
        "getLastRequestId": 82182,
        "getLockedEtherAmount": "23552339678121055544879",
        "getNFTDescriptorAddress": "0x0000000000000000000000000000000000000000",
        "getResumeSinceTimestamp": 1684163759,
        "isBunkerModeActive": false,
        "isPaused": false,
        "MANAGE_TOKEN_URI_ROLE": "0xbe882725f03f148e7c5a5e63ec45f182f7dcdb6bb8b92311ade5a6d138e0ee0f",
        "MAX_BATCHES_LENGTH": 36,
        "MAX_STETH_WITHDRAWAL_AMOUNT": "1000000000000000000000",
        "MIN_STETH_WITHDRAWAL_AMOUNT": 100,
        "name": "Lido: stETH Withdrawal NFT",
        "ORACLE_ROLE": "0x68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef1",
        "PAUSE_INFINITELY": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0xE42C659Dc09109566720EA8b2De186c2Be7D94D9",
        "proxy__getIsOssified": false,
        "RESUME_ROLE": "0x2fc10cc8ae19568712f7a176fb4978616a610650813c9d05326c34abb62749c7",
        "STETH": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "symbol": "unstETH",
        "unfinalizedRequestNumber": 279,
        "unfinalizedStETH": "25036714512805509870425",
        "WSTETH": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
      },
      "implementationNames": {
        "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1": "OssifiableProxy",
        "0xE42C659Dc09109566720EA8b2De186c2Be7D94D9": "WithdrawalQueueERC721"
      }
    },
    {
      "name": "EIP712StETH",
      "address": "0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7",
      "type": "Contract",
      "sourceHashes": [
        "0x15185b2d9f11dcf2ea4d005741fa941922e233e89fc5742793ebfb0ca05897c4"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1683023915,
      "sinceBlock": 17172546,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7": "EIP712StETH"
      }
    },
    {
      "name": "MiniMeTokenFactory",
      "address": "0x909d05F384D0663eD4BE59863815aB43b4f347Ec",
      "type": "Contract",
      "sourceHashes": [
        "0xab441847b55bfdc5cf90792906cf0effcd43d3390a7cc05e690aad5fb349c19b"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1540644725,
      "sinceBlock": 6593191,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x909d05F384D0663eD4BE59863815aB43b4f347Ec": "MiniMeTokenFactory"
      }
    },
    {
      "name": "Safe",
      "address": "0x909d0CB383Ecc77e44daE5d0146cF476f611f62b",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "ethereum:0xCa14076A3cec95448BaD179cc19B351A4204B88B",
          "role": "admin"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1732026023,
      "sinceBlock": 21222337,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x2914767E232FD7708ab06bA60dB16c36C555751d",
          "0x04D5b12b196a8CADEB2F476F22Ffb1334Ef9F94c",
          "0x5C7DcaECB4D8e49Ea2487c5Cc23C5131Ddb2252F",
          "0x0762bCc4D604Aa3B5122C7D6571Cf5368EF3F09c",
          "0xF6AB8BD99EfE2515C45d6FeE8Ea32738877EFbD8",
          "0x16aB869E6dEe6eF9068E5cF75C1a5A57981257CD",
          "0xFf713991196F8a9D6838bA82C9Bb3579F8Cc0D90",
          "0x7A3a1bE19470919318aAD57ba162891a97e2982E",
          "0x590Cb94bE977a769d9E7D95D9eff8DeAe82e430C",
          "0x7383DDEd70cCCFd99835612C4148fA986e9DE560",
          "0x10277B1922e56d1B69f4dCe5A35696C791F78cac",
          "0xfaECfa5E4180dd55D15396F804Fd00C6dbA233B0"
        ],
        "$threshold": 7,
        "domainSeparator": "0xe0baba6d73073d557401566c0d2e72e701cffd0247dd8e920aa67297b0abfef3",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "7 of 12 (58%)",
        "nonce": 6,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0x909d0CB383Ecc77e44daE5d0146cF476f611f62b": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      }
    },
    {
      "address": "0x946D3b081ed19173dC83Cd974fC69e1e760B7d78",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x955B978F3ee7818dA71fA25c676062E6BC462Fec",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ACL",
      "address": "0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb",
      "type": "Contract",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0x766bf5f8bd85cd18a36ec23449bcbb22c66fbc01f44a2e38ff2a06dd5919eb4b"
      ],
      "proxyType": "EIP897 proxy",
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0x9f3b9198911054B122fDb865f8A5Ac516201c339",
        "ANY_ENTITY": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
        "appId": "0xe3262375f45a6e2026b7e7b18c2b807434f2508fe1a2a3dfb493c7df8f4aad6a",
        "BURN_ENTITY": "0x0000000000000000000000000000000000000001",
        "CREATE_PERMISSIONS_ROLE": "0x0b719b33c83b8e5d300c521cb8b54ae9bd933996a14bef8c2f4e0285d2d2400a",
        "EMPTY_PARAM_HASH": "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0x9f3b9198911054B122fDb865f8A5Ac516201c339",
        "isDepositable": false,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "NO_PERMISSION": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "proxyType": 2
      },
      "implementationNames": {
        "0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb": "AppProxyUpgradeable",
        "0x9f3b9198911054B122fDb865f8A5Ac516201c339": "ACL"
      }
    },
    {
      "address": "0xa56b128Ea2Ea237052b0fA2a96a387C0E43157d8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xA7410857ABbf75043d61ea54e07D57A6EB6EF186",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Mog Coin Token",
      "address": "0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a",
      "type": "Contract",
      "sourceHashes": [
        "0x4555f9c967edaed432d4b63f21fa90662252eb8abdcb6ac5a5771bf07b10a655"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1689822407,
      "sinceBlock": 17731591,
      "values": {
        "_maxTxAmount": "390570159911439123354797210149241",
        "_maxWalletToken": "390570159911439123354797210149241",
        "_owner": "0x0000000000000000000000000000000000000000",
        "$immutable": true,
        "decimals": 18,
        "getOwner": "0x0000000000000000000000000000000000000000",
        "name": "Mog Coin",
        "owner": "0x0000000000000000000000000000000000000000",
        "pair": "0xc2eaB7d33d3cB97692eCB231A5D0e4A649Cb539d",
        "router": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
        "showBacking": [0, 0, 0, 0, 0],
        "showSupply": "360447681430949687966814425289995",
        "swapEnabled": true,
        "swapThreshold": "2944830000000000000000000000000",
        "symbol": "Mog",
        "totalFee": 4,
        "totalSupply": "390570159911439123354797210149241",
        "TradingOpen": true
      },
      "errors": { "showBacking": "Processing error occurred." },
      "implementationNames": {
        "0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a": "MOG"
      }
    },
    {
      "name": "Liquid staked Ether 2.0 Token",
      "address": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
      "type": "Contract",
      "template": "tokens/Lido/stETH",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0xdc88f413a8e8c93a3ee2d7f0ca94090b4b1feb8393663061d7bccedc81812975"
      ],
      "proxyType": "EIP897 proxy",
      "ignoreInWatchMode": [
        "getFeeDistribution",
        "totalSupply",
        "getBeaconStat",
        "getBufferedEther",
        "getDepositableEther",
        "getStakeLimitFullInfo",
        "getTotalPooledEther",
        "getTotalShares",
        "getCurrentStakeLimit"
      ],
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb",
        "appId": "0x3ca7c3e38968823ccb4c78ea688df41356f182ae1d159e4ee608d30d68cef320",
        "canDeposit": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x260e7e1a220ea89b9454cbcdc1fcc44087325df199a3986e560d75db18b2e253",
        "eip712Domain": {
          "name": "Liquid staked Ether 2.0",
          "version": "2",
          "chainId": 1,
          "verifyingContract": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"
        },
        "getBeaconStat": {
          "depositedValidators": 389746,
          "beaconValidators": 389746,
          "beaconBalance": "8964780383151584000000000"
        },
        "getBufferedEther": "2583034245932486095493",
        "getContractVersion": 2,
        "getCurrentStakeLimit": "150000000000000000000000",
        "getDepositableEther": 0,
        "getEIP712StETH": "0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getFee": 999,
        "getFeeDistribution": {
          "treasuryFeeBasisPoints": 5085,
          "insuranceFeeBasisPoints": 0,
          "operatorsFeeBasisPoints": 4914
        },
        "getInitializationBlock": 11473216,
        "getLidoLocator": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "getOracle": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getStakeLimitFullInfo": {
          "isStakingPaused": false,
          "isStakingLimitSet": true,
          "currentStakeLimit": "150000000000000000000000",
          "maxStakeLimit": "150000000000000000000000",
          "maxStakeLimitGrowthBlocks": 6400,
          "prevStakeLimit": "149872078855783918488573",
          "prevStakeBlockNumber": 22615717
        },
        "getTotalPooledEther": "8967363417397516486095493",
        "getTotalShares": "7446215706813865297542787",
        "getTreasury": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getWithdrawalCredentials": "0x010000000000000000000000b9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
        "hasInitialized": true,
        "implementation": "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb",
        "isDepositable": false,
        "isPetrified": false,
        "isStakingPaused": false,
        "isStopped": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "name": "Liquid staked Ether 2.0",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "proxyType": 2,
        "RESUME_ROLE": "0x2fc10cc8ae19568712f7a176fb4978616a610650813c9d05326c34abb62749c7",
        "STAKING_CONTROL_ROLE": "0xa42eee1333c0758ba72be38e728b6dadb32ea767de5b4ddbaea1dae85b1b051f",
        "STAKING_PAUSE_ROLE": "0x84ea57490227bc2be925c684e2a367071d69890b629590198f4125a018eb1de8",
        "symbol": "stETH",
        "totalSupply": "8967363417397516486095493",
        "UNSAFE_CHANGE_DEPOSITED_VALIDATORS_ROLE": "0xe6dc5d79630c61871e99d341ad72c5a052bed2fc8c79e5a4480a7cd31117576c"
      },
      "implementationNames": {
        "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84": "AppProxyUpgradeable",
        "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb": "Lido"
      }
    },
    {
      "name": "NodeOperatorsRegistry",
      "address": "0xaE7B191A31f627b4eB1d4DaC64eaB9976995b433",
      "type": "Contract",
      "template": "tokens/Lido/NodeOperatorsRegistry",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0x3cbd0a87fa76b571f664c2e9d40dc8c24a1b88642270b2ebf0247128c866a937"
      ],
      "proxyType": "EIP897 proxy",
      "ignoreInWatchMode": [
        "getStakingModuleSummary",
        "getActiveNodeOperatorsCount",
        "getNodeOperatorsCount"
      ],
      "sinceTimestamp": 1701921935,
      "sinceBlock": 18731922,
      "values": {
        "$immutable": false,
        "$implementation": "0x1770044a38402e3CfCa2Fcfa0C84a093c9B42135",
        "appId": "0xe1635b63b5f7b5e545f2a637558a4029dea7905361a2f0fc28c66e9136cf86a4",
        "getActiveNodeOperatorsCount": 82,
        "getContractVersion": 3,
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 19291056,
        "getLocator": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "getNodeOperatorsCount": 82,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getRewardDistributionState": 2,
        "getStakingModuleSummary": {
          "totalExitedValidators": 519,
          "totalDepositedValidators": 6965,
          "depositableValidatorsCount": 2359
        },
        "getStuckPenaltyDelay": 432000,
        "getType": "0x637572617465642d6f6e636861696e2d76310000000000000000000000000000",
        "hasInitialized": true,
        "implementation": "0x1770044a38402e3CfCa2Fcfa0C84a093c9B42135",
        "isDepositable": false,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "MANAGE_NODE_OPERATOR_ROLE": "0x78523850fdd761612f46e844cf5a16bda6b3151d6ae961fd7e8e7b92bfbca7f8",
        "MANAGE_SIGNING_KEYS": "0x75abc64490e17b40ea1e66691c3eb493647b24430b358bd87ec3e5127f1621ee",
        "MAX_NODE_OPERATOR_NAME_LENGTH": 255,
        "MAX_NODE_OPERATORS_COUNT": 200,
        "MAX_STUCK_PENALTY_DELAY": 31536000,
        "proxyType": 2,
        "SET_NODE_OPERATOR_LIMIT_ROLE": "0x07b39e0faf2521001ae4e58cb9ffd3840a63e205d288dc9c93c3774f0d794754",
        "STAKING_ROUTER_ROLE": "0xbb75b874360e0bfd87f964eadd8276d8efb7c942134fc329b513032d0803e0c6"
      },
      "implementationNames": {
        "0xaE7B191A31f627b4eB1d4DaC64eaB9976995b433": "AppProxyUpgradeable",
        "0x1770044a38402e3CfCa2Fcfa0C84a093c9B42135": "NodeOperatorsRegistry"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xB18BB767638Bca324d158B7C7189e1a28aeB9EB4",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1707991727,
      "sinceBlock": 19232636,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xCe958D997F4a5824D4d503A128216322C6C223a0",
          "0x955B978F3ee7818dA71fA25c676062E6BC462Fec",
          "0x64F4396bb0669C72858Cc50C779b48EB25F45770",
          "0x59232aC80E6d403b6381393e52f4665ECA328558"
        ],
        "$threshold": 2,
        "domainSeparator": "0x3a8b88175ee63f6e6d1f3a0fc644ba0b6261e7ab012c0e9edca720636ef72c0d",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 4 (50%)",
        "nonce": 8,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xB18BB767638Bca324d158B7C7189e1a28aeB9EB4": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "Kernel",
      "address": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
      "type": "Contract",
      "sourceHashes": [
        "0x3ef00bf119dbb1f46a05a35111f35da84bb45cac1abfa574989211677d16787a",
        "0x452458b35204910fe71376b423bd8d2887a1e82d22843fd79880d4ac0dce2a33"
      ],
      "proxyType": "EIP897 proxy",
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0x2b33CF282f867A7FF693A66e11B0FcC5552e4425",
        "acl": "0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb",
        "APP_ADDR_NAMESPACE": "0xd6f028ca0e8edb4a8c9757ca4fdccab25fa1e0317da1188108f7d2dee14902fb",
        "APP_BASES_NAMESPACE": "0xf1f3eb40f5bc1ad1344716ced8b8a0431d840b5783aea1fd01786bc26f35ac0f",
        "APP_MANAGER_ROLE": "0xb6d92708f3d4817afc106147d969e229ced5c46e65e0a5002a0d391287762bd0",
        "CORE_NAMESPACE": "0xc681a85306374a5ab27f0bbc385296a54bcd314a1948b6cf61c4ea1bc44bb9f8",
        "DEFAULT_ACL_APP_ID": "0xe3262375f45a6e2026b7e7b18c2b807434f2508fe1a2a3dfb493c7df8f4aad6a",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0x2b33CF282f867A7FF693A66e11B0FcC5552e4425",
        "isDepositable": false,
        "isPetrified": false,
        "KERNEL_APP_ID": "0x3b4bf6bf3ad5000ecf0f989d5befde585c6860fea3e574a4fab4c49d1c177d9c",
        "proxyType": 2,
        "recoveryVaultAppId": "0x701a4fd1f5174d12a0f1d9ad2c88d0ad11ab6aad0ac72b7d9ce621815f8016a9"
      },
      "implementationNames": {
        "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc": "KernelProxy",
        "0x2b33CF282f867A7FF693A66e11B0FcC5552e4425": "Kernel"
      }
    },
    {
      "name": "WithdrawalVault",
      "address": "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f",
      "type": "Contract",
      "sourceHashes": [
        "0x5cbdf8b8bb204120168ae7790c42ca01a3c365626be04e051f3be6c99a63d794",
        "0xfed378d959d7c0807be954e4650d7b087554f356d30c10c652058ea4ef14c0ca"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1626093401,
      "sinceBlock": 12812480,
      "values": {
        "$admin": "0x2e59A20f205bB85a89C53f1936454680651E618e",
        "$implementation": "0xCC52f17756C04bBa7E377716d7062fC36D7f69Fd",
        "$pastUpgrades": [
          [
            "2023-05-15T15:15:59.000Z",
            "0x592d68a259af899fb435da0ac08c2fd500cb423f37f1d8ce8e3120cb84186b21",
            ["0xCC52f17756C04bBa7E377716d7062fC36D7f69Fd"]
          ]
        ],
        "$upgradeCount": 1,
        "getContractVersion": 1,
        "implementation": "0xCC52f17756C04bBa7E377716d7062fC36D7f69Fd",
        "LIDO": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "proxy_getAdmin": "0x2e59A20f205bB85a89C53f1936454680651E618e",
        "proxy_getIsOssified": false,
        "TREASURY": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"
      },
      "implementationNames": {
        "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f": "WithdrawalsManagerProxy",
        "0xCC52f17756C04bBa7E377716d7062fC36D7f69Fd": "WithdrawalVault"
      }
    },
    {
      "name": "OracleDaemonConfig",
      "address": "0xbf05A929c3D7885a6aeAd833a992dA6E5ac23b09",
      "type": "Contract",
      "sourceHashes": [
        "0x6f38bad385eb6769def612742a8a4ab65d19921bffe96d1ee9241121e2ae1aba"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1683022991,
      "sinceBlock": 17172469,
      "values": {
        "$immutable": true,
        "CONFIG_MANAGER_ROLE": "0xbbfb55d933c2bfa638763473275b1d84c4418e58d26cf9d2cd5758237756d9f0",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0xbf05A929c3D7885a6aeAd833a992dA6E5ac23b09": "OracleDaemonConfig"
      }
    },
    {
      "name": "LidoLocator",
      "address": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
      "type": "Contract",
      "sourceHashes": [
        "0x04c21a54dfbc4ca3baf7ce93d62b487e1071a6439bde71a1896d76f073a66848",
        "0x69f924232e2916fff05aa3d4f0cbd7fd46005b8747ebacff3ac5e16761107735"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1681295123,
      "sinceBlock": 17031323,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0x3ABc4764f0237923d52056CFba7E9AEBf87113D3",
        "$pastUpgrades": [
          [
            "2023-04-12T10:25:23.000Z",
            "0x3a2910624533935cc8c21837b1705bcb159a760796930097016186be705cc455",
            ["0xEC3B38EDc7878Ad3f18cFddcd341aa94Fc57d20B"]
          ],
          [
            "2023-04-13T09:33:35.000Z",
            "0x299b401a2312fa081a6cb5012797a0f5a23b07394a96d505ebf7f4ab6420ff63",
            ["0x2faE8f0A4D8D11B6EC35d04d3Ea6a0d195EB6D3F"]
          ],
          [
            "2023-04-14T07:17:47.000Z",
            "0x20aab9de778f007c034b35a11206f7e17ec8b28f9c8beabc26a8551ecab8f9f6",
            ["0xc601E93D9F48D5E374820957CdA57516e2523d6C"]
          ],
          [
            "2023-04-18T11:24:23.000Z",
            "0x6105c893856a2528347ff1b2efd0838097b8c562670116f60bb76eb54cb80ce6",
            ["0xd4f6BEF8DdBc7306684b8D7c836269e0E6f8B6D0"]
          ],
          [
            "2023-05-10T15:04:35.000Z",
            "0x3b419bde1ce29392444d861c02f3846ce0ea65b0caa50dbd5136f1ff46cddf4f",
            ["0x1D920cc5bACf7eE506a271a5259f2417CaDeCE1d"]
          ],
          [
            "2023-05-15T15:15:59.000Z",
            "0x592d68a259af899fb435da0ac08c2fd500cb423f37f1d8ce8e3120cb84186b21",
            ["0x1D920cc5bACf7eE506a271a5259f2417CaDeCE1d"]
          ],
          [
            "2024-10-11T16:21:11.000Z",
            "0xc7bc3019721ecf320698f2897b329d1930f64661100a5fa159181146088e03c2",
            ["0x39aFE23cE59e8Ef196b81F0DCb165E9aD38b9463"]
          ],
          [
            "2024-10-25T16:03:23.000Z",
            "0x0078b3e0cecb3b50c78a22e0b1a985e6cde3bf431e9cb3b2ba4e50260122d542",
            ["0x3ABc4764f0237923d52056CFba7E9AEBf87113D3"]
          ]
        ],
        "$upgradeCount": 8,
        "accountingOracle": "0x852deD011285fe67063a08005c71a85690503Cee",
        "burner": "0xD15a672319Cf0352560eE76d9e89eAB0889046D3",
        "coreComponents": [
          "0x388C818CA8B9251b393131C08a736A67ccB19297",
          "0x6232397ebac4f5772e53285B26c47914E9461E75",
          "0xFdDf38947aFB03C621C71b06C9C70bce73f12999",
          "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
          "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
          "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f"
        ],
        "depositSecurityModule": "0xfFA96D84dEF2EA035c7AB153D8B991128e3d72fD",
        "elRewardsVault": "0x388C818CA8B9251b393131C08a736A67ccB19297",
        "legacyOracle": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
        "lido": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "oracleDaemonConfig": "0xbf05A929c3D7885a6aeAd833a992dA6E5ac23b09",
        "oracleReportComponentsForLido": [
          "0x852deD011285fe67063a08005c71a85690503Cee",
          "0x388C818CA8B9251b393131C08a736A67ccB19297",
          "0x6232397ebac4f5772e53285B26c47914E9461E75",
          "0xD15a672319Cf0352560eE76d9e89eAB0889046D3",
          "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
          "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f",
          "0xe6793B9e4FbA7DE0ee833F9D02bba7DB5EB27823"
        ],
        "oracleReportSanityChecker": "0x6232397ebac4f5772e53285B26c47914E9461E75",
        "postTokenRebaseReceiver": "0xe6793B9e4FbA7DE0ee833F9D02bba7DB5EB27823",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x3ABc4764f0237923d52056CFba7E9AEBf87113D3",
        "proxy__getIsOssified": false,
        "stakingRouter": "0xFdDf38947aFB03C621C71b06C9C70bce73f12999",
        "treasury": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "validatorsExitBusOracle": "0x0De4Ea0184c2ad0BacA7183356Aea5B8d5Bf5c6e",
        "withdrawalQueue": "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
        "withdrawalVault": "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f"
      },
      "implementationNames": {
        "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb": "OssifiableProxy",
        "0x3ABc4764f0237923d52056CFba7E9AEBf87113D3": "LidoLocator"
      }
    },
    {
      "address": "0xc79F702202E3A6B0B6310B537E786B9ACAA19BAf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "StarkNet Token",
      "address": "0xCa14007Eff0dB1f8135f4C25B34De49AB0d42766",
      "type": "Contract",
      "template": "tokens/STRK",
      "sourceHashes": [
        "0x23af76dab677f190c20ba297bc76c209cffb68653221079dd83fd167ae158753"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1668610211,
      "sinceBlock": 15983290,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xB18BB767638Bca324d158B7C7189e1a28aeB9EB4"]
          },
          "MINTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xCa14076A3cec95448BaD179cc19B351A4204B88B"]
          }
        },
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0xff2e0fc1bfb41e4190e0ec335889dde37dc7e65392844b9004e4b809c7bfbdb2",
        "MINTER_ROLE": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
        "name": "StarkNet Token",
        "symbol": "STRK",
        "totalSupply": "10011700000000000000000000000"
      },
      "implementationNames": {
        "0xCa14007Eff0dB1f8135f4C25B34De49AB0d42766": "StarkNetToken"
      }
    },
    {
      "name": "MintManager",
      "address": "0xCa14076A3cec95448BaD179cc19B351A4204B88B",
      "type": "Contract",
      "sourceHashes": [
        "0x11978b0aaa6fe38a6bf2106e5ea89f014d40cda3e6f61234c46466e99cf187ee",
        "0x3691fdeb4948182156b23943d1951957e54192b7f9f7ab4c88828089d29d58d7"
      ],
      "proxyType": "StarkWare proxy",
      "sinceTimestamp": 1732195643,
      "sinceBlock": 21236399,
      "values": {
        "$admin": "0x909d0CB383Ecc77e44daE5d0146cF476f611f62b",
        "$immutable": false,
        "$implementation": "0xa4D28d9fFF539d6E1972Ce3Cf9c4577856eD7F20",
        "$pastUpgrades": [
          [
            "2024-11-24T08:13:23.000Z",
            "0x1c23239512830ca5da9ca4c788bd0a6612e8b234539149d23cc22ea5b89e6e03",
            ["0xddDF984037e35a0CecCC4654F824823bB8FD2a5e"]
          ],
          [
            "2024-11-24T10:23:35.000Z",
            "0x63747939a3c8e80ddcb756452d94ab859e60ac0be9510fba99febe1eaa06f85c",
            ["0xa4D28d9fFF539d6E1972Ce3Cf9c4577856eD7F20"]
          ]
        ],
        "$upgradeCount": 2,
        "ENABLE_WINDOW_DURATION_SLOT": "0xb00a6109e73dbe7bbf8d3f18fb9221d2d024dc2671e3d5ff02532ccc40590738",
        "getEnableWindowDuration": 1209600,
        "getUpgradeActivationDelay": 0,
        "identify": "StarkWare_MintManager_2024_1",
        "implementation": "0xa4D28d9fFF539d6E1972Ce3Cf9c4577856eD7F20",
        "isFrozen": false,
        "isNotFinalized": true,
        "MAX_UPGRADE_DELAY": 15552000,
        "PROXY_VERSION": "5.0.2",
        "StarkWareProxy_upgradeDelay": 0,
        "UPGRADE_DELAY_SLOT": "0xc21dbb3089fcb2c4f4c6a67854ab4db2b0f233ea4b21b21f912d52d18fc5db1f"
      },
      "implementationNames": {
        "0xCa14076A3cec95448BaD179cc19B351A4204B88B": "ProxyV5",
        "0xa4D28d9fFF539d6E1972Ce3Cf9c4577856eD7F20": "MintManager"
      }
    },
    {
      "address": "0xCe958D997F4a5824D4d503A128216322C6C223a0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Burner",
      "address": "0xD15a672319Cf0352560eE76d9e89eAB0889046D3",
      "type": "Contract",
      "template": "tokens/Lido/Burner",
      "sourceHashes": [
        "0x10157e5d64980dbfd1f7d94307306bb86c3e3a9bb481af9253f4df368a6542f2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getCoverSharesBurnt",
        "getExcessStETH",
        "getNonCoverSharesBurnt",
        "getSharesRequestedToBurn"
      ],
      "sinceTimestamp": 1683024071,
      "sinceBlock": 17172559,
      "values": {
        "$immutable": true,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getCoverSharesBurnt": "14684898881648297203",
        "getExcessStETH": 0,
        "getNonCoverSharesBurnt": "9635500870753024834563621",
        "getSharesRequestedToBurn": { "coverShares": 0, "nonCoverShares": 0 },
        "REQUEST_BURN_MY_STETH_ROLE": "0x28186f938b759084eea36948ef1cd8b40ec8790a98d5f1a09b70879fe054e5cc",
        "REQUEST_BURN_SHARES_ROLE": "0x4be29e0e4eb91f98f709d98803cba271592782e293b84a625e025cbb40197ba8",
        "STETH": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "TREASURY": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"
      },
      "implementationNames": {
        "0xD15a672319Cf0352560eE76d9e89eAB0889046D3": "Burner"
      }
    },
    {
      "address": "0xd4EF84b638B334699bcf5AF4B0410B8CCD71943f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OpStackTokenRatePusher",
      "address": "0xd54c1c6413caac3477AC14b2a80D5398E3c32FfE",
      "type": "Contract",
      "template": "tokens/Lido/OpStackTokenRatePusher",
      "sourceHashes": [
        "0x914444eb1e15eba41dafc9099a1e9e51a554ff786ce9f7b5159cb306f4779477"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724328047,
      "sinceBlock": 20584007,
      "values": {
        "$immutable": true,
        "ACCOUNTING_ORACLE": "0x852deD011285fe67063a08005c71a85690503Cee",
        "GENESIS_TIME": 1606824023,
        "L2_GAS_LIMIT_FOR_PUSHING_TOKEN_RATE": 300000,
        "L2_TOKEN_RATE_ORACLE": "0x294ED1f214F4e0ecAE31C3Eae4F04EBB3b36C9d0",
        "MESSENGER": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "SECONDS_PER_SLOT": 12,
        "TOKEN_RATE_DECIMALS": 27,
        "WSTETH": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
      },
      "implementationNames": {
        "0xd54c1c6413caac3477AC14b2a80D5398E3c32FfE": "OpStackTokenRatePusher"
      }
    },
    {
      "name": "HashConsensus",
      "address": "0xD624B08C83bAECF0807Dd2c6880C3154a5F0B288",
      "type": "Contract",
      "template": "tokens/Lido/HashConsensus",
      "sourceHashes": [
        "0xdcb2da84a44fbac1b8d7ea814fd34325ac06bb8169fad7507a00835a3ffb25de"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getConsensusState",
        "getCurrentFrame",
        "getFastLaneMembers",
        "getFrameConfig",
        "getMembers",
        "getReportVariants"
      ],
      "sinceTimestamp": 1683024023,
      "sinceBlock": 17172555,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          },
          "MANAGE_MEMBERS_AND_QUORUM_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DISABLE_CONSENSUS_ROLE": "0x10b016346186602d93fc7a27ace09ba944baf9453611b186d36acd3d3d667dc0",
        "getChainConfig": {
          "slotsPerEpoch": 32,
          "secondsPerSlot": 12,
          "genesisTime": 1606824023
        },
        "getConsensusState": {
          "refSlot": 11829599,
          "consensusReport": "0x032e82eccc07b6d1ce34d07529e0a4991908d9de2055e23aa6ce059b497f4f18",
          "isReportProcessing": true
        },
        "getCurrentFrame": {
          "refSlot": 11829599,
          "reportProcessingDeadlineSlot": 11836799
        },
        "getFastLaneMembers": {
          "addresses": [
            "0x73181107c8D9ED4ce0bbeF7A0b4ccf3320C41d12",
            "0xA7410857ABbf75043d61ea54e07D57A6EB6EF186",
            "0x404335BcE530400a5814375E7Ec1FB55fAff3eA2",
            "0x946D3b081ed19173dC83Cd974fC69e1e760B7d78",
            "0x007DE4a5F7bc37E2F26c0cb2E8A95006EE9B89b5"
          ],
          "lastReportedRefSlots": [
            11829599, 11829599, 11829599, 11822399, 11829599
          ]
        },
        "getFrameConfig": {
          "initialEpoch": 201600,
          "epochsPerFrame": 225,
          "fastLaneLengthSlots": 100
        },
        "getInitialRefSlot": 6451199,
        "getMembers": {
          "addresses": [
            "0x73181107c8D9ED4ce0bbeF7A0b4ccf3320C41d12",
            "0xA7410857ABbf75043d61ea54e07D57A6EB6EF186",
            "0x404335BcE530400a5814375E7Ec1FB55fAff3eA2",
            "0x946D3b081ed19173dC83Cd974fC69e1e760B7d78",
            "0x007DE4a5F7bc37E2F26c0cb2E8A95006EE9B89b5",
            "0xc79F702202E3A6B0B6310B537E786B9ACAA19BAf",
            "0x61c91ECd902EB56e314bB2D5c5C07785444Ea1c8",
            "0xe57B3792aDCc5da47EF4fF588883F0ee0c9835C9",
            "0x285f8537e1dAeEdaf617e96C742F2Cf36d63CcfB"
          ],
          "lastReportedRefSlots": [
            11829599, 11829599, 11829599, 11822399, 11829599, 11822399,
            11613599, 11829599, 11829599
          ]
        },
        "getQuorum": 5,
        "getReportProcessor": "0x852deD011285fe67063a08005c71a85690503Cee",
        "getReportVariants": {
          "variants": [
            "0x032e82eccc07b6d1ce34d07529e0a4991908d9de2055e23aa6ce059b497f4f18"
          ],
          "support": [6]
        },
        "MANAGE_FAST_LANE_CONFIG_ROLE": "0x4af6faa30fabb2c4d8d567d06168f9be8adb583156c1ecb424b4832a7e4d6717",
        "MANAGE_FRAME_CONFIG_ROLE": "0x921f40f434e049d23969cbe68d9cf3ac1013fbe8945da07963af6f3142de6afe",
        "MANAGE_MEMBERS_AND_QUORUM_ROLE": "0x66a484cf1a3c6ef8dfd59d24824943d2853a29d96f34a01271efc55774452a51",
        "MANAGE_REPORT_PROCESSOR_ROLE": "0xc5219a8d2d0107a57aad00b22081326d173df87bad251126f070df2659770c3e"
      },
      "implementationNames": {
        "0xD624B08C83bAECF0807Dd2c6880C3154a5F0B288": "HashConsensus"
      }
    },
    {
      "name": "CSFeeDistributor",
      "address": "0xD99CC66fEC647E68294C6477B40fC7E0F6F618D0",
      "type": "Contract",
      "template": "tokens/Lido/CSFeeDistributor",
      "sourceHashes": [
        "0x0e9e628d137fa4b53b03ce51b1b0e0122d524ca323f45751894d2e62c91c2651",
        "0xd5604f959d89ec8d8a68b4679f1ac04a3e991d52f605de25f20be7f57a4e669b"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "treeRoot",
        "totalClaimableShares",
        "pendingSharesToDistribute"
      ],
      "sinceTimestamp": 1728566351,
      "sinceBlock": 20935463,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0x17Fc610ecbbAc3f99751b3B2aAc1bA2b22E444f0",
        "$pastUpgrades": [
          [
            "2024-10-10T13:19:11.000Z",
            "0xee7781fe84a8d09249d1d882c3e1f4dbb82f8dd743a15d4b27df35c4959e17b3",
            ["0x17Fc610ecbbAc3f99751b3B2aAc1bA2b22E444f0"]
          ]
        ],
        "$upgradeCount": 1,
        "ACCOUNTING": "0x4d72BFF1BeaC69925F8Bd12526a39BAAb069e5Da",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "ORACLE": "0x4D4074628678Bd302921c20573EEa1ed38DdF7FB",
        "pendingSharesToDistribute": "18464606507300156411",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x17Fc610ecbbAc3f99751b3B2aAc1bA2b22E444f0",
        "proxy__getIsOssified": false,
        "RECOVERER_ROLE": "0xb3e25b5404b87e5a838579cb5d7481d61ad96ee284d38ec1e97c07ba64e7f6fc",
        "STETH": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "totalClaimableShares": "45716915827892984681",
        "treeRoot": "0xd6fb8b17c985dd6b1d69d7b609e8120931aa704bc534f8b82fb66d5b1586ae11"
      },
      "implementationNames": {
        "0xD99CC66fEC647E68294C6477B40fC7E0F6F618D0": "OssifiableProxy",
        "0x17Fc610ecbbAc3f99751b3B2aAc1bA2b22E444f0": "CSFeeDistributor"
      }
    },
    {
      "name": "CSModule",
      "address": "0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F",
      "type": "Contract",
      "template": "tokens/Lido/CSModule",
      "sourceHashes": [
        "0x0e9e628d137fa4b53b03ce51b1b0e0122d524ca323f45751894d2e62c91c2651",
        "0xf761c7555657701beab5f35f2637465a03482c146dd8566d2fe486a66b790f82"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "getActiveNodeOperatorsCount",
        "depositQueue",
        "getStakingModuleSummary",
        "getNodeOperatorsCount"
      ],
      "sinceTimestamp": 1728566339,
      "sinceBlock": 20935462,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0x8daEa53b17a629918CDFAB785C5c74077c1D895B",
        "$pastUpgrades": [
          [
            "2024-10-10T13:18:59.000Z",
            "0xf5330dbcf09885ed145c4435e356b5d8a10054751bb8009d3a2605d476ac173f",
            ["0x8daEa53b17a629918CDFAB785C5c74077c1D895B"]
          ]
        ],
        "$upgradeCount": 1,
        "accounting": "0x4d72BFF1BeaC69925F8Bd12526a39BAAb069e5Da",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "depositQueue": { "head": 678, "tail": 879 },
        "earlyAdoption": "0x3D5148ad93e2ae5DedD1f7A8B3C19E7F67F90c0E",
        "EL_REWARDS_STEALING_FINE": "100000000000000000",
        "getActiveNodeOperatorsCount": 429,
        "getNodeOperatorsCount": 429,
        "getResumeSinceTimestamp": 1729872203,
        "getStakingModuleSummary": {
          "totalExitedValidators": 218,
          "totalDepositedValidators": 6007,
          "depositableValidatorsCount": 2318
        },
        "getType": "0x636f6d6d756e6974792d6f6e636861696e2d7631000000000000000000000000",
        "INITIAL_SLASHING_PENALTY": "1000000000000000000",
        "isPaused": false,
        "keyRemovalCharge": "20000000000000000",
        "LIDO_LOCATOR": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "MAX_KEY_REMOVAL_CHARGE": "100000000000000000",
        "MAX_SIGNING_KEYS_PER_OPERATOR_BEFORE_PUBLIC_RELEASE": 12,
        "MODULE_MANAGER_ROLE": "0x79dfcec784e591aafcf60db7db7b029a5c8b12aac4afd4e8c4eb740430405fa6",
        "PAUSE_INFINITELY": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x8daEa53b17a629918CDFAB785C5c74077c1D895B",
        "proxy__getIsOssified": false,
        "publicRelease": true,
        "RECOVERER_ROLE": "0xb3e25b5404b87e5a838579cb5d7481d61ad96ee284d38ec1e97c07ba64e7f6fc",
        "REPORT_EL_REWARDS_STEALING_PENALTY_ROLE": "0x59911a6aa08a72fe3824aec4500dc42335c6d0702b6d5c5c72ceb265a0de9302",
        "RESUME_ROLE": "0x2fc10cc8ae19568712f7a176fb4978616a610650813c9d05326c34abb62749c7",
        "SETTLE_EL_REWARDS_STEALING_PENALTY_ROLE": "0xe85fdec10fe0f93d0792364051df7c3d73e37c17b3a954bffe593960e3cd3012",
        "STAKING_ROUTER_ROLE": "0xbb75b874360e0bfd87f964eadd8276d8efb7c942134fc329b513032d0803e0c6",
        "STETH": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "VERIFIER_ROLE": "0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09"
      },
      "implementationNames": {
        "0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F": "OssifiableProxy",
        "0x8daEa53b17a629918CDFAB785C5c74077c1D895B": "CSModule"
      }
    },
    {
      "address": "0xe57B3792aDCc5da47EF4fF588883F0ee0c9835C9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "TokenRateNotifier",
      "address": "0xe6793B9e4FbA7DE0ee833F9D02bba7DB5EB27823",
      "type": "Contract",
      "sourceHashes": [
        "0x6f6c2b5fe89e476b4a6700268156a2f5e028a4e7607ae4e93223d77f95fcb7d2"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724328035,
      "sinceBlock": 20584006,
      "values": {
        "$immutable": true,
        "INDEX_NOT_FOUND": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "LIDO": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "MAX_OBSERVERS_COUNT": 32,
        "observers": ["0xd54c1c6413caac3477AC14b2a80D5398E3c32FfE"],
        "observersLength": 1,
        "owner": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "REQUIRED_INTERFACE": "0xa16ba44d"
      },
      "implementationNames": {
        "0xe6793B9e4FbA7DE0ee833F9D02bba7DB5EB27823": "TokenRateNotifier"
      }
    },
    {
      "address": "0xF6AB8BD99EfE2515C45d6FeE8Ea32738877EFbD8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "TokenManager",
      "address": "0xf73a1260d222f447210581DDf212D915c09a3249",
      "type": "Contract",
      "sourceHashes": [
        "0xe95d65e50752cf7b137131ff78cb164641fe141b0780189482701ebda1b66d4a",
        "0x07aae7f3026cf9986df7e9587978c4a61f37310b62ac418c63e182d2fdb51fef"
      ],
      "proxyType": "EIP897 proxy",
      "sinceTimestamp": 1608242396,
      "sinceBlock": 11473216,
      "values": {
        "$immutable": false,
        "$implementation": "0xde3A93028F2283cc28756B3674BD657eaFB992f4",
        "appId": "0xcd567bdf93dd0f6acc3bc7f2155f83244d56a65abbfbefb763e015420102c67b",
        "ASSIGN_ROLE": "0xf5a08927c847d7a29dc35e105208dbde5ce951392105d712761cc5d17440e2ff",
        "BURN_ROLE": "0xe97b137254058bd94f28d2f3eb79e2d34074ffb488d042e3bc958e0a57d2fa22",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0xde3A93028F2283cc28756B3674BD657eaFB992f4",
        "isDepositable": false,
        "isForwarder": true,
        "isPetrified": false,
        "ISSUE_ROLE": "0x2406f1e99f79cea012fb88c5c36566feaeefee0f4b98d3a376b49310222b53c4",
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "MAX_VESTINGS_PER_ADDRESS": 50,
        "maxAccountTokens": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "MINT_ROLE": "0x154c00819833dac601ee5ddded6fda79d9d8b506b911b3dbd54cdb95fe6c3686",
        "proxyType": 2,
        "REVOKE_VESTINGS_ROLE": "0x95ffc68daedf1eb334cfcd22ee24a5eeb5a8e58aa40679f2ad247a84140f8d6e",
        "token": "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32"
      },
      "implementationNames": {
        "0xf73a1260d222f447210581DDf212D915c09a3249": "AppProxyUpgradeable",
        "0xde3A93028F2283cc28756B3674BD657eaFB992f4": "TokenManager"
      }
    },
    {
      "address": "0xf82D88217C249297C6037BA77CE34b3d8a90ab43",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xfaECfa5E4180dd55D15396F804Fd00C6dbA233B0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "StakingRouter",
      "address": "0xFdDf38947aFB03C621C71b06C9C70bce73f12999",
      "type": "Contract",
      "template": "tokens/Lido/StakingRouter",
      "sourceHashes": [
        "0x04c21a54dfbc4ca3baf7ce93d62b487e1071a6439bde71a1896d76f073a66848",
        "0x503f0f420b9a496d2931807c8c9c7b3bae8e03c9d66fd0c046c0cee08657b365"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "getAllStakingModuleDigests",
        "getStakingFeeAggregateDistribution",
        "getStakingModuleActiveValidatorsCount",
        "getStakingModuleLastDepositBlock",
        "getStakingModuleNonce",
        "getStakingModules",
        "getStakingRewardsDistribution"
      ],
      "sinceTimestamp": 1683023963,
      "sinceBlock": 17172550,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0x89eDa99C0551d4320b56F82DDE8dF2f8D2eF81aA",
        "$pastUpgrades": [
          [
            "2023-05-02T10:39:23.000Z",
            "0xb8620f04a8db6bb52cfd0978c6677a5f16011e03d4622e5d660ea6ba34c2b122",
            ["0x6F6541C2203196fEeDd14CD2C09550dA1CbEDa31"]
          ],
          [
            "2023-05-15T15:15:59.000Z",
            "0x592d68a259af899fb435da0ac08c2fd500cb423f37f1d8ce8e3120cb84186b21",
            ["0xD8784e748f59Ba711fB5643191Ec3fAdD50Fb6df"]
          ],
          [
            "2024-10-25T16:03:23.000Z",
            "0x0078b3e0cecb3b50c78a22e0b1a985e6cde3bf431e9cb3b2ba4e50260122d542",
            ["0x89eDa99C0551d4320b56F82DDE8dF2f8D2eF81aA"]
          ]
        ],
        "$upgradeCount": 3,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSIT_CONTRACT": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "FEE_PRECISION_POINTS": "100000000000000000000",
        "getAllStakingModuleDigests": [
          {
            "nodeOperatorsCount": 39,
            "activeNodeOperatorsCount": 37,
            "state": {
              "id": 1,
              "stakingModuleAddress": "0x55032650b14df07b85bF18A3a3eC8E0Af2e028d5",
              "stakingModuleFee": 500,
              "treasuryFee": 500,
              "stakeShareLimit": 10000,
              "status": 0,
              "name": "curated-onchain-v1",
              "lastDepositAt": 1732694279,
              "lastDepositBlock": 21277744,
              "exitedValidatorsCount": 109581,
              "priorityExitShareThreshold": 10000,
              "maxDepositsPerBlock": 150,
              "minDepositBlockDistance": 25
            },
            "summary": {
              "totalExitedValidators": 109581,
              "totalDepositedValidators": 376774,
              "depositableValidatorsCount": 38451
            }
          },
          {
            "nodeOperatorsCount": 82,
            "activeNodeOperatorsCount": 82,
            "state": {
              "id": 2,
              "stakingModuleAddress": "0xaE7B191A31f627b4eB1d4DaC64eaB9976995b433",
              "stakingModuleFee": 800,
              "treasuryFee": 200,
              "stakeShareLimit": 400,
              "status": 0,
              "name": "SimpleDVT",
              "lastDepositAt": 1743424091,
              "lastDepositBlock": 22166899,
              "exitedValidatorsCount": 519,
              "priorityExitShareThreshold": 444,
              "maxDepositsPerBlock": 150,
              "minDepositBlockDistance": 25
            },
            "summary": {
              "totalExitedValidators": 519,
              "totalDepositedValidators": 6965,
              "depositableValidatorsCount": 2359
            }
          },
          {
            "nodeOperatorsCount": 429,
            "activeNodeOperatorsCount": 429,
            "state": {
              "id": 3,
              "stakingModuleAddress": "0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F",
              "stakingModuleFee": 600,
              "treasuryFee": 400,
              "stakeShareLimit": 200,
              "status": 0,
              "name": "Community Staking",
              "lastDepositAt": 1743409955,
              "lastDepositBlock": 22165725,
              "exitedValidatorsCount": 218,
              "priorityExitShareThreshold": 250,
              "maxDepositsPerBlock": 30,
              "minDepositBlockDistance": 25
            },
            "summary": {
              "totalExitedValidators": 218,
              "totalDepositedValidators": 6007,
              "depositableValidatorsCount": 2318
            }
          }
        ],
        "getContractVersion": 2,
        "getLido": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "getStakingFeeAggregateDistribution": {
          "modulesFee": "5089922985527577764",
          "treasuryFee": "4910077014472422232",
          "basePrecision": "100000000000000000000"
        },
        "getStakingModuleActiveValidatorsCount": [267193, 6446, 5789],
        "getStakingModuleIds": [1, 2, 3],
        "getStakingModuleIsActive": [true, true, true],
        "getStakingModuleIsDepositsPaused": [false, false, false],
        "getStakingModuleIsStopped": [false, false, false],
        "getStakingModuleLastDepositBlock": [21277744, 22166899, 22165725],
        "getStakingModuleMaxDepositsPerBlock": [150, 150, 30],
        "getStakingModuleMinDepositBlockDistance": [25, 25, 25],
        "getStakingModuleNonce": [15822, 832, 1252],
        "getStakingModules": [
          {
            "id": 1,
            "stakingModuleAddress": "0x55032650b14df07b85bF18A3a3eC8E0Af2e028d5",
            "stakingModuleFee": 500,
            "treasuryFee": 500,
            "stakeShareLimit": 10000,
            "status": 0,
            "name": "curated-onchain-v1",
            "lastDepositAt": 1732694279,
            "lastDepositBlock": 21277744,
            "exitedValidatorsCount": 109581,
            "priorityExitShareThreshold": 10000,
            "maxDepositsPerBlock": 150,
            "minDepositBlockDistance": 25
          },
          {
            "id": 2,
            "stakingModuleAddress": "0xaE7B191A31f627b4eB1d4DaC64eaB9976995b433",
            "stakingModuleFee": 800,
            "treasuryFee": 200,
            "stakeShareLimit": 400,
            "status": 0,
            "name": "SimpleDVT",
            "lastDepositAt": 1743424091,
            "lastDepositBlock": 22166899,
            "exitedValidatorsCount": 519,
            "priorityExitShareThreshold": 444,
            "maxDepositsPerBlock": 150,
            "minDepositBlockDistance": 25
          },
          {
            "id": 3,
            "stakingModuleAddress": "0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F",
            "stakingModuleFee": 600,
            "treasuryFee": 400,
            "stakeShareLimit": 200,
            "status": 0,
            "name": "Community Staking",
            "lastDepositAt": 1743409955,
            "lastDepositBlock": 22165725,
            "exitedValidatorsCount": 218,
            "priorityExitShareThreshold": 250,
            "maxDepositsPerBlock": 30,
            "minDepositBlockDistance": 25
          }
        ],
        "getStakingModulesCount": 3,
        "getStakingModuleStatus": [0, 0, 0],
        "getStakingRewardsDistribution": {
          "recipients": [
            "0x55032650b14df07b85bF18A3a3eC8E0Af2e028d5",
            "0xaE7B191A31f627b4eB1d4DaC64eaB9976995b433",
            "0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F"
          ],
          "stakingModuleIds": [1, 2, 3],
          "stakingModuleFees": [
            "4781070615686330646",
            "184548434659375581",
            "124303935181871537"
          ],
          "totalFee": "9999999999999999996",
          "precisionPoints": "100000000000000000000"
        },
        "getTotalFeeE4Precision": 999,
        "getWithdrawalCredentials": "0x010000000000000000000000b9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
        "MANAGE_WITHDRAWAL_CREDENTIALS_ROLE": "0xe7c742a54cd11fc9749a47ab34bdcd7327820908e8d0d48b4a5c7f17b0294098",
        "MAX_STAKING_MODULE_NAME_LENGTH": 31,
        "MAX_STAKING_MODULES_COUNT": 32,
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x89eDa99C0551d4320b56F82DDE8dF2f8D2eF81aA",
        "proxy__getIsOssified": false,
        "REPORT_EXITED_VALIDATORS_ROLE": "0xc23292b191d95d2a7dd94fc6436eb44338fda9e1307d9394fd27c28157c1b33c",
        "REPORT_REWARDS_MINTED_ROLE": "0x779e5c23cb7a5bcb9bfe1e9a5165a00057f12bcdfd13e374540fdf1a1cd91137",
        "STAKING_MODULE_MANAGE_ROLE": "0x3105bcbf19d4417b73ae0e58d508a65ecf75665e46c2622d8521732de6080c48",
        "STAKING_MODULE_UNVETTING_ROLE": "0x240525496a9dc32284b17ce03b43e539e4bd81414634ee54395030d793463b57",
        "TOTAL_BASIS_POINTS": 10000,
        "UNSAFE_SET_EXITED_VALIDATORS_ROLE": "0x55180e25fcacf9af017d35d497765476319b23896daa1f9bc2b38fa80b36a163"
      },
      "implementationNames": {
        "0xFdDf38947aFB03C621C71b06C9C70bce73f12999": "OssifiableProxy",
        "0x89eDa99C0551d4320b56F82DDE8dF2f8D2eF81aA": "StakingRouter"
      }
    },
    {
      "address": "0xFf713991196F8a9D6838bA82C9Bb3579F8Cc0D90",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "DepositSecurityModule",
      "address": "0xfFA96D84dEF2EA035c7AB153D8B991128e3d72fD",
      "type": "Contract",
      "template": "tokens/Lido/DepositSecurityModule",
      "sourceHashes": [
        "0xec602317aa2fc4de0a89b5c910911635f678fb88b51a6a46f12d8b1148d95d71"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1728395471,
      "sinceBlock": 20921272,
      "values": {
        "$immutable": true,
        "ATTEST_MESSAGE_PREFIX": "0x420b649044eb23ce1540808ba8ed5d375094551acd77ba36b6ba87b78b7b655b",
        "DEPOSIT_CONTRACT": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "getGuardianQuorum": 4,
        "getGuardians": [
          "0x5fd0dDbC3351d009eb3f88DE7Cd081a614C519F1",
          "0x7912Fa976BcDe9c2cf728e213e892AD7588E6AaF",
          "0x14D5d5B71E048d2D75a39FfC5B407e3a3AB6F314",
          "0xf82D88217C249297C6037BA77CE34b3d8a90ab43",
          "0xa56b128Ea2Ea237052b0fA2a96a387C0E43157d8",
          "0xd4EF84b638B334699bcf5AF4B0410B8CCD71943f"
        ],
        "getMaxOperatorsPerUnvetting": 200,
        "getOwner": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getPauseIntentValidityPeriodBlocks": 6646,
        "isDepositsPaused": false,
        "LIDO": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "PAUSE_MESSAGE_PREFIX": "0x6b3c04956358bd57f0df35a391531933a5f35bbeb297822abaa44d6b55b38d35",
        "STAKING_ROUTER": "0xFdDf38947aFB03C621C71b06C9C70bce73f12999",
        "UNVET_MESSAGE_PREFIX": "0x7f941492e2f49621da669504b9b681d897c2d2917c1edc4009f4121a0a25ed9c",
        "VERSION": 3
      },
      "implementationNames": {
        "0xfFA96D84dEF2EA035c7AB153D8B991128e3d72fD": "DepositSecurityModule"
      }
    },
    {
      "address": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "0x00000000219ab540356cBB839Cbe05303d7705Fa": [
      "constructor()",
      "event DepositEvent(bytes pubkey, bytes withdrawal_credentials, bytes amount, bytes signature, bytes index)",
      "function deposit(bytes pubkey, bytes withdrawal_credentials, bytes signature, bytes32 deposit_data_root) payable",
      "function get_deposit_count() view returns (bytes)",
      "function get_deposit_root() view returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)"
    ],
    "0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A": [
      "constructor()",
      "event ERC20BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20DepositInitiated(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20WithdrawalFinalized(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ETHBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHDepositInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHWithdrawalFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event Initialized(uint8 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC20(address _localToken, address _remoteToken, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC20To(address _localToken, address _remoteToken, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function depositETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function deposits(address, address) view returns (uint256)",
      "function finalizeBridgeERC20(address _localToken, address _remoteToken, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeBridgeETH(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function initialize(address _messenger, address _superchainConfig)",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x0De4Ea0184c2ad0BacA7183356Aea5B8d5Bf5c6e": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0x0e65898527E77210fB0133D00dd4C0E86Dc29bC7": [
      "constructor(address lidoLocator, address lido, address legacyOracle, uint256 secondsPerSlot, uint256 genesisTime)",
      "error AddressCannotBeSame()",
      "error AddressCannotBeZero()",
      "error AdminCannotBeZero()",
      "error CannotSubmitExtraDataBeforeMainData()",
      "error ExtraDataAlreadyProcessed()",
      "error ExtraDataHashCannotBeZeroForNonEmptyData()",
      "error ExtraDataItemsCountCannotBeZeroForNonEmptyData()",
      "error HashCannotBeZero()",
      "error IncorrectOracleMigration(uint256 code)",
      "error InitialRefSlotCannotBeLessThanProcessingOne(uint256 initialRefSlot, uint256 processingRefSlot)",
      "error InvalidContractVersionIncrement()",
      "error InvalidExitedValidatorsData()",
      "error InvalidExtraDataItem(uint256 itemIndex)",
      "error InvalidExtraDataSortOrder(uint256 itemIndex)",
      "error LegacyOracleCannotBeZero()",
      "error LidoCannotBeZero()",
      "error LidoLocatorCannotBeZero()",
      "error NoConsensusReportToProcess()",
      "error NonZeroContractVersionOnInit()",
      "error ProcessingDeadlineMissed(uint256 deadline)",
      "error RefSlotAlreadyProcessing()",
      "error RefSlotCannotDecrease(uint256 refSlot, uint256 prevRefSlot)",
      "error RefSlotMustBeGreaterThanProcessingOne(uint256 refSlot, uint256 processingRefSlot)",
      "error SecondsPerSlotCannotBeZero()",
      "error SenderIsNotTheConsensusContract()",
      "error SenderNotAllowed()",
      "error UnexpectedChainConfig()",
      "error UnexpectedConsensusVersion(uint256 expectedVersion, uint256 receivedVersion)",
      "error UnexpectedContractVersion(uint256 expected, uint256 received)",
      "error UnexpectedDataHash(bytes32 consensusHash, bytes32 receivedHash)",
      "error UnexpectedExtraDataFormat(uint256 expectedFormat, uint256 receivedFormat)",
      "error UnexpectedExtraDataHash(bytes32 consensusHash, bytes32 receivedHash)",
      "error UnexpectedExtraDataIndex(uint256 expectedIndex, uint256 receivedIndex)",
      "error UnexpectedExtraDataItemsCount(uint256 expectedCount, uint256 receivedCount)",
      "error UnexpectedRefSlot(uint256 consensusRefSlot, uint256 dataRefSlot)",
      "error UnsupportedExtraDataFormat(uint256 format)",
      "error UnsupportedExtraDataType(uint256 itemIndex, uint256 dataType)",
      "error VersionCannotBeSame()",
      "event ConsensusHashContractSet(address indexed addr, address indexed prevAddr)",
      "event ConsensusVersionSet(uint256 indexed version, uint256 indexed prevVersion)",
      "event ContractVersionSet(uint256 version)",
      "event ExtraDataSubmitted(uint256 indexed refSlot, uint256 itemsProcessed, uint256 itemsCount)",
      "event ProcessingStarted(uint256 indexed refSlot, bytes32 hash)",
      "event ReportDiscarded(uint256 indexed refSlot, bytes32 hash)",
      "event ReportSubmitted(uint256 indexed refSlot, bytes32 hash, uint256 processingDeadlineTime)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event WarnExtraDataIncompleteProcessing(uint256 indexed refSlot, uint256 processedItemsCount, uint256 itemsCount)",
      "event WarnProcessingMissed(uint256 indexed refSlot)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXTRA_DATA_FORMAT_EMPTY() view returns (uint256)",
      "function EXTRA_DATA_FORMAT_LIST() view returns (uint256)",
      "function EXTRA_DATA_TYPE_EXITED_VALIDATORS() view returns (uint256)",
      "function EXTRA_DATA_TYPE_STUCK_VALIDATORS() view returns (uint256)",
      "function GENESIS_TIME() view returns (uint256)",
      "function LEGACY_ORACLE() view returns (address)",
      "function LIDO() view returns (address)",
      "function LOCATOR() view returns (address)",
      "function MANAGE_CONSENSUS_CONTRACT_ROLE() view returns (bytes32)",
      "function MANAGE_CONSENSUS_VERSION_ROLE() view returns (bytes32)",
      "function SECONDS_PER_SLOT() view returns (uint256)",
      "function SUBMIT_DATA_ROLE() view returns (bytes32)",
      "function discardConsensusReport(uint256 refSlot)",
      "function finalizeUpgrade_v2(uint256 consensusVersion)",
      "function getConsensusContract() view returns (address)",
      "function getConsensusReport() view returns (bytes32 hash, uint256 refSlot, uint256 processingDeadlineTime, bool processingStarted)",
      "function getConsensusVersion() view returns (uint256)",
      "function getContractVersion() view returns (uint256)",
      "function getLastProcessingRefSlot() view returns (uint256)",
      "function getProcessingState() view returns (tuple(uint256 currentFrameRefSlot, uint256 processingDeadlineTime, bytes32 mainDataHash, bool mainDataSubmitted, bytes32 extraDataHash, uint256 extraDataFormat, bool extraDataSubmitted, uint256 extraDataItemsCount, uint256 extraDataItemsSubmitted) result)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address consensusContract, uint256 consensusVersion)",
      "function initializeWithoutMigration(address admin, address consensusContract, uint256 consensusVersion, uint256 lastProcessingRefSlot)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setConsensusContract(address addr)",
      "function setConsensusVersion(uint256 version)",
      "function submitConsensusReport(bytes32 reportHash, uint256 refSlot, uint256 deadline)",
      "function submitReportData(tuple(uint256 consensusVersion, uint256 refSlot, uint256 numValidators, uint256 clBalanceGwei, uint256[] stakingModuleIdsWithNewlyExitedValidators, uint256[] numExitedValidatorsByStakingModule, uint256 withdrawalVaultBalance, uint256 elRewardsVaultBalance, uint256 sharesRequestedToBurn, uint256[] withdrawalFinalizationBatches, uint256 simulatedShareRate, bool isBunkerMode, uint256 extraDataFormat, bytes32 extraDataHash, uint256 extraDataItemsCount) data, uint256 contractVersion)",
      "function submitReportExtraDataEmpty()",
      "function submitReportExtraDataList(bytes data)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb": [
      "function resume()",
      "function name() pure returns (string)",
      "function stop()",
      "function hasInitialized() view returns (bool)",
      "function approve(address _spender, uint256 _amount) returns (bool)",
      "function STAKING_CONTROL_ROLE() view returns (bytes32)",
      "function totalSupply() view returns (uint256)",
      "function getSharesByPooledEth(uint256 _ethAmount) view returns (uint256)",
      "function isStakingPaused() view returns (bool)",
      "function transferFrom(address _sender, address _recipient, uint256 _amount) returns (bool)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function setStakingLimit(uint256 _maxStakeLimit, uint256 _stakeLimitIncreasePerBlock)",
      "function RESUME_ROLE() view returns (bytes32)",
      "function finalizeUpgrade_v2(address _lidoLocator, address _eip712StETH)",
      "function decimals() pure returns (uint8)",
      "function getRecoveryVault() view returns (address)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function getTotalPooledEther() view returns (uint256)",
      "function unsafeChangeDepositedValidators(uint256 _newDepositedValidators)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function increaseAllowance(address _spender, uint256 _addedValue) returns (bool)",
      "function getTreasury() view returns (address)",
      "function isStopped() view returns (bool)",
      "function getBufferedEther() view returns (uint256)",
      "function initialize(address _lidoLocator, address _eip712StETH) payable",
      "function receiveELRewards() payable",
      "function getWithdrawalCredentials() view returns (bytes32)",
      "function getCurrentStakeLimit() view returns (uint256)",
      "function getStakeLimitFullInfo() view returns (bool isStakingPaused, bool isStakingLimitSet, uint256 currentStakeLimit, uint256 maxStakeLimit, uint256 maxStakeLimitGrowthBlocks, uint256 prevStakeLimit, uint256 prevStakeBlockNumber)",
      "function transferSharesFrom(address _sender, address _recipient, uint256 _sharesAmount) returns (uint256)",
      "function balanceOf(address _account) view returns (uint256)",
      "function resumeStaking()",
      "function getFeeDistribution() view returns (uint16 treasuryFeeBasisPoints, uint16 insuranceFeeBasisPoints, uint16 operatorsFeeBasisPoints)",
      "function receiveWithdrawals() payable",
      "function getPooledEthByShares(uint256 _sharesAmount) view returns (uint256)",
      "function allowRecoverability(address token) view returns (bool)",
      "function nonces(address owner) view returns (uint256)",
      "function appId() view returns (bytes32)",
      "function getOracle() view returns (address)",
      "function eip712Domain() view returns (string name, string version, uint256 chainId, address verifyingContract)",
      "function getContractVersion() view returns (uint256)",
      "function getInitializationBlock() view returns (uint256)",
      "function transferShares(address _recipient, uint256 _sharesAmount) returns (uint256)",
      "function symbol() pure returns (string)",
      "function getEIP712StETH() view returns (address)",
      "function transferToVault(address)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function submit(address _referral) payable returns (uint256)",
      "function decreaseAllowance(address _spender, uint256 _subtractedValue) returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function transfer(address _recipient, uint256 _amount) returns (bool)",
      "function deposit(uint256 _maxDepositsCount, uint256 _stakingModuleId, bytes _depositCalldata)",
      "function UNSAFE_CHANGE_DEPOSITED_VALIDATORS_ROLE() view returns (bytes32)",
      "function getBeaconStat() view returns (uint256 depositedValidators, uint256 beaconValidators, uint256 beaconBalance)",
      "function removeStakingLimit()",
      "function handleOracleReport(uint256 _reportTimestamp, uint256 _timeElapsed, uint256 _clValidators, uint256 _clBalance, uint256 _withdrawalVaultBalance, uint256 _elRewardsVaultBalance, uint256 _sharesRequestedToBurn, uint256[] _withdrawalFinalizationBatches, uint256 _simulatedShareRate) returns (uint256[4] postRebaseAmounts)",
      "function getFee() view returns (uint16 totalFee)",
      "function kernel() view returns (address)",
      "function getTotalShares() view returns (uint256)",
      "function permit(address _owner, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function isPetrified() view returns (bool)",
      "function getLidoLocator() view returns (address)",
      "function canDeposit() view returns (bool)",
      "function STAKING_PAUSE_ROLE() view returns (bytes32)",
      "function getDepositableEther() view returns (uint256)",
      "function sharesOf(address _account) view returns (uint256)",
      "function pauseStaking()",
      "function getTotalELRewardsCollected() view returns (uint256)",
      "event StakingPaused()",
      "event StakingResumed()",
      "event StakingLimitSet(uint256 maxStakeLimit, uint256 stakeLimitIncreasePerBlock)",
      "event StakingLimitRemoved()",
      "event CLValidatorsUpdated(uint256 indexed reportTimestamp, uint256 preCLValidators, uint256 postCLValidators)",
      "event DepositedValidatorsChanged(uint256 depositedValidators)",
      "event ETHDistributed(uint256 indexed reportTimestamp, uint256 preCLBalance, uint256 postCLBalance, uint256 withdrawalsWithdrawn, uint256 executionLayerRewardsWithdrawn, uint256 postBufferedEther)",
      "event TokenRebased(uint256 indexed reportTimestamp, uint256 timeElapsed, uint256 preTotalShares, uint256 preTotalEther, uint256 postTotalShares, uint256 postTotalEther, uint256 sharesMintedAsFees)",
      "event LidoLocatorSet(address lidoLocator)",
      "event ELRewardsReceived(uint256 amount)",
      "event WithdrawalsReceived(uint256 amount)",
      "event Submitted(address indexed sender, uint256 amount, address referral)",
      "event Unbuffered(uint256 amount)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)",
      "event EIP712StETHInitialized(address eip712StETH)",
      "event TransferShares(address indexed from, address indexed to, uint256 sharesValue)",
      "event SharesBurnt(address indexed account, uint256 preRebaseTokenAmount, uint256 postRebaseTokenAmount, uint256 sharesAmount)",
      "event Stopped()",
      "event Resumed()",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ContractVersionSet(uint256 version)"
    ],
    "0x1770044a38402e3CfCa2Fcfa0C84a093c9B42135": [
      "function hasInitialized() view returns (bool)",
      "function updateTargetValidatorsLimits(uint256 _nodeOperatorId, uint256 _targetLimitMode, uint256 _targetLimit)",
      "function addSigningKeys(uint256 _nodeOperatorId, uint256 _keysCount, bytes _publicKeys, bytes _signatures)",
      "function getType() view returns (bytes32)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function clearNodeOperatorPenalty(uint256 _nodeOperatorId) returns (bool)",
      "function getRecoveryVault() view returns (address)",
      "function getNodeOperatorIds(uint256 _offset, uint256 _limit) view returns (uint256[] nodeOperatorIds)",
      "function getSigningKeys(uint256 _nodeOperatorId, uint256 _offset, uint256 _limit) view returns (bytes pubkeys, bytes signatures, bool[] used)",
      "function removeSigningKeysOperatorBH(uint256 _nodeOperatorId, uint256 _fromIndex, uint256 _keysCount)",
      "function getNodeOperatorIsActive(uint256 _nodeOperatorId) view returns (bool)",
      "function setNodeOperatorName(uint256 _nodeOperatorId, string _name)",
      "function getRewardsDistribution(uint256 _totalRewardShares) view returns (address[] recipients, uint256[] shares, bool[] penalized)",
      "function invalidateReadyToDepositKeysRange(uint256 _indexFrom, uint256 _indexTo)",
      "function initialize(address _locator, bytes32 _type, uint256 _stuckPenaltyDelay)",
      "function setStuckPenaltyDelay(uint256 _delay)",
      "function finalizeUpgrade_v3()",
      "function getStuckPenaltyDelay() view returns (uint256)",
      "function removeSigningKey(uint256 _nodeOperatorId, uint256 _index)",
      "function getRewardDistributionState() view returns (uint8)",
      "function removeSigningKeys(uint256 _nodeOperatorId, uint256 _fromIndex, uint256 _keysCount)",
      "function isOperatorPenalized(uint256 _nodeOperatorId) view returns (bool)",
      "function deactivateNodeOperator(uint256 _nodeOperatorId)",
      "function allowRecoverability(address token) view returns (bool)",
      "function STAKING_ROUTER_ROLE() view returns (bytes32)",
      "function addSigningKeysOperatorBH(uint256 _nodeOperatorId, uint256 _keysCount, bytes _publicKeys, bytes _signatures)",
      "function appId() view returns (bytes32)",
      "function getActiveNodeOperatorsCount() view returns (uint256)",
      "function addNodeOperator(string _name, address _rewardAddress) returns (uint256 id)",
      "function getContractVersion() view returns (uint256)",
      "function getInitializationBlock() view returns (uint256)",
      "function getUnusedSigningKeyCount(uint256 _nodeOperatorId) view returns (uint256)",
      "function onRewardsMinted(uint256)",
      "function MANAGE_NODE_OPERATOR_ROLE() view returns (bytes32)",
      "function distributeReward()",
      "function onWithdrawalCredentialsChanged()",
      "function activateNodeOperator(uint256 _nodeOperatorId)",
      "function setNodeOperatorRewardAddress(uint256 _nodeOperatorId, address _rewardAddress)",
      "function getNodeOperator(uint256 _nodeOperatorId, bool _fullInfo) view returns (bool active, string name, address rewardAddress, uint64 totalVettedValidators, uint64 totalExitedValidators, uint64 totalAddedValidators, uint64 totalDepositedValidators)",
      "function finalizeUpgrade_v2(address _locator, bytes32 _type, uint256 _stuckPenaltyDelay)",
      "function getStakingModuleSummary() view returns (uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount)",
      "function updateExitedValidatorsCount(bytes _nodeOperatorIds, bytes _exitedValidatorsCounts)",
      "function updateStuckValidatorsCount(bytes _nodeOperatorIds, bytes _stuckValidatorsCounts)",
      "function transferToVault(address _token)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function updateRefundedValidatorsCount(uint256 _nodeOperatorId, uint256 _refundedValidatorsCount)",
      "function getEVMScriptRegistry() view returns (address)",
      "function getNodeOperatorsCount() view returns (uint256)",
      "function updateTargetValidatorsLimits(uint256 _nodeOperatorId, bool _isTargetLimitActive, uint256 _targetLimit)",
      "function setNodeOperatorStakingLimit(uint256 _nodeOperatorId, uint64 _vettedSigningKeysCount)",
      "function getNodeOperatorSummary(uint256 _nodeOperatorId) view returns (uint256 targetLimitMode, uint256 targetValidatorsCount, uint256 stuckValidatorsCount, uint256 refundedValidatorsCount, uint256 stuckPenaltyEndTimestamp, uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount)",
      "function getSigningKey(uint256 _nodeOperatorId, uint256 _index) view returns (bytes key, bytes depositSignature, bool used)",
      "function MAX_NODE_OPERATOR_NAME_LENGTH() view returns (uint256)",
      "function decreaseVettedSigningKeysCount(bytes _nodeOperatorIds, bytes _vettedSigningKeysCounts)",
      "function obtainDepositData(uint256 _depositsCount, bytes) returns (bytes publicKeys, bytes signatures)",
      "function getKeysOpIndex() view returns (uint256)",
      "function getNonce() view returns (uint256)",
      "function kernel() view returns (address)",
      "function getLocator() view returns (address)",
      "function SET_NODE_OPERATOR_LIMIT_ROLE() view returns (bytes32)",
      "function getTotalSigningKeyCount(uint256 _nodeOperatorId) view returns (uint256)",
      "function isPetrified() view returns (bool)",
      "function MAX_STUCK_PENALTY_DELAY() view returns (uint256)",
      "function onExitedAndStuckValidatorsCountsUpdated()",
      "function MAX_NODE_OPERATORS_COUNT() view returns (uint256)",
      "function removeSigningKeyOperatorBH(uint256 _nodeOperatorId, uint256 _index)",
      "function unsafeUpdateValidatorsCount(uint256 _nodeOperatorId, uint256 _exitedValidatorsCount, uint256 _stuckValidatorsCount)",
      "function MANAGE_SIGNING_KEYS() view returns (bytes32)",
      "function isOperatorPenaltyCleared(uint256 _nodeOperatorId) view returns (bool)",
      "event NodeOperatorAdded(uint256 nodeOperatorId, string name, address rewardAddress, uint64 stakingLimit)",
      "event NodeOperatorActiveSet(uint256 indexed nodeOperatorId, bool active)",
      "event NodeOperatorNameSet(uint256 indexed nodeOperatorId, string name)",
      "event NodeOperatorRewardAddressSet(uint256 indexed nodeOperatorId, address rewardAddress)",
      "event NodeOperatorTotalKeysTrimmed(uint256 indexed nodeOperatorId, uint64 totalKeysTrimmed)",
      "event KeysOpIndexSet(uint256 keysOpIndex)",
      "event StakingModuleTypeSet(bytes32 moduleType)",
      "event RewardsDistributed(address indexed rewardAddress, uint256 sharesAmount)",
      "event RewardDistributionStateChanged(uint8 state)",
      "event LocatorContractSet(address locatorAddress)",
      "event VettedSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 approvedValidatorsCount)",
      "event DepositedSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 depositedValidatorsCount)",
      "event ExitedSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 exitedValidatorsCount)",
      "event TotalSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 totalValidatorsCount)",
      "event NonceChanged(uint256 nonce)",
      "event StuckPenaltyDelayChanged(uint256 stuckPenaltyDelay)",
      "event StuckPenaltyStateChanged(uint256 indexed nodeOperatorId, uint256 stuckValidatorsCount, uint256 refundedValidatorsCount, uint256 stuckPenaltyEndTimestamp)",
      "event TargetValidatorsCountChanged(uint256 indexed nodeOperatorId, uint256 targetValidatorsCount, uint256 targetLimitMode)",
      "event NodeOperatorPenalized(address indexed recipientAddress, uint256 sharesPenalizedAmount)",
      "event NodeOperatorPenaltyCleared(uint256 indexed nodeOperatorId)",
      "event ContractVersionSet(uint256 version)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0x17Fc610ecbbAc3f99751b3B2aAc1bA2b22E444f0": [
      "constructor(address stETH, address accounting, address oracle)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error FailedToSendEther()",
      "error FeeSharesDecrease()",
      "error InvalidInitialization()",
      "error InvalidLogCID()",
      "error InvalidProof()",
      "error InvalidShares()",
      "error InvalidTreeCID()",
      "error InvalidTreeRoot()",
      "error NotAccounting()",
      "error NotAllowedToRecover()",
      "error NotEnoughShares()",
      "error NotInitializing()",
      "error NotOracle()",
      "error ZeroAccountingAddress()",
      "error ZeroAdminAddress()",
      "error ZeroOracleAddress()",
      "error ZeroStEthAddress()",
      "event DistributionDataUpdated(uint256 totalClaimableShares, bytes32 treeRoot, string treeCid)",
      "event DistributionLogUpdated(string logCid)",
      "event ERC1155Recovered(address indexed token, uint256 tokenId, address indexed recipient, uint256 amount)",
      "event ERC20Recovered(address indexed token, address indexed recipient, uint256 amount)",
      "event ERC721Recovered(address indexed token, uint256 tokenId, address indexed recipient)",
      "event EtherRecovered(address indexed recipient, uint256 amount)",
      "event FeeDistributed(uint256 indexed nodeOperatorId, uint256 shares)",
      "event Initialized(uint64 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event StETHSharesRecovered(address indexed recipient, uint256 shares)",
      "function ACCOUNTING() view returns (address)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function ORACLE() view returns (address)",
      "function RECOVERER_ROLE() view returns (bytes32)",
      "function STETH() view returns (address)",
      "function distributeFees(uint256 nodeOperatorId, uint256 shares, bytes32[] proof) returns (uint256 sharesToDistribute)",
      "function distributedShares(uint256) view returns (uint256)",
      "function getFeesToDistribute(uint256 nodeOperatorId, uint256 shares, bytes32[] proof) view returns (uint256 sharesToDistribute)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashLeaf(uint256 nodeOperatorId, uint256 shares) pure returns (bytes32)",
      "function initialize(address admin)",
      "function logCid() view returns (string)",
      "function pendingSharesToDistribute() view returns (uint256)",
      "function processOracleReport(bytes32 _treeRoot, string _treeCid, string _logCid, uint256 distributed)",
      "function recoverERC1155(address token, uint256 tokenId)",
      "function recoverERC20(address token, uint256 amount)",
      "function recoverERC721(address token, uint256 tokenId)",
      "function recoverEther()",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function totalClaimableShares() view returns (uint256)",
      "function treeCid() view returns (string)",
      "function treeRoot() view returns (bytes32)"
    ],
    "0x2b33CF282f867A7FF693A66e11B0FcC5552e4425": [
      "function hasInitialized() view returns (bool)",
      "function KERNEL_APP_ID() pure returns (bytes32)",
      "function APP_ADDR_NAMESPACE() pure returns (bytes32)",
      "function getRecoveryVault() view returns (address)",
      "function newAppInstance(bytes32 _appId, address _appBase, bytes _initializePayload, bool _setDefault) returns (address appProxy)",
      "function apps(bytes32, bytes32) view returns (address)",
      "function initialize(address _baseAcl, address _permissionsCreator)",
      "function CORE_NAMESPACE() pure returns (bytes32)",
      "function allowRecoverability(address token) view returns (bool)",
      "function newAppInstance(bytes32 _appId, address _appBase) returns (address appProxy)",
      "function recoveryVaultAppId() view returns (bytes32)",
      "function getInitializationBlock() view returns (uint256)",
      "function setRecoveryVaultAppId(bytes32 _recoveryVaultAppId)",
      "function APP_MANAGER_ROLE() view returns (bytes32)",
      "function newPinnedAppInstance(bytes32 _appId, address _appBase) returns (address appProxy)",
      "function transferToVault(address _token)",
      "function setApp(bytes32 _namespace, bytes32 _appId, address _app)",
      "function getApp(bytes32 _namespace, bytes32 _appId) view returns (address)",
      "function newPinnedAppInstance(bytes32 _appId, address _appBase, bytes _initializePayload, bool _setDefault) returns (address appProxy)",
      "function newAppProxyPinned(address _kernel, bytes32 _appId, bytes _initializePayload) returns (address)",
      "function APP_BASES_NAMESPACE() pure returns (bytes32)",
      "function acl() view returns (address)",
      "function isPetrified() view returns (bool)",
      "function newAppProxy(address _kernel, bytes32 _appId) returns (address)",
      "function DEFAULT_ACL_APP_ID() pure returns (bytes32)",
      "function newAppProxy(address _kernel, bytes32 _appId, bytes _initializePayload) returns (address)",
      "function hasPermission(address _who, address _where, bytes32 _what, bytes _how) view returns (bool)",
      "function newAppProxyPinned(address _kernel, bytes32 _appId) returns (address)",
      "constructor(bool _shouldPetrify)",
      "event NewAppProxy(address proxy, bool isUpgradeable, bytes32 appId)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)",
      "event SetApp(bytes32 indexed namespace, bytes32 indexed appId, address app)"
    ],
    "0x2e59A20f205bB85a89C53f1936454680651E618e": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x3154Cf16ccdb4C6d922629664174b904d80F2C35": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ],
    "0x388C818CA8B9251b393131C08a736A67ccB19297": [
      "constructor(address _lido, address _treasury)",
      "event ERC20Recovered(address indexed requestedBy, address indexed token, uint256 amount)",
      "event ERC721Recovered(address indexed requestedBy, address indexed token, uint256 tokenId)",
      "event ETHReceived(uint256 amount)",
      "function LIDO() view returns (address)",
      "function TREASURY() view returns (address)",
      "function recoverERC20(address _token, uint256 _amount)",
      "function recoverERC721(address _token, uint256 _tokenId)",
      "function withdrawRewards(uint256 _maxAmount) returns (uint256 amount)"
    ],
    "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37": [
      "function ADD_PROTECTED_TOKEN_ROLE() view returns (bytes32)",
      "function supportsInterface(bytes4 _interfaceId) pure returns (bool)",
      "function hasInitialized() view returns (bool)",
      "function ERC1271_INTERFACE_ID() view returns (bytes4)",
      "function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes _data) returns (bytes4)",
      "function isValidSignature(bytes32 _hash, bytes _signature) view returns (bytes4)",
      "function ERC1271_RETURN_INVALID_SIGNATURE() view returns (bytes4)",
      "function TRANSFER_ROLE() view returns (bytes32)",
      "function isValidSignature(bytes _data, bytes _signature) view returns (bytes4)",
      "function getProtectedTokensLength() view returns (uint256)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function RUN_SCRIPT_ROLE() view returns (bytes32)",
      "function SAFE_EXECUTE_ROLE() view returns (bytes32)",
      "function REMOVE_PROTECTED_TOKEN_ROLE() view returns (bytes32)",
      "function deposit(address _token, uint256 _value) payable",
      "function isDepositable() view returns (bool)",
      "function presignHash(bytes32 _hash)",
      "function DESIGNATE_SIGNER_ROLE() view returns (bytes32)",
      "function removeProtectedToken(address _token)",
      "function EXECUTE_ROLE() view returns (bytes32)",
      "function addProtectedToken(address _token)",
      "function allowRecoverability(address) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function initialize()",
      "function protectedTokens(uint256) view returns (address)",
      "function getInitializationBlock() view returns (uint256)",
      "function ERC1271_RETURN_VALID_SIGNATURE() view returns (bytes4)",
      "function transferToVault(address _token)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function setDesignatedSigner(address _designatedSigner)",
      "function designatedSigner() view returns (address)",
      "function safeExecute(address _target, bytes _data)",
      "function PROTECTED_TOKENS_CAP() view returns (uint256)",
      "function ADD_PRESIGNED_HASH_ROLE() view returns (bytes32)",
      "function isPresigned(bytes32) view returns (bool)",
      "function execute(address _target, uint256 _ethValue, bytes _data)",
      "function transfer(address _token, address _to, uint256 _value)",
      "function canForward(address _sender, bytes _evmScript) view returns (bool)",
      "function kernel() view returns (address)",
      "function forward(bytes _evmScript)",
      "function isPetrified() view returns (bool)",
      "function balance(address _token) view returns (uint256)",
      "function isForwarder() pure returns (bool)",
      "event SafeExecute(address indexed sender, address indexed target, bytes data)",
      "event Execute(address indexed sender, address indexed target, uint256 ethValue, bytes data)",
      "event AddProtectedToken(address indexed token)",
      "event RemoveProtectedToken(address indexed token)",
      "event PresignHash(address indexed sender, bytes32 indexed hash)",
      "event SetDesignatedSigner(address indexed sender, address indexed oldSigner, address indexed newSigner)",
      "event ReceiveERC721(address indexed token, address indexed operator, address indexed from, uint256 tokenId, bytes data)",
      "event VaultTransfer(address indexed token, address indexed to, uint256 amount)",
      "event VaultDeposit(address indexed token, address indexed sender, uint256 amount)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0x3ABc4764f0237923d52056CFba7E9AEBf87113D3": [
      "constructor(tuple(address accountingOracle, address depositSecurityModule, address elRewardsVault, address legacyOracle, address lido, address oracleReportSanityChecker, address postTokenRebaseReceiver, address burner, address stakingRouter, address treasury, address validatorsExitBusOracle, address withdrawalQueue, address withdrawalVault, address oracleDaemonConfig) _config)",
      "error ZeroAddress()",
      "function accountingOracle() view returns (address)",
      "function burner() view returns (address)",
      "function coreComponents() view returns (address, address, address, address, address, address)",
      "function depositSecurityModule() view returns (address)",
      "function elRewardsVault() view returns (address)",
      "function legacyOracle() view returns (address)",
      "function lido() view returns (address)",
      "function oracleDaemonConfig() view returns (address)",
      "function oracleReportComponentsForLido() view returns (address, address, address, address, address, address, address)",
      "function oracleReportSanityChecker() view returns (address)",
      "function postTokenRebaseReceiver() view returns (address)",
      "function stakingRouter() view returns (address)",
      "function treasury() view returns (address)",
      "function validatorsExitBusOracle() view returns (address)",
      "function withdrawalQueue() view returns (address)",
      "function withdrawalVault() view returns (address)"
    ],
    "0x3D5148ad93e2ae5DedD1f7A8B3C19E7F67F90c0E": [
      "constructor(bytes32 treeRoot, uint256 curveId, address module)",
      "error AlreadyConsumed()",
      "error InvalidCurveId()",
      "error InvalidProof()",
      "error InvalidTreeRoot()",
      "error SenderIsNotModule()",
      "error ZeroModuleAddress()",
      "event Consumed(address indexed member)",
      "function CURVE_ID() view returns (uint256)",
      "function MODULE() view returns (address)",
      "function TREE_ROOT() view returns (bytes32)",
      "function consume(address member, bytes32[] proof)",
      "function hashLeaf(address member) pure returns (bytes32)",
      "function isConsumed(address member) view returns (bool)",
      "function verifyProof(address member, bytes32[] proof) view returns (bool)"
    ],
    "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x442af784A788A5bd6F42A01Ebe9F287a871243fb": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x4D4074628678Bd302921c20573EEa1ed38DdF7FB": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_)"
    ],
    "0x4d72BFF1BeaC69925F8Bd12526a39BAAb069e5Da": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_)"
    ],
    "0x55032650b14df07b85bF18A3a3eC8E0Af2e028d5": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32": [
      "function name() view returns (string)",
      "function approve(address _spender, uint256 _amount) returns (bool success)",
      "function creationBlock() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _from, address _to, uint256 _amount) returns (bool success)",
      "function decimals() view returns (uint8)",
      "function changeController(address _newController)",
      "function balanceOfAt(address _owner, uint256 _blockNumber) view returns (uint256)",
      "function version() view returns (string)",
      "function createCloneToken(string _cloneTokenName, uint8 _cloneDecimalUnits, string _cloneTokenSymbol, uint256 _snapshotBlock, bool _transfersEnabled) returns (address)",
      "function balanceOf(address _owner) view returns (uint256 balance)",
      "function parentToken() view returns (address)",
      "function generateTokens(address _owner, uint256 _amount) returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupplyAt(uint256 _blockNumber) view returns (uint256)",
      "function transfer(address _to, uint256 _amount) returns (bool success)",
      "function transfersEnabled() view returns (bool)",
      "function parentSnapShotBlock() view returns (uint256)",
      "function approveAndCall(address _spender, uint256 _amount, bytes _extraData) returns (bool success)",
      "function destroyTokens(address _owner, uint256 _amount) returns (bool)",
      "function allowance(address _owner, address _spender) view returns (uint256 remaining)",
      "function claimTokens(address _token)",
      "function tokenFactory() view returns (address)",
      "function enableTransfers(bool _transfersEnabled)",
      "function controller() view returns (address)",
      "constructor(address _tokenFactory, address _parentToken, uint256 _parentSnapShotBlock, string _tokenName, uint8 _decimalUnits, string _tokenSymbol, bool _transfersEnabled)",
      "event ClaimedTokens(address indexed _token, address indexed _controller, uint256 _amount)",
      "event Transfer(address indexed _from, address indexed _to, uint256 _amount)",
      "event NewCloneToken(address indexed _cloneToken, uint256 _snapshotBlock)",
      "event Approval(address indexed _owner, address indexed _spender, uint256 _amount)"
    ],
    "0x6232397ebac4f5772e53285B26c47914E9461E75": [
      "constructor(address _lidoLocator, address _admin, tuple(uint256 exitedValidatorsPerDayLimit, uint256 appearedValidatorsPerDayLimit, uint256 annualBalanceIncreaseBPLimit, uint256 simulatedShareRateDeviationBPLimit, uint256 maxValidatorExitRequestsPerReport, uint256 maxItemsPerExtraDataTransaction, uint256 maxNodeOperatorsPerExtraDataItem, uint256 requestTimestampMargin, uint256 maxPositiveTokenRebase, uint256 initialSlashingAmountPWei, uint256 inactivityPenaltiesAmountPWei, uint256 clBalanceOraclesErrorUpperBPLimit) _limitsList)",
      "error ActualShareRateIsZero()",
      "error AdminCannotBeZero()",
      "error CalledNotFromLido()",
      "error ExitedValidatorsLimitExceeded(uint256 limitPerDay, uint256 exitedPerDay)",
      "error IncorrectAppearedValidators(uint256 appearedValidatorsLimit)",
      "error IncorrectCLBalanceDecrease(uint256 negativeCLRebaseSum, uint256 maxNegativeCLRebaseSum)",
      "error IncorrectCLBalanceIncrease(uint256 annualBalanceDiff)",
      "error IncorrectELRewardsVaultBalance(uint256 actualELRewardsVaultBalance)",
      "error IncorrectExitedValidators(uint256 exitedValidatorsLimit)",
      "error IncorrectLimitValue(uint256 value, uint256 minAllowedValue, uint256 maxAllowedValue)",
      "error IncorrectNumberOfExitRequestsPerReport(uint256 maxRequestsCount)",
      "error IncorrectRequestFinalization(uint256 requestCreationBlock)",
      "error IncorrectSharesRequestedToBurn(uint256 actualSharesToBurn)",
      "error IncorrectSimulatedShareRate(uint256 simulatedShareRate, uint256 actualShareRate)",
      "error IncorrectWithdrawalsVaultBalance(uint256 actualWithdrawalVaultBalance)",
      "error NegativeRebaseFailedCLBalanceMismatch(uint256 reportedValue, uint256 provedValue, uint256 limitBP)",
      "error NegativeRebaseFailedSecondOpinionReportIsNotReady()",
      "error NegativeRebaseFailedWithdrawalVaultBalanceMismatch(uint256 reportedValue, uint256 provedValue)",
      "error NegativeTotalPooledEther()",
      "error TooHighTokenRebaseLimit()",
      "error TooLowTokenRebaseLimit()",
      "error TooManyItemsPerExtraDataTransaction(uint256 maxItemsCount, uint256 receivedItemsCount)",
      "error TooManyNodeOpsPerExtraDataItem(uint256 itemIndex, uint256 nodeOpsCount)",
      "event AnnualBalanceIncreaseBPLimitSet(uint256 annualBalanceIncreaseBPLimit)",
      "event AppearedValidatorsPerDayLimitSet(uint256 appearedValidatorsPerDayLimit)",
      "event CLBalanceOraclesErrorUpperBPLimitSet(uint256 clBalanceOraclesErrorUpperBPLimit)",
      "event ExitedValidatorsPerDayLimitSet(uint256 exitedValidatorsPerDayLimit)",
      "event InactivityPenaltiesAmountSet(uint256 inactivityPenaltiesAmountPWei)",
      "event InitialSlashingAmountSet(uint256 initialSlashingAmountPWei)",
      "event MaxItemsPerExtraDataTransactionSet(uint256 maxItemsPerExtraDataTransaction)",
      "event MaxNodeOperatorsPerExtraDataItemSet(uint256 maxNodeOperatorsPerExtraDataItem)",
      "event MaxPositiveTokenRebaseSet(uint256 maxPositiveTokenRebase)",
      "event MaxValidatorExitRequestsPerReportSet(uint256 maxValidatorExitRequestsPerReport)",
      "event NegativeCLRebaseAccepted(uint256 refSlot, uint256 clTotalBalance, uint256 clBalanceDecrease, uint256 maxAllowedCLRebaseNegativeSum)",
      "event NegativeCLRebaseConfirmed(uint256 refSlot, uint256 clBalanceWei, uint256 withdrawalVaultBalance)",
      "event RequestTimestampMarginSet(uint256 requestTimestampMargin)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SecondOpinionOracleChanged(address indexed secondOpinionOracle)",
      "event SimulatedShareRateDeviationBPLimitSet(uint256 simulatedShareRateDeviationBPLimit)",
      "function ALL_LIMITS_MANAGER_ROLE() view returns (bytes32)",
      "function ANNUAL_BALANCE_INCREASE_LIMIT_MANAGER_ROLE() view returns (bytes32)",
      "function APPEARED_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXITED_VALIDATORS_PER_DAY_LIMIT_MANAGER_ROLE() view returns (bytes32)",
      "function INITIAL_SLASHING_AND_PENALTIES_MANAGER_ROLE() view returns (bytes32)",
      "function MAX_ITEMS_PER_EXTRA_DATA_TRANSACTION_ROLE() view returns (bytes32)",
      "function MAX_NODE_OPERATORS_PER_EXTRA_DATA_ITEM_ROLE() view returns (bytes32)",
      "function MAX_POSITIVE_TOKEN_REBASE_MANAGER_ROLE() view returns (bytes32)",
      "function MAX_VALIDATOR_EXIT_REQUESTS_PER_REPORT_ROLE() view returns (bytes32)",
      "function REQUEST_TIMESTAMP_MARGIN_MANAGER_ROLE() view returns (bytes32)",
      "function SECOND_OPINION_MANAGER_ROLE() view returns (bytes32)",
      "function SHARE_RATE_DEVIATION_LIMIT_MANAGER_ROLE() view returns (bytes32)",
      "function checkAccountingOracleReport(uint256 _timeElapsed, uint256 _preCLBalance, uint256 _postCLBalance, uint256 _withdrawalVaultBalance, uint256 _elRewardsVaultBalance, uint256 _sharesRequestedToBurn, uint256 _preCLValidators, uint256 _postCLValidators)",
      "function checkExitBusOracleReport(uint256 _exitRequestsCount) view",
      "function checkExitedValidatorsRatePerDay(uint256 _exitedValidatorsCount) view",
      "function checkExtraDataItemsCountPerTransaction(uint256 _extraDataListItemsCount) view",
      "function checkNodeOperatorsPerExtraDataItemCount(uint256 _itemIndex, uint256 _nodeOperatorsCount) view",
      "function checkSimulatedShareRate(uint256 _postTotalPooledEther, uint256 _postTotalShares, uint256 _etherLockedOnWithdrawalQueue, uint256 _sharesBurntDueToWithdrawals, uint256 _simulatedShareRate) view",
      "function checkWithdrawalQueueOracleReport(uint256 _lastFinalizableRequestId, uint256 _reportTimestamp) view",
      "function getLidoLocator() view returns (address)",
      "function getMaxPositiveTokenRebase() view returns (uint256)",
      "function getOracleReportLimits() view returns (tuple(uint256 exitedValidatorsPerDayLimit, uint256 appearedValidatorsPerDayLimit, uint256 annualBalanceIncreaseBPLimit, uint256 simulatedShareRateDeviationBPLimit, uint256 maxValidatorExitRequestsPerReport, uint256 maxItemsPerExtraDataTransaction, uint256 maxNodeOperatorsPerExtraDataItem, uint256 requestTimestampMargin, uint256 maxPositiveTokenRebase, uint256 initialSlashingAmountPWei, uint256 inactivityPenaltiesAmountPWei, uint256 clBalanceOraclesErrorUpperBPLimit))",
      "function getReportDataCount() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function reportData(uint256) view returns (uint64 timestamp, uint64 totalExitedValidators, uint128 negativeCLRebaseWei)",
      "function revokeRole(bytes32 role, address account)",
      "function secondOpinionOracle() view returns (address)",
      "function setAnnualBalanceIncreaseBPLimit(uint256 _annualBalanceIncreaseBPLimit)",
      "function setAppearedValidatorsPerDayLimit(uint256 _appearedValidatorsPerDayLimit)",
      "function setExitedValidatorsPerDayLimit(uint256 _exitedValidatorsPerDayLimit)",
      "function setInitialSlashingAndPenaltiesAmount(uint256 _initialSlashingAmountPWei, uint256 _inactivityPenaltiesAmountPWei)",
      "function setMaxExitRequestsPerOracleReport(uint256 _maxValidatorExitRequestsPerReport)",
      "function setMaxItemsPerExtraDataTransaction(uint256 _maxItemsPerExtraDataTransaction)",
      "function setMaxNodeOperatorsPerExtraDataItem(uint256 _maxNodeOperatorsPerExtraDataItem)",
      "function setMaxPositiveTokenRebase(uint256 _maxPositiveTokenRebase)",
      "function setOracleReportLimits(tuple(uint256 exitedValidatorsPerDayLimit, uint256 appearedValidatorsPerDayLimit, uint256 annualBalanceIncreaseBPLimit, uint256 simulatedShareRateDeviationBPLimit, uint256 maxValidatorExitRequestsPerReport, uint256 maxItemsPerExtraDataTransaction, uint256 maxNodeOperatorsPerExtraDataItem, uint256 requestTimestampMargin, uint256 maxPositiveTokenRebase, uint256 initialSlashingAmountPWei, uint256 inactivityPenaltiesAmountPWei, uint256 clBalanceOraclesErrorUpperBPLimit) _limitsList, address _secondOpinionOracle)",
      "function setRequestTimestampMargin(uint256 _requestTimestampMargin)",
      "function setSecondOpinionOracleAndCLBalanceUpperMargin(address _secondOpinionOracle, uint256 _clBalanceOraclesErrorUpperBPLimit)",
      "function setSimulatedShareRateDeviationBPLimit(uint256 _simulatedShareRateDeviationBPLimit)",
      "function smoothenTokenRebase(uint256 _preTotalPooledEther, uint256 _preTotalShares, uint256 _preCLBalance, uint256 _postCLBalance, uint256 _withdrawalVaultBalance, uint256 _elRewardsVaultBalance, uint256 _sharesRequestedToBurn, uint256 _etherToLockForWithdrawals, uint256 _newSharesToBurnForWithdrawals) view returns (uint256 withdrawals, uint256 elRewards, uint256 simulatedSharesToBurn, uint256 sharesToBurn)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0x71093efF8D8599b5fA340D665Ad60fA7C80688e4": [
      "constructor(uint256 slotsPerEpoch, uint256 secondsPerSlot, uint256 genesisTime, uint256 epochsPerFrame, uint256 fastLaneLengthSlots, address admin, address reportProcessor)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error AddressCannotBeZero()",
      "error AdminCannotBeZero()",
      "error ConsensusReportAlreadyProcessing()",
      "error DuplicateMember()",
      "error DuplicateReport()",
      "error EmptyReport()",
      "error EpochsPerFrameCannotBeZero()",
      "error FastLanePeriodCannotBeLongerThanFrame()",
      "error InitialEpochAlreadyArrived()",
      "error InitialEpochIsYetToArrive()",
      "error InitialEpochRefSlotCannotBeEarlierThanProcessingSlot()",
      "error InvalidChainConfig()",
      "error InvalidInitialization()",
      "error InvalidSlot()",
      "error NewProcessorCannotBeTheSame()",
      "error NonFastLaneMemberCannotReportWithinFastLaneInterval()",
      "error NonMember()",
      "error NotInitializing()",
      "error NumericOverflow()",
      "error QuorumTooSmall(uint256 minQuorum, uint256 receivedQuorum)",
      "error ReportProcessorCannotBeZero()",
      "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
      "error StaleReport()",
      "error UnexpectedConsensusVersion(uint256 expected, uint256 received)",
      "event ConsensusLost(uint256 indexed refSlot)",
      "event ConsensusReached(uint256 indexed refSlot, bytes32 report, uint256 support)",
      "event FastLaneConfigSet(uint256 fastLaneLengthSlots)",
      "event FrameConfigSet(uint256 newInitialEpoch, uint256 newEpochsPerFrame)",
      "event Initialized(uint64 version)",
      "event MemberAdded(address indexed addr, uint256 newTotalMembers, uint256 newQuorum)",
      "event MemberRemoved(address indexed addr, uint256 newTotalMembers, uint256 newQuorum)",
      "event QuorumSet(uint256 newQuorum, uint256 totalMembers, uint256 prevQuorum)",
      "event ReportProcessorSet(address indexed processor, address indexed prevProcessor)",
      "event ReportReceived(uint256 indexed refSlot, address indexed member, bytes32 report)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DISABLE_CONSENSUS_ROLE() view returns (bytes32)",
      "function MANAGE_FAST_LANE_CONFIG_ROLE() view returns (bytes32)",
      "function MANAGE_FRAME_CONFIG_ROLE() view returns (bytes32)",
      "function MANAGE_MEMBERS_AND_QUORUM_ROLE() view returns (bytes32)",
      "function MANAGE_REPORT_PROCESSOR_ROLE() view returns (bytes32)",
      "function addMember(address addr, uint256 quorum)",
      "function disableConsensus()",
      "function getChainConfig() view returns (uint256 slotsPerEpoch, uint256 secondsPerSlot, uint256 genesisTime)",
      "function getConsensusState() view returns (uint256 refSlot, bytes32 consensusReport, bool isReportProcessing)",
      "function getConsensusStateForMember(address addr) view returns (tuple(uint256 currentFrameRefSlot, bytes32 currentFrameConsensusReport, bool isMember, bool isFastLane, bool canReport, uint256 lastMemberReportRefSlot, bytes32 currentFrameMemberReport) result)",
      "function getCurrentFrame() view returns (uint256 refSlot, uint256 reportProcessingDeadlineSlot)",
      "function getFastLaneMembers() view returns (address[] addresses, uint256[] lastReportedRefSlots)",
      "function getFrameConfig() view returns (uint256 initialEpoch, uint256 epochsPerFrame, uint256 fastLaneLengthSlots)",
      "function getInitialRefSlot() view returns (uint256)",
      "function getIsFastLaneMember(address addr) view returns (bool)",
      "function getIsMember(address addr) view returns (bool)",
      "function getMembers() view returns (address[] addresses, uint256[] lastReportedRefSlots)",
      "function getQuorum() view returns (uint256)",
      "function getReportProcessor() view returns (address)",
      "function getReportVariants() view returns (bytes32[] variants, uint256[] support)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function removeMember(address addr, uint256 quorum)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function setFastLaneLengthSlots(uint256 fastLaneLengthSlots)",
      "function setFrameConfig(uint256 epochsPerFrame, uint256 fastLaneLengthSlots)",
      "function setQuorum(uint256 quorum)",
      "function setReportProcessor(address newProcessor)",
      "function submitReport(uint256 slot, bytes32 report, uint256 consensusVersion)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateInitialEpoch(uint256 initialEpoch)"
    ],
    "0x71FCD2a6F38B644641B0F46c345Ea03Daabf2758": [
      "constructor(address lidoLocator, address communityStakingModule, uint256 maxCurveLength, uint256 minBondLockRetentionPeriod, uint256 maxBondLockRetentionPeriod)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error ElRewardsVaultReceiveFailed()",
      "error FailedToSendEther()",
      "error InvalidBondCurveId()",
      "error InvalidBondCurveLength()",
      "error InvalidBondCurveMaxLength()",
      "error InvalidBondCurveValues()",
      "error InvalidBondLockAmount()",
      "error InvalidBondLockRetentionPeriod()",
      "error InvalidInitialisationCurveId()",
      "error InvalidInitialization()",
      "error NodeOperatorDoesNotExist()",
      "error NotAllowedToRecover()",
      "error NotInitializing()",
      "error NothingToClaim()",
      "error PauseUntilMustBeInFuture()",
      "error PausedExpected()",
      "error ResumedExpected()",
      "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
      "error SenderIsNotCSM()",
      "error ZeroAdminAddress()",
      "error ZeroChargePenaltyRecipientAddress()",
      "error ZeroFeeDistributorAddress()",
      "error ZeroLocatorAddress()",
      "error ZeroModuleAddress()",
      "error ZeroPauseDuration()",
      "event BondBurned(uint256 indexed nodeOperatorId, uint256 toBurnAmount, uint256 burnedAmount)",
      "event BondCharged(uint256 indexed nodeOperatorId, uint256 toChargeAmount, uint256 chargedAmount)",
      "event BondClaimedStETH(uint256 indexed nodeOperatorId, address to, uint256 amount)",
      "event BondClaimedUnstETH(uint256 indexed nodeOperatorId, address to, uint256 amount, uint256 requestId)",
      "event BondClaimedWstETH(uint256 indexed nodeOperatorId, address to, uint256 amount)",
      "event BondCurveAdded(uint256[] bondCurve)",
      "event BondCurveSet(uint256 indexed nodeOperatorId, uint256 curveId)",
      "event BondCurveUpdated(uint256 indexed curveId, uint256[] bondCurve)",
      "event BondDepositedETH(uint256 indexed nodeOperatorId, address from, uint256 amount)",
      "event BondDepositedStETH(uint256 indexed nodeOperatorId, address from, uint256 amount)",
      "event BondDepositedWstETH(uint256 indexed nodeOperatorId, address from, uint256 amount)",
      "event BondLockChanged(uint256 indexed nodeOperatorId, uint256 newAmount, uint256 retentionUntil)",
      "event BondLockCompensated(uint256 indexed nodeOperatorId, uint256 amount)",
      "event BondLockRemoved(uint256 indexed nodeOperatorId)",
      "event BondLockRetentionPeriodChanged(uint256 retentionPeriod)",
      "event ChargePenaltyRecipientSet(address chargePenaltyRecipient)",
      "event ERC1155Recovered(address indexed token, uint256 tokenId, address indexed recipient, uint256 amount)",
      "event ERC20Recovered(address indexed token, address indexed recipient, uint256 amount)",
      "event ERC721Recovered(address indexed token, uint256 tokenId, address indexed recipient)",
      "event EtherRecovered(address indexed recipient, uint256 amount)",
      "event Initialized(uint64 version)",
      "event Paused(uint256 duration)",
      "event Resumed()",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event StETHSharesRecovered(address indexed recipient, uint256 shares)",
      "function ACCOUNTING_MANAGER_ROLE() view returns (bytes32)",
      "function CSM() view returns (address)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEFAULT_BOND_CURVE_ID() view returns (uint256)",
      "function LIDO() view returns (address)",
      "function LIDO_LOCATOR() view returns (address)",
      "function MANAGE_BOND_CURVES_ROLE() view returns (bytes32)",
      "function MAX_BOND_LOCK_RETENTION_PERIOD() view returns (uint256)",
      "function MAX_CURVE_LENGTH() view returns (uint256)",
      "function MIN_BOND_LOCK_RETENTION_PERIOD() view returns (uint256)",
      "function MIN_CURVE_LENGTH() view returns (uint256)",
      "function PAUSE_INFINITELY() view returns (uint256)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function RECOVERER_ROLE() view returns (bytes32)",
      "function RESET_BOND_CURVE_ROLE() view returns (bytes32)",
      "function RESUME_ROLE() view returns (bytes32)",
      "function SET_BOND_CURVE_ROLE() view returns (bytes32)",
      "function WITHDRAWAL_QUEUE() view returns (address)",
      "function WSTETH() view returns (address)",
      "function addBondCurve(uint256[] bondCurve) returns (uint256 id)",
      "function chargeFee(uint256 nodeOperatorId, uint256 amount)",
      "function chargePenaltyRecipient() view returns (address)",
      "function claimRewardsStETH(uint256 nodeOperatorId, uint256 stETHAmount, address rewardAddress, uint256 cumulativeFeeShares, bytes32[] rewardsProof)",
      "function claimRewardsUnstETH(uint256 nodeOperatorId, uint256 stEthAmount, address rewardAddress, uint256 cumulativeFeeShares, bytes32[] rewardsProof)",
      "function claimRewardsWstETH(uint256 nodeOperatorId, uint256 wstETHAmount, address rewardAddress, uint256 cumulativeFeeShares, bytes32[] rewardsProof)",
      "function compensateLockedBondETH(uint256 nodeOperatorId) payable",
      "function depositETH(address from, uint256 nodeOperatorId) payable",
      "function depositStETH(address from, uint256 nodeOperatorId, uint256 stETHAmount, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit)",
      "function depositWstETH(address from, uint256 nodeOperatorId, uint256 wstETHAmount, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit)",
      "function feeDistributor() view returns (address)",
      "function getActualLockedBond(uint256 nodeOperatorId) view returns (uint256)",
      "function getBond(uint256 nodeOperatorId) view returns (uint256)",
      "function getBondAmountByKeysCount(uint256 keys, tuple(uint256[] points, uint256 trend) curve) pure returns (uint256)",
      "function getBondAmountByKeysCount(uint256 keys, uint256 curveId) view returns (uint256)",
      "function getBondAmountByKeysCountWstETH(uint256 keysCount, uint256 curveId) view returns (uint256)",
      "function getBondAmountByKeysCountWstETH(uint256 keysCount, tuple(uint256[] points, uint256 trend) curve) view returns (uint256)",
      "function getBondCurve(uint256 nodeOperatorId) view returns (tuple(uint256[] points, uint256 trend))",
      "function getBondCurveId(uint256 nodeOperatorId) view returns (uint256)",
      "function getBondLockRetentionPeriod() view returns (uint256)",
      "function getBondShares(uint256 nodeOperatorId) view returns (uint256)",
      "function getBondSummary(uint256 nodeOperatorId) view returns (uint256 current, uint256 required)",
      "function getBondSummaryShares(uint256 nodeOperatorId) view returns (uint256 current, uint256 required)",
      "function getCurveInfo(uint256 curveId) view returns (tuple(uint256[] points, uint256 trend))",
      "function getKeysCountByBondAmount(uint256 amount, tuple(uint256[] points, uint256 trend) curve) pure returns (uint256)",
      "function getKeysCountByBondAmount(uint256 amount, uint256 curveId) view returns (uint256)",
      "function getLockedBondInfo(uint256 nodeOperatorId) view returns (tuple(uint128 amount, uint128 retentionUntil))",
      "function getRequiredBondForNextKeys(uint256 nodeOperatorId, uint256 additionalKeys) view returns (uint256)",
      "function getRequiredBondForNextKeysWstETH(uint256 nodeOperatorId, uint256 additionalKeys) view returns (uint256)",
      "function getResumeSinceTimestamp() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getUnbondedKeysCount(uint256 nodeOperatorId) view returns (uint256)",
      "function getUnbondedKeysCountToEject(uint256 nodeOperatorId) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(uint256[] bondCurve, address admin, address _feeDistributor, uint256 bondLockRetentionPeriod, address _chargePenaltyRecipient)",
      "function isPaused() view returns (bool)",
      "function lockBondETH(uint256 nodeOperatorId, uint256 amount)",
      "function pauseFor(uint256 duration)",
      "function penalize(uint256 nodeOperatorId, uint256 amount)",
      "function pullFeeRewards(uint256 nodeOperatorId, uint256 cumulativeFeeShares, bytes32[] rewardsProof)",
      "function recoverERC1155(address token, uint256 tokenId)",
      "function recoverERC20(address token, uint256 amount)",
      "function recoverERC721(address token, uint256 tokenId)",
      "function recoverEther()",
      "function recoverStETHShares()",
      "function releaseLockedBondETH(uint256 nodeOperatorId, uint256 amount)",
      "function renewBurnerAllowance()",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function resetBondCurve(uint256 nodeOperatorId)",
      "function resume()",
      "function revokeRole(bytes32 role, address account)",
      "function setBondCurve(uint256 nodeOperatorId, uint256 curveId)",
      "function setChargePenaltyRecipient(address _chargePenaltyRecipient)",
      "function setLockedBondRetentionPeriod(uint256 retention)",
      "function settleLockedBondETH(uint256 nodeOperatorId)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function totalBondShares() view returns (uint256)",
      "function updateBondCurve(uint256 curveId, uint256[] bondCurve)"
    ],
    "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0": [
      "constructor(address _stETH)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getStETHByWstETH(uint256 _wstETHAmount) view returns (uint256)",
      "function getWstETHByStETH(uint256 _stETHAmount) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function stETH() view returns (address)",
      "function stEthPerToken() view returns (uint256)",
      "function symbol() view returns (string)",
      "function tokensPerStEth() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function unwrap(uint256 _wstETHAmount) returns (uint256)",
      "function wrap(uint256 _stETHAmount) returns (uint256)"
    ],
    "0x7FaDB6358950c5fAA66Cb5EB8eE5147De3df355a": [
      "constructor(uint256 slotsPerEpoch, uint256 secondsPerSlot, uint256 genesisTime, uint256 epochsPerFrame, uint256 fastLaneLengthSlots, address admin, address reportProcessor)",
      "error AddressCannotBeZero()",
      "error AdminCannotBeZero()",
      "error ConsensusReportAlreadyProcessing()",
      "error DuplicateMember()",
      "error DuplicateReport()",
      "error EmptyReport()",
      "error EpochsPerFrameCannotBeZero()",
      "error FastLanePeriodCannotBeLongerThanFrame()",
      "error InitialEpochAlreadyArrived()",
      "error InitialEpochIsYetToArrive()",
      "error InitialEpochRefSlotCannotBeEarlierThanProcessingSlot()",
      "error InvalidChainConfig()",
      "error InvalidSlot()",
      "error NewProcessorCannotBeTheSame()",
      "error NonFastLaneMemberCannotReportWithinFastLaneInterval()",
      "error NonMember()",
      "error NumericOverflow()",
      "error QuorumTooSmall(uint256 minQuorum, uint256 receivedQuorum)",
      "error ReportProcessorCannotBeZero()",
      "error StaleReport()",
      "error UnexpectedConsensusVersion(uint256 expected, uint256 received)",
      "event ConsensusLost(uint256 indexed refSlot)",
      "event ConsensusReached(uint256 indexed refSlot, bytes32 report, uint256 support)",
      "event FastLaneConfigSet(uint256 fastLaneLengthSlots)",
      "event FrameConfigSet(uint256 newInitialEpoch, uint256 newEpochsPerFrame)",
      "event MemberAdded(address indexed addr, uint256 newTotalMembers, uint256 newQuorum)",
      "event MemberRemoved(address indexed addr, uint256 newTotalMembers, uint256 newQuorum)",
      "event QuorumSet(uint256 newQuorum, uint256 totalMembers, uint256 prevQuorum)",
      "event ReportProcessorSet(address indexed processor, address indexed prevProcessor)",
      "event ReportReceived(uint256 indexed refSlot, address indexed member, bytes32 report)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DISABLE_CONSENSUS_ROLE() view returns (bytes32)",
      "function MANAGE_FAST_LANE_CONFIG_ROLE() view returns (bytes32)",
      "function MANAGE_FRAME_CONFIG_ROLE() view returns (bytes32)",
      "function MANAGE_MEMBERS_AND_QUORUM_ROLE() view returns (bytes32)",
      "function MANAGE_REPORT_PROCESSOR_ROLE() view returns (bytes32)",
      "function addMember(address addr, uint256 quorum)",
      "function disableConsensus()",
      "function getChainConfig() view returns (uint256 slotsPerEpoch, uint256 secondsPerSlot, uint256 genesisTime)",
      "function getConsensusState() view returns (uint256 refSlot, bytes32 consensusReport, bool isReportProcessing)",
      "function getConsensusStateForMember(address addr) view returns (tuple(uint256 currentFrameRefSlot, bytes32 currentFrameConsensusReport, bool isMember, bool isFastLane, bool canReport, uint256 lastMemberReportRefSlot, bytes32 currentFrameMemberReport) result)",
      "function getCurrentFrame() view returns (uint256 refSlot, uint256 reportProcessingDeadlineSlot)",
      "function getFastLaneMembers() view returns (address[] addresses, uint256[] lastReportedRefSlots)",
      "function getFrameConfig() view returns (uint256 initialEpoch, uint256 epochsPerFrame, uint256 fastLaneLengthSlots)",
      "function getInitialRefSlot() view returns (uint256)",
      "function getIsFastLaneMember(address addr) view returns (bool)",
      "function getIsMember(address addr) view returns (bool)",
      "function getMembers() view returns (address[] addresses, uint256[] lastReportedRefSlots)",
      "function getQuorum() view returns (uint256)",
      "function getReportProcessor() view returns (address)",
      "function getReportVariants() view returns (bytes32[] variants, uint256[] support)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function removeMember(address addr, uint256 quorum)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setFastLaneLengthSlots(uint256 fastLaneLengthSlots)",
      "function setFrameConfig(uint256 epochsPerFrame, uint256 fastLaneLengthSlots)",
      "function setQuorum(uint256 quorum)",
      "function setReportProcessor(address newProcessor)",
      "function submitReport(uint256 slot, bytes32 report, uint256 consensusVersion)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateInitialEpoch(uint256 initialEpoch)"
    ],
    "0x852deD011285fe67063a08005c71a85690503Cee": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0x853cc0D5917f49B57B8e9F89e491F5E18919093A": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0x89eDa99C0551d4320b56F82DDE8dF2f8D2eF81aA": [
      "constructor(address _depositContract)",
      "error AppAuthLidoFailed()",
      "error ArraysLengthMismatch(uint256 firstArrayLength, uint256 secondArrayLength)",
      "error DepositContractZeroAddress()",
      "error DirectETHTransfer()",
      "error EmptyWithdrawalsCredentials()",
      "error ExitedValidatorsCountCannotDecrease()",
      "error InvalidContractVersionIncrement()",
      "error InvalidDepositsValue(uint256 etherValue, uint256 depositsCount)",
      "error InvalidFeeSum()",
      "error InvalidMaxDepositPerBlockValue()",
      "error InvalidMinDepositBlockDistance()",
      "error InvalidPriorityExitShareThreshold()",
      "error InvalidPublicKeysBatchLength(uint256 actual, uint256 expected)",
      "error InvalidReportData(uint256 code)",
      "error InvalidSignaturesBatchLength(uint256 actual, uint256 expected)",
      "error InvalidStakeShareLimit()",
      "error NonZeroContractVersionOnInit()",
      "error ReportedExitedValidatorsExceedDeposited(uint256 reportedExitedValidatorsCount, uint256 depositedValidatorsCount)",
      "error StakingModuleAddressExists()",
      "error StakingModuleNotActive()",
      "error StakingModuleStatusTheSame()",
      "error StakingModuleUnregistered()",
      "error StakingModuleWrongName()",
      "error StakingModulesLimitExceeded()",
      "error UnexpectedContractVersion(uint256 expected, uint256 received)",
      "error UnexpectedCurrentValidatorsCount(uint256 currentModuleExitedValidatorsCount, uint256 currentNodeOpExitedValidatorsCount, uint256 currentNodeOpStuckValidatorsCount)",
      "error UnexpectedFinalExitedValidatorsCount(uint256 newModuleTotalExitedValidatorsCount, uint256 newModuleTotalExitedValidatorsCountInStakingRouter)",
      "error UnrecoverableModuleError()",
      "error ZeroAddressAdmin()",
      "error ZeroAddressLido()",
      "error ZeroAddressStakingModule()",
      "event ContractVersionSet(uint256 version)",
      "event ExitedAndStuckValidatorsCountsUpdateFailed(uint256 indexed stakingModuleId, bytes lowLevelRevertData)",
      "event RewardsMintedReportFailed(uint256 indexed stakingModuleId, bytes lowLevelRevertData)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event StakingModuleAdded(uint256 indexed stakingModuleId, address stakingModule, string name, address createdBy)",
      "event StakingModuleExitedValidatorsIncompleteReporting(uint256 indexed stakingModuleId, uint256 unreportedExitedValidatorsCount)",
      "event StakingModuleFeesSet(uint256 indexed stakingModuleId, uint256 stakingModuleFee, uint256 treasuryFee, address setBy)",
      "event StakingModuleMaxDepositsPerBlockSet(uint256 indexed stakingModuleId, uint256 maxDepositsPerBlock, address setBy)",
      "event StakingModuleMinDepositBlockDistanceSet(uint256 indexed stakingModuleId, uint256 minDepositBlockDistance, address setBy)",
      "event StakingModuleShareLimitSet(uint256 indexed stakingModuleId, uint256 stakeShareLimit, uint256 priorityExitShareThreshold, address setBy)",
      "event StakingModuleStatusSet(uint256 indexed stakingModuleId, uint8 status, address setBy)",
      "event StakingRouterETHDeposited(uint256 indexed stakingModuleId, uint256 amount)",
      "event WithdrawalCredentialsSet(bytes32 withdrawalCredentials, address setBy)",
      "event WithdrawalsCredentialsChangeFailed(uint256 indexed stakingModuleId, bytes lowLevelRevertData)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_CONTRACT() view returns (address)",
      "function FEE_PRECISION_POINTS() view returns (uint256)",
      "function MANAGE_WITHDRAWAL_CREDENTIALS_ROLE() view returns (bytes32)",
      "function MAX_STAKING_MODULES_COUNT() view returns (uint256)",
      "function MAX_STAKING_MODULE_NAME_LENGTH() view returns (uint256)",
      "function REPORT_EXITED_VALIDATORS_ROLE() view returns (bytes32)",
      "function REPORT_REWARDS_MINTED_ROLE() view returns (bytes32)",
      "function STAKING_MODULE_MANAGE_ROLE() view returns (bytes32)",
      "function STAKING_MODULE_UNVETTING_ROLE() view returns (bytes32)",
      "function TOTAL_BASIS_POINTS() view returns (uint256)",
      "function UNSAFE_SET_EXITED_VALIDATORS_ROLE() view returns (bytes32)",
      "function addStakingModule(string _name, address _stakingModuleAddress, uint256 _stakeShareLimit, uint256 _priorityExitShareThreshold, uint256 _stakingModuleFee, uint256 _treasuryFee, uint256 _maxDepositsPerBlock, uint256 _minDepositBlockDistance)",
      "function decreaseStakingModuleVettedKeysCountByNodeOperator(uint256 _stakingModuleId, bytes _nodeOperatorIds, bytes _vettedSigningKeysCounts)",
      "function deposit(uint256 _depositsCount, uint256 _stakingModuleId, bytes _depositCalldata) payable",
      "function finalizeUpgrade_v2(uint256[] _priorityExitShareThresholds, uint256[] _maxDepositsPerBlock, uint256[] _minDepositBlockDistances)",
      "function getAllNodeOperatorDigests(uint256 _stakingModuleId) view returns (tuple(uint256 id, bool isActive, tuple(uint256 targetLimitMode, uint256 targetValidatorsCount, uint256 stuckValidatorsCount, uint256 refundedValidatorsCount, uint256 stuckPenaltyEndTimestamp, uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount) summary)[])",
      "function getAllStakingModuleDigests() view returns (tuple(uint256 nodeOperatorsCount, uint256 activeNodeOperatorsCount, tuple(uint24 id, address stakingModuleAddress, uint16 stakingModuleFee, uint16 treasuryFee, uint16 stakeShareLimit, uint8 status, string name, uint64 lastDepositAt, uint256 lastDepositBlock, uint256 exitedValidatorsCount, uint16 priorityExitShareThreshold, uint64 maxDepositsPerBlock, uint64 minDepositBlockDistance) state, tuple(uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount) summary)[])",
      "function getContractVersion() view returns (uint256)",
      "function getDepositsAllocation(uint256 _depositsCount) view returns (uint256 allocated, uint256[] allocations)",
      "function getLido() view returns (address)",
      "function getNodeOperatorDigests(uint256 _stakingModuleId, uint256[] _nodeOperatorIds) view returns (tuple(uint256 id, bool isActive, tuple(uint256 targetLimitMode, uint256 targetValidatorsCount, uint256 stuckValidatorsCount, uint256 refundedValidatorsCount, uint256 stuckPenaltyEndTimestamp, uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount) summary)[] digests)",
      "function getNodeOperatorDigests(uint256 _stakingModuleId, uint256 _offset, uint256 _limit) view returns (tuple(uint256 id, bool isActive, tuple(uint256 targetLimitMode, uint256 targetValidatorsCount, uint256 stuckValidatorsCount, uint256 refundedValidatorsCount, uint256 stuckPenaltyEndTimestamp, uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount) summary)[])",
      "function getNodeOperatorSummary(uint256 _stakingModuleId, uint256 _nodeOperatorId) view returns (tuple(uint256 targetLimitMode, uint256 targetValidatorsCount, uint256 stuckValidatorsCount, uint256 refundedValidatorsCount, uint256 stuckPenaltyEndTimestamp, uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount) summary)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getStakingFeeAggregateDistribution() view returns (uint96 modulesFee, uint96 treasuryFee, uint256 basePrecision)",
      "function getStakingFeeAggregateDistributionE4Precision() view returns (uint16 modulesFee, uint16 treasuryFee)",
      "function getStakingModule(uint256 _stakingModuleId) view returns (tuple(uint24 id, address stakingModuleAddress, uint16 stakingModuleFee, uint16 treasuryFee, uint16 stakeShareLimit, uint8 status, string name, uint64 lastDepositAt, uint256 lastDepositBlock, uint256 exitedValidatorsCount, uint16 priorityExitShareThreshold, uint64 maxDepositsPerBlock, uint64 minDepositBlockDistance))",
      "function getStakingModuleActiveValidatorsCount(uint256 _stakingModuleId) view returns (uint256 activeValidatorsCount)",
      "function getStakingModuleDigests(uint256[] _stakingModuleIds) view returns (tuple(uint256 nodeOperatorsCount, uint256 activeNodeOperatorsCount, tuple(uint24 id, address stakingModuleAddress, uint16 stakingModuleFee, uint16 treasuryFee, uint16 stakeShareLimit, uint8 status, string name, uint64 lastDepositAt, uint256 lastDepositBlock, uint256 exitedValidatorsCount, uint16 priorityExitShareThreshold, uint64 maxDepositsPerBlock, uint64 minDepositBlockDistance) state, tuple(uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount) summary)[] digests)",
      "function getStakingModuleIds() view returns (uint256[] stakingModuleIds)",
      "function getStakingModuleIsActive(uint256 _stakingModuleId) view returns (bool)",
      "function getStakingModuleIsDepositsPaused(uint256 _stakingModuleId) view returns (bool)",
      "function getStakingModuleIsStopped(uint256 _stakingModuleId) view returns (bool)",
      "function getStakingModuleLastDepositBlock(uint256 _stakingModuleId) view returns (uint256)",
      "function getStakingModuleMaxDepositsCount(uint256 _stakingModuleId, uint256 _maxDepositsValue) view returns (uint256)",
      "function getStakingModuleMaxDepositsPerBlock(uint256 _stakingModuleId) view returns (uint256)",
      "function getStakingModuleMinDepositBlockDistance(uint256 _stakingModuleId) view returns (uint256)",
      "function getStakingModuleNonce(uint256 _stakingModuleId) view returns (uint256)",
      "function getStakingModuleStatus(uint256 _stakingModuleId) view returns (uint8)",
      "function getStakingModuleSummary(uint256 _stakingModuleId) view returns (tuple(uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount) summary)",
      "function getStakingModules() view returns (tuple(uint24 id, address stakingModuleAddress, uint16 stakingModuleFee, uint16 treasuryFee, uint16 stakeShareLimit, uint8 status, string name, uint64 lastDepositAt, uint256 lastDepositBlock, uint256 exitedValidatorsCount, uint16 priorityExitShareThreshold, uint64 maxDepositsPerBlock, uint64 minDepositBlockDistance)[] res)",
      "function getStakingModulesCount() view returns (uint256)",
      "function getStakingRewardsDistribution() view returns (address[] recipients, uint256[] stakingModuleIds, uint96[] stakingModuleFees, uint96 totalFee, uint256 precisionPoints)",
      "function getTotalFeeE4Precision() view returns (uint16 totalFee)",
      "function getWithdrawalCredentials() view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasStakingModule(uint256 _stakingModuleId) view returns (bool)",
      "function initialize(address _admin, address _lido, bytes32 _withdrawalCredentials)",
      "function onValidatorsCountsByNodeOperatorReportingFinished()",
      "function renounceRole(bytes32 role, address account)",
      "function reportRewardsMinted(uint256[] _stakingModuleIds, uint256[] _totalShares)",
      "function reportStakingModuleExitedValidatorsCountByNodeOperator(uint256 _stakingModuleId, bytes _nodeOperatorIds, bytes _exitedValidatorsCounts)",
      "function reportStakingModuleStuckValidatorsCountByNodeOperator(uint256 _stakingModuleId, bytes _nodeOperatorIds, bytes _stuckValidatorsCounts)",
      "function revokeRole(bytes32 role, address account)",
      "function setStakingModuleStatus(uint256 _stakingModuleId, uint8 _status)",
      "function setWithdrawalCredentials(bytes32 _withdrawalCredentials)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unsafeSetExitedValidatorsCount(uint256 _stakingModuleId, uint256 _nodeOperatorId, bool _triggerUpdateFinish, tuple(uint256 currentModuleExitedValidatorsCount, uint256 currentNodeOperatorExitedValidatorsCount, uint256 currentNodeOperatorStuckValidatorsCount, uint256 newModuleExitedValidatorsCount, uint256 newNodeOperatorExitedValidatorsCount, uint256 newNodeOperatorStuckValidatorsCount) _correction)",
      "function updateExitedValidatorsCountByStakingModule(uint256[] _stakingModuleIds, uint256[] _exitedValidatorsCounts) returns (uint256)",
      "function updateRefundedValidatorsCount(uint256 _stakingModuleId, uint256 _nodeOperatorId, uint256 _refundedValidatorsCount)",
      "function updateStakingModule(uint256 _stakingModuleId, uint256 _stakeShareLimit, uint256 _priorityExitShareThreshold, uint256 _stakingModuleFee, uint256 _treasuryFee, uint256 _maxDepositsPerBlock, uint256 _minDepositBlockDistance)",
      "function updateTargetValidatorsLimits(uint256 _stakingModuleId, uint256 _nodeOperatorId, uint256 _targetLimitMode, uint256 _targetLimit)"
    ],
    "0x8daEa53b17a629918CDFAB785C5c74077c1D895B": [
      "constructor(bytes32 moduleType, uint256 minSlashingPenaltyQuotient, uint256 elRewardsStealingFine, uint256 maxKeysPerOperatorEA, uint256 maxKeyRemovalCharge, address lidoLocator)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error AlreadyActivated()",
      "error AlreadyProposed()",
      "error AlreadySubmitted()",
      "error EmptyKey()",
      "error ExitedKeysDecrease()",
      "error ExitedKeysHigherThanTotalDeposited()",
      "error FailedToSendEther()",
      "error InvalidAmount()",
      "error InvalidInitialization()",
      "error InvalidInput()",
      "error InvalidKeysCount()",
      "error InvalidLength()",
      "error InvalidReportData()",
      "error InvalidVetKeysPointer()",
      "error MaxSigningKeysCountExceeded()",
      "error MethodCallIsNotAllowed()",
      "error NodeOperatorDoesNotExist()",
      "error NotAllowedToJoinYet()",
      "error NotAllowedToRecover()",
      "error NotEnoughKeys()",
      "error NotInitializing()",
      "error NotSupported()",
      "error PauseUntilMustBeInFuture()",
      "error PausedExpected()",
      "error QueueIsEmpty()",
      "error QueueLookupNoLimit()",
      "error ResumedExpected()",
      "error SameAddress()",
      "error SenderIsNotEligible()",
      "error SenderIsNotManagerAddress()",
      "error SenderIsNotProposedAddress()",
      "error SenderIsNotRewardAddress()",
      "error SigningKeysInvalidOffset()",
      "error StuckKeysHigherThanNonExited()",
      "error ZeroAccountingAddress()",
      "error ZeroAdminAddress()",
      "error ZeroLocatorAddress()",
      "error ZeroPauseDuration()",
      "error ZeroRewardAddress()",
      "event BatchEnqueued(uint256 indexed nodeOperatorId, uint256 count)",
      "event DepositableSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 depositableKeysCount)",
      "event DepositedSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 depositedKeysCount)",
      "event ELRewardsStealingPenaltyCancelled(uint256 indexed nodeOperatorId, uint256 amount)",
      "event ELRewardsStealingPenaltyCompensated(uint256 indexed nodeOperatorId, uint256 amount)",
      "event ELRewardsStealingPenaltyReported(uint256 indexed nodeOperatorId, bytes32 proposedBlockHash, uint256 stolenAmount)",
      "event ELRewardsStealingPenaltySettled(uint256 indexed nodeOperatorId)",
      "event ERC1155Recovered(address indexed token, uint256 tokenId, address indexed recipient, uint256 amount)",
      "event ERC20Recovered(address indexed token, address indexed recipient, uint256 amount)",
      "event ERC721Recovered(address indexed token, uint256 tokenId, address indexed recipient)",
      "event EtherRecovered(address indexed recipient, uint256 amount)",
      "event ExitedSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 exitedKeysCount)",
      "event InitialSlashingSubmitted(uint256 indexed nodeOperatorId, uint256 keyIndex, bytes pubkey)",
      "event Initialized(uint64 version)",
      "event KeyRemovalChargeApplied(uint256 indexed nodeOperatorId)",
      "event KeyRemovalChargeSet(uint256 amount)",
      "event NodeOperatorAdded(uint256 indexed nodeOperatorId, address indexed managerAddress, address indexed rewardAddress)",
      "event NodeOperatorManagerAddressChangeProposed(uint256 indexed nodeOperatorId, address indexed oldProposedAddress, address indexed newProposedAddress)",
      "event NodeOperatorManagerAddressChanged(uint256 indexed nodeOperatorId, address indexed oldAddress, address indexed newAddress)",
      "event NodeOperatorRewardAddressChangeProposed(uint256 indexed nodeOperatorId, address indexed oldProposedAddress, address indexed newProposedAddress)",
      "event NodeOperatorRewardAddressChanged(uint256 indexed nodeOperatorId, address indexed oldAddress, address indexed newAddress)",
      "event NonceChanged(uint256 nonce)",
      "event Paused(uint256 duration)",
      "event PublicRelease()",
      "event ReferrerSet(uint256 indexed nodeOperatorId, address indexed referrer)",
      "event Resumed()",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SigningKeyAdded(uint256 indexed nodeOperatorId, bytes pubkey)",
      "event SigningKeyRemoved(uint256 indexed nodeOperatorId, bytes pubkey)",
      "event StETHSharesRecovered(address indexed recipient, uint256 shares)",
      "event StuckSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 stuckKeysCount)",
      "event TargetValidatorsCountChanged(uint256 indexed nodeOperatorId, uint256 targetLimitMode, uint256 targetValidatorsCount)",
      "event TotalSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 totalKeysCount)",
      "event VettedSigningKeysCountChanged(uint256 indexed nodeOperatorId, uint256 vettedKeysCount)",
      "event VettedSigningKeysCountDecreased(uint256 indexed nodeOperatorId)",
      "event WithdrawalSubmitted(uint256 indexed nodeOperatorId, uint256 keyIndex, uint256 amount, bytes pubkey)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EL_REWARDS_STEALING_FINE() view returns (uint256)",
      "function INITIAL_SLASHING_PENALTY() view returns (uint256)",
      "function LIDO_LOCATOR() view returns (address)",
      "function MAX_KEY_REMOVAL_CHARGE() view returns (uint256)",
      "function MAX_SIGNING_KEYS_PER_OPERATOR_BEFORE_PUBLIC_RELEASE() view returns (uint256)",
      "function MODULE_MANAGER_ROLE() view returns (bytes32)",
      "function PAUSE_INFINITELY() view returns (uint256)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function RECOVERER_ROLE() view returns (bytes32)",
      "function REPORT_EL_REWARDS_STEALING_PENALTY_ROLE() view returns (bytes32)",
      "function RESUME_ROLE() view returns (bytes32)",
      "function SETTLE_EL_REWARDS_STEALING_PENALTY_ROLE() view returns (bytes32)",
      "function STAKING_ROUTER_ROLE() view returns (bytes32)",
      "function STETH() view returns (address)",
      "function VERIFIER_ROLE() view returns (bytes32)",
      "function accounting() view returns (address)",
      "function activatePublicRelease()",
      "function addNodeOperatorETH(uint256 keysCount, bytes publicKeys, bytes signatures, tuple(address managerAddress, address rewardAddress, bool extendedManagerPermissions) managementProperties, bytes32[] eaProof, address referrer) payable",
      "function addNodeOperatorStETH(uint256 keysCount, bytes publicKeys, bytes signatures, tuple(address managerAddress, address rewardAddress, bool extendedManagerPermissions) managementProperties, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit, bytes32[] eaProof, address referrer)",
      "function addNodeOperatorWstETH(uint256 keysCount, bytes publicKeys, bytes signatures, tuple(address managerAddress, address rewardAddress, bool extendedManagerPermissions) managementProperties, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit, bytes32[] eaProof, address referrer)",
      "function addValidatorKeysETH(uint256 nodeOperatorId, uint256 keysCount, bytes publicKeys, bytes signatures) payable",
      "function addValidatorKeysStETH(uint256 nodeOperatorId, uint256 keysCount, bytes publicKeys, bytes signatures, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit)",
      "function addValidatorKeysWstETH(uint256 nodeOperatorId, uint256 keysCount, bytes publicKeys, bytes signatures, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit)",
      "function cancelELRewardsStealingPenalty(uint256 nodeOperatorId, uint256 amount)",
      "function changeNodeOperatorRewardAddress(uint256 nodeOperatorId, address newAddress)",
      "function claimRewardsStETH(uint256 nodeOperatorId, uint256 stETHAmount, uint256 cumulativeFeeShares, bytes32[] rewardsProof)",
      "function claimRewardsUnstETH(uint256 nodeOperatorId, uint256 stEthAmount, uint256 cumulativeFeeShares, bytes32[] rewardsProof)",
      "function claimRewardsWstETH(uint256 nodeOperatorId, uint256 wstETHAmount, uint256 cumulativeFeeShares, bytes32[] rewardsProof)",
      "function cleanDepositQueue(uint256 maxItems) returns (uint256 removed, uint256 lastRemovedAtDepth)",
      "function compensateELRewardsStealingPenalty(uint256 nodeOperatorId) payable",
      "function confirmNodeOperatorManagerAddressChange(uint256 nodeOperatorId)",
      "function confirmNodeOperatorRewardAddressChange(uint256 nodeOperatorId)",
      "function decreaseVettedSigningKeysCount(bytes nodeOperatorIds, bytes vettedSigningKeysCounts)",
      "function depositETH(uint256 nodeOperatorId) payable",
      "function depositQueue() view returns (uint128 head, uint128 tail)",
      "function depositQueueItem(uint128 index) view returns (uint256)",
      "function depositStETH(uint256 nodeOperatorId, uint256 stETHAmount, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit)",
      "function depositWstETH(uint256 nodeOperatorId, uint256 wstETHAmount, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) permit)",
      "function earlyAdoption() view returns (address)",
      "function getActiveNodeOperatorsCount() view returns (uint256)",
      "function getNodeOperator(uint256 nodeOperatorId) view returns (tuple(uint32 totalAddedKeys, uint32 totalWithdrawnKeys, uint32 totalDepositedKeys, uint32 totalVettedKeys, uint32 stuckValidatorsCount, uint32 depositableValidatorsCount, uint32 targetLimit, uint8 targetLimitMode, uint32 totalExitedKeys, uint32 enqueuedCount, address managerAddress, address proposedManagerAddress, address rewardAddress, address proposedRewardAddress, bool extendedManagerPermissions))",
      "function getNodeOperatorIds(uint256 offset, uint256 limit) view returns (uint256[] nodeOperatorIds)",
      "function getNodeOperatorIsActive(uint256 nodeOperatorId) view returns (bool)",
      "function getNodeOperatorNonWithdrawnKeys(uint256 nodeOperatorId) view returns (uint256)",
      "function getNodeOperatorSummary(uint256 nodeOperatorId) view returns (uint256 targetLimitMode, uint256 targetValidatorsCount, uint256 stuckValidatorsCount, uint256 refundedValidatorsCount, uint256 stuckPenaltyEndTimestamp, uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount)",
      "function getNodeOperatorsCount() view returns (uint256)",
      "function getNonce() view returns (uint256)",
      "function getResumeSinceTimestamp() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSigningKeys(uint256 nodeOperatorId, uint256 startIndex, uint256 keysCount) view returns (bytes)",
      "function getSigningKeysWithSignatures(uint256 nodeOperatorId, uint256 startIndex, uint256 keysCount) view returns (bytes keys, bytes signatures)",
      "function getStakingModuleSummary() view returns (uint256 totalExitedValidators, uint256 totalDepositedValidators, uint256 depositableValidatorsCount)",
      "function getType() view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address _accounting, address _earlyAdoption, uint256 _keyRemovalCharge, address admin)",
      "function isPaused() view returns (bool)",
      "function isValidatorSlashed(uint256 nodeOperatorId, uint256 keyIndex) view returns (bool)",
      "function isValidatorWithdrawn(uint256 nodeOperatorId, uint256 keyIndex) view returns (bool)",
      "function keyRemovalCharge() view returns (uint256)",
      "function normalizeQueue(uint256 nodeOperatorId)",
      "function obtainDepositData(uint256 depositsCount, bytes) returns (bytes publicKeys, bytes signatures)",
      "function onExitedAndStuckValidatorsCountsUpdated()",
      "function onRewardsMinted(uint256 totalShares)",
      "function onWithdrawalCredentialsChanged()",
      "function pauseFor(uint256 duration)",
      "function proposeNodeOperatorManagerAddressChange(uint256 nodeOperatorId, address proposedAddress)",
      "function proposeNodeOperatorRewardAddressChange(uint256 nodeOperatorId, address proposedAddress)",
      "function publicRelease() view returns (bool)",
      "function recoverERC1155(address token, uint256 tokenId)",
      "function recoverERC20(address token, uint256 amount)",
      "function recoverERC721(address token, uint256 tokenId)",
      "function recoverEther()",
      "function removeKeys(uint256 nodeOperatorId, uint256 startIndex, uint256 keysCount)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function reportELRewardsStealingPenalty(uint256 nodeOperatorId, bytes32 blockHash, uint256 amount)",
      "function resetNodeOperatorManagerAddress(uint256 nodeOperatorId)",
      "function resume()",
      "function revokeRole(bytes32 role, address account)",
      "function setKeyRemovalCharge(uint256 amount)",
      "function settleELRewardsStealingPenalty(uint256[] nodeOperatorIds)",
      "function submitInitialSlashing(uint256 nodeOperatorId, uint256 keyIndex)",
      "function submitWithdrawal(uint256 nodeOperatorId, uint256 keyIndex, uint256 amount, bool isSlashed)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unsafeUpdateValidatorsCount(uint256 nodeOperatorId, uint256 exitedValidatorsKeysCount, uint256 stuckValidatorsKeysCount)",
      "function updateExitedValidatorsCount(bytes nodeOperatorIds, bytes exitedValidatorsCounts)",
      "function updateRefundedValidatorsCount(uint256, uint256)",
      "function updateStuckValidatorsCount(bytes nodeOperatorIds, bytes stuckValidatorsCounts)",
      "function updateTargetValidatorsLimits(uint256 nodeOperatorId, uint256 targetLimitMode, uint256 targetLimit)"
    ],
    "0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7": [
      "constructor(address _stETH)",
      "error ZeroStETHAddress()",
      "function domainSeparatorV4(address _stETH) view returns (bytes32)",
      "function eip712Domain(address _stETH) view returns (string name, string version, uint256 chainId, address verifyingContract)",
      "function hashTypedDataV4(address _stETH, bytes32 _structHash) view returns (bytes32)"
    ],
    "0x909d05F384D0663eD4BE59863815aB43b4f347Ec": [
      "function createCloneToken(address _parentToken, uint256 _snapshotBlock, string _tokenName, uint8 _decimalUnits, string _tokenSymbol, bool _transfersEnabled) returns (address)"
    ],
    "0x909d0CB383Ecc77e44daE5d0146cF476f611f62b": [
      "constructor(address _singleton)"
    ],
    "0x919ac5C6c62B6ef7B05cF05070080525a7B0381E": [
      "constructor(uint256 secondsPerSlot, uint256 genesisTime)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error AddressCannotBeSame()",
      "error AddressCannotBeZero()",
      "error FailedToSendEther()",
      "error HashCannotBeZero()",
      "error InitialRefSlotCannotBeLessThanProcessingOne(uint256 initialRefSlot, uint256 processingRefSlot)",
      "error InvalidContractVersion()",
      "error InvalidContractVersionIncrement()",
      "error InvalidInitialization()",
      "error InvalidPerfLeeway()",
      "error NoConsensusReportToProcess()",
      "error NonZeroContractVersionOnInit()",
      "error NotAllowedToRecover()",
      "error NotInitializing()",
      "error PauseUntilMustBeInFuture()",
      "error PausedExpected()",
      "error ProcessingDeadlineMissed(uint256 deadline)",
      "error RefSlotAlreadyProcessing()",
      "error RefSlotCannotDecrease(uint256 refSlot, uint256 prevRefSlot)",
      "error RefSlotMustBeGreaterThanProcessingOne(uint256 refSlot, uint256 processingRefSlot)",
      "error ResumedExpected()",
      "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
      "error SecondsPerSlotCannotBeZero()",
      "error SenderIsNotTheConsensusContract()",
      "error SenderNotAllowed()",
      "error UnexpectedChainConfig()",
      "error UnexpectedConsensusVersion(uint256 expectedVersion, uint256 receivedVersion)",
      "error UnexpectedContractVersion(uint256 expected, uint256 received)",
      "error UnexpectedDataHash(bytes32 consensusHash, bytes32 receivedHash)",
      "error UnexpectedRefSlot(uint256 consensusRefSlot, uint256 dataRefSlot)",
      "error VersionCannotBeSame()",
      "error VersionCannotBeZero()",
      "error ZeroAdminAddress()",
      "error ZeroFeeDistributorAddress()",
      "error ZeroPauseDuration()",
      "event ConsensusHashContractSet(address indexed addr, address indexed prevAddr)",
      "event ConsensusVersionSet(uint256 indexed version, uint256 indexed prevVersion)",
      "event ContractVersionSet(uint256 version)",
      "event ERC1155Recovered(address indexed token, uint256 tokenId, address indexed recipient, uint256 amount)",
      "event ERC20Recovered(address indexed token, address indexed recipient, uint256 amount)",
      "event ERC721Recovered(address indexed token, uint256 tokenId, address indexed recipient)",
      "event EtherRecovered(address indexed recipient, uint256 amount)",
      "event FeeDistributorContractSet(address feeDistributorContract)",
      "event Initialized(uint64 version)",
      "event Paused(uint256 duration)",
      "event PerfLeewaySet(uint256 valueBP)",
      "event ProcessingStarted(uint256 indexed refSlot, bytes32 hash)",
      "event ReportDiscarded(uint256 indexed refSlot, bytes32 hash)",
      "event ReportSubmitted(uint256 indexed refSlot, bytes32 hash, uint256 processingDeadlineTime)",
      "event Resumed()",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event StETHSharesRecovered(address indexed recipient, uint256 shares)",
      "event WarnProcessingMissed(uint256 indexed refSlot)",
      "function CONTRACT_MANAGER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GENESIS_TIME() view returns (uint256)",
      "function MANAGE_CONSENSUS_CONTRACT_ROLE() view returns (bytes32)",
      "function MANAGE_CONSENSUS_VERSION_ROLE() view returns (bytes32)",
      "function PAUSE_INFINITELY() view returns (uint256)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function RECOVERER_ROLE() view returns (bytes32)",
      "function RESUME_ROLE() view returns (bytes32)",
      "function SECONDS_PER_SLOT() view returns (uint256)",
      "function SUBMIT_DATA_ROLE() view returns (bytes32)",
      "function avgPerfLeewayBP() view returns (uint256)",
      "function discardConsensusReport(uint256 refSlot)",
      "function feeDistributor() view returns (address)",
      "function getConsensusContract() view returns (address)",
      "function getConsensusReport() view returns (bytes32 hash, uint256 refSlot, uint256 processingDeadlineTime, bool processingStarted)",
      "function getConsensusVersion() view returns (uint256)",
      "function getContractVersion() view returns (uint256)",
      "function getLastProcessingRefSlot() view returns (uint256)",
      "function getResumeSinceTimestamp() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address feeDistributorContract, address consensusContract, uint256 consensusVersion, uint256 _avgPerfLeewayBP)",
      "function isPaused() view returns (bool)",
      "function pauseFor(uint256 duration)",
      "function pauseUntil(uint256 pauseUntilInclusive)",
      "function recoverERC1155(address token, uint256 tokenId)",
      "function recoverERC20(address token, uint256 amount)",
      "function recoverERC721(address token, uint256 tokenId)",
      "function recoverEther()",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function resume()",
      "function revokeRole(bytes32 role, address account)",
      "function setConsensusContract(address addr)",
      "function setConsensusVersion(uint256 version)",
      "function setFeeDistributorContract(address feeDistributorContract)",
      "function setPerformanceLeeway(uint256 valueBP)",
      "function submitConsensusReport(bytes32 reportHash, uint256 refSlot, uint256 deadline)",
      "function submitReportData(tuple(uint256 consensusVersion, uint256 refSlot, bytes32 treeRoot, string treeCid, string logCid, uint256 distributed) data, uint256 contractVersion)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x9f3b9198911054B122fDb865f8A5Ac516201c339": [
      "function hasInitialized() view returns (bool)",
      "function createBurnedPermission(address _app, bytes32 _role)",
      "function burnPermissionManager(address _app, bytes32 _role)",
      "function grantPermission(address _entity, address _app, bytes32 _role)",
      "function getPermissionParamsLength(address _entity, address _app, bytes32 _role) view returns (uint256)",
      "function evalParams(bytes32 _paramsHash, address _who, address _where, bytes32 _what, uint256[] _how) view returns (bool)",
      "function NO_PERMISSION() view returns (bytes32)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function CREATE_PERMISSIONS_ROLE() view returns (bytes32)",
      "function grantPermissionP(address _entity, address _app, bytes32 _role, uint256[] _params)",
      "function hasPermission(address _who, address _where, bytes32 _what) view returns (bool)",
      "function allowRecoverability(address token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function getInitializationBlock() view returns (uint256)",
      "function revokePermission(address _entity, address _app, bytes32 _role)",
      "function transferToVault(address _token)",
      "function getPermissionParam(address _entity, address _app, bytes32 _role, uint256 _index) view returns (uint8, uint8, uint240)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function ANY_ENTITY() view returns (address)",
      "function removePermissionManager(address _app, bytes32 _role)",
      "function setPermissionManager(address _newManager, address _app, bytes32 _role)",
      "function getPermissionManager(address _app, bytes32 _role) view returns (address)",
      "function createPermission(address _entity, address _app, bytes32 _role, address _manager)",
      "function initialize(address _permissionsCreator)",
      "function EMPTY_PARAM_HASH() view returns (bytes32)",
      "function kernel() view returns (address)",
      "function isPetrified() view returns (bool)",
      "function BURN_ENTITY() view returns (address)",
      "function hasPermission(address _who, address _where, bytes32 _what, uint256[] _how) view returns (bool)",
      "function hasPermission(address _who, address _where, bytes32 _what, bytes _how) view returns (bool)",
      "event SetPermission(address indexed entity, address indexed app, bytes32 indexed role, bool allowed)",
      "event SetPermissionParams(address indexed entity, address indexed app, bytes32 indexed role, bytes32 paramsHash)",
      "event ChangePermissionManager(address indexed app, bytes32 indexed role, address indexed manager)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)"
    ],
    "0xa29b819654cE6224A222bb5f586920105E2D7E0E": [
      "function hasInitialized() view returns (bool)",
      "function getVersion() view returns (uint256)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function initialize(address _lidoLocator, address _accountingOracleConsensusContract)",
      "function finalizeUpgrade_v4(address _accountingOracle)",
      "function getLastCompletedReportDelta() view returns (uint256 postTotalPooledEther, uint256 preTotalPooledEther, uint256 timeElapsed)",
      "function getLido() view returns (address)",
      "function getCurrentFrame() view returns (uint256 frameEpochId, uint256 frameStartTime, uint256 frameEndTime)",
      "function allowRecoverability(address token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function handlePostTokenRebase(uint256, uint256 timeElapsed, uint256, uint256 preTotalEther, uint256 postTotalShares, uint256 postTotalEther, uint256)",
      "function getLastCompletedEpochId() view returns (uint256)",
      "function getContractVersion() view returns (uint256)",
      "function getInitializationBlock() view returns (uint256)",
      "function handleConsensusLayerReport(uint256 _refSlot, uint256 _clBalance, uint256 _clValidators)",
      "function transferToVault(address _token)",
      "function getAccountingOracle() view returns (address)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getCurrentEpochId() view returns (uint256)",
      "function getEVMScriptRegistry() view returns (address)",
      "function kernel() view returns (address)",
      "function isPetrified() view returns (bool)",
      "function getBeaconSpec() view returns (uint64 epochsPerFrame, uint64 slotsPerEpoch, uint64 secondsPerSlot, uint64 genesisTime)",
      "event Completed(uint256 epochId, uint128 beaconBalance, uint128 beaconValidators)",
      "event PostTotalShares(uint256 postTotalPooledEther, uint256 preTotalPooledEther, uint256 timeElapsed, uint256 totalShares)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)",
      "event ContractVersionSet(uint256 version)"
    ],
    "0xa4D28d9fFF539d6E1972Ce3Cf9c4577856eD7F20": [
      "event MintProcessed(address token, address account, uint256 amount)",
      "event MintingAllowanceSet(address token, address account, uint256 newAllowance)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TokenMinterRegistered(address token, address minter)",
      "event TokenMinterRevoked(address token, address minter)",
      "function cancelMintingAllowance(address token, address account)",
      "function identify() pure returns (string)",
      "function initialize(bytes data)",
      "function isAppGovernor(address account) view returns (bool)",
      "function isAppRoleAdmin(address account) view returns (bool)",
      "function isFrozen() view returns (bool)",
      "function isGovernanceAdmin(address account) view returns (bool)",
      "function isOperator(address account) view returns (bool)",
      "function isSecurityAdmin(address account) view returns (bool)",
      "function isSecurityAgent(address account) view returns (bool)",
      "function isTokenAdmin(address account) view returns (bool)",
      "function isUpgradeGovernor(address account) view returns (bool)",
      "function mintRequest(address token, uint256 amount)",
      "function mintingAllowance(address token, address account) view returns (uint256)",
      "function registerAppGovernor(address account)",
      "function registerAppRoleAdmin(address account)",
      "function registerGovernanceAdmin(address account)",
      "function registerOperator(address account)",
      "function registerSecurityAdmin(address account)",
      "function registerSecurityAgent(address account)",
      "function registerTokenAdmin(address account)",
      "function registerTokenMinter(address token, address minter)",
      "function registerUpgradeGovernor(address account)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeAppGovernor(address account)",
      "function revokeAppRoleAdmin(address account)",
      "function revokeGovernanceAdmin(address account)",
      "function revokeOperator(address account)",
      "function revokeSecurityAdmin(address account)",
      "function revokeSecurityAgent(address account)",
      "function revokeTokenAdmin(address account)",
      "function revokeTokenMinter(address token, address minter)",
      "function revokeUpgradeGovernor(address account)",
      "function setMintingAllowance(address token, address account, uint256 amount)"
    ],
    "0xA89Ea51FddE660f67d1850e03C9c9862d33Bc42c": [
      "constructor(uint256 secondsPerSlot, uint256 genesisTime, address lidoLocator)",
      "error AddressCannotBeSame()",
      "error AddressCannotBeZero()",
      "error AdminCannotBeZero()",
      "error ArgumentOutOfBounds()",
      "error HashCannotBeZero()",
      "error InitialRefSlotCannotBeLessThanProcessingOne(uint256 initialRefSlot, uint256 processingRefSlot)",
      "error InvalidContractVersionIncrement()",
      "error InvalidRequestsData()",
      "error InvalidRequestsDataLength()",
      "error InvalidRequestsDataSortOrder()",
      "error NoConsensusReportToProcess()",
      "error NodeOpValidatorIndexMustIncrease(uint256 moduleId, uint256 nodeOpId, uint256 prevRequestedValidatorIndex, uint256 requestedValidatorIndex)",
      "error NonZeroContractVersionOnInit()",
      "error PauseUntilMustBeInFuture()",
      "error PausedExpected()",
      "error ProcessingDeadlineMissed(uint256 deadline)",
      "error RefSlotAlreadyProcessing()",
      "error RefSlotCannotDecrease(uint256 refSlot, uint256 prevRefSlot)",
      "error RefSlotMustBeGreaterThanProcessingOne(uint256 refSlot, uint256 processingRefSlot)",
      "error ResumedExpected()",
      "error SecondsPerSlotCannotBeZero()",
      "error SenderIsNotTheConsensusContract()",
      "error SenderNotAllowed()",
      "error UnexpectedChainConfig()",
      "error UnexpectedConsensusVersion(uint256 expectedVersion, uint256 receivedVersion)",
      "error UnexpectedContractVersion(uint256 expected, uint256 received)",
      "error UnexpectedDataHash(bytes32 consensusHash, bytes32 receivedHash)",
      "error UnexpectedRefSlot(uint256 consensusRefSlot, uint256 dataRefSlot)",
      "error UnexpectedRequestsDataLength()",
      "error UnsupportedRequestsDataFormat(uint256 format)",
      "error VersionCannotBeSame()",
      "error ZeroPauseDuration()",
      "event ConsensusHashContractSet(address indexed addr, address indexed prevAddr)",
      "event ConsensusVersionSet(uint256 indexed version, uint256 indexed prevVersion)",
      "event ContractVersionSet(uint256 version)",
      "event Paused(uint256 duration)",
      "event ProcessingStarted(uint256 indexed refSlot, bytes32 hash)",
      "event ReportDiscarded(uint256 indexed refSlot, bytes32 hash)",
      "event ReportSubmitted(uint256 indexed refSlot, bytes32 hash, uint256 processingDeadlineTime)",
      "event Resumed()",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event ValidatorExitRequest(uint256 indexed stakingModuleId, uint256 indexed nodeOperatorId, uint256 indexed validatorIndex, bytes validatorPubkey, uint256 timestamp)",
      "event WarnDataIncompleteProcessing(uint256 indexed refSlot, uint256 requestsProcessed, uint256 requestsCount)",
      "event WarnProcessingMissed(uint256 indexed refSlot)",
      "function DATA_FORMAT_LIST() view returns (uint256)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GENESIS_TIME() view returns (uint256)",
      "function MANAGE_CONSENSUS_CONTRACT_ROLE() view returns (bytes32)",
      "function MANAGE_CONSENSUS_VERSION_ROLE() view returns (bytes32)",
      "function PAUSE_INFINITELY() view returns (uint256)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function RESUME_ROLE() view returns (bytes32)",
      "function SECONDS_PER_SLOT() view returns (uint256)",
      "function SUBMIT_DATA_ROLE() view returns (bytes32)",
      "function discardConsensusReport(uint256 refSlot)",
      "function getConsensusContract() view returns (address)",
      "function getConsensusReport() view returns (bytes32 hash, uint256 refSlot, uint256 processingDeadlineTime, bool processingStarted)",
      "function getConsensusVersion() view returns (uint256)",
      "function getContractVersion() view returns (uint256)",
      "function getLastProcessingRefSlot() view returns (uint256)",
      "function getLastRequestedValidatorIndices(uint256 moduleId, uint256[] nodeOpIds) view returns (int256[])",
      "function getProcessingState() view returns (tuple(uint256 currentFrameRefSlot, uint256 processingDeadlineTime, bytes32 dataHash, bool dataSubmitted, uint256 dataFormat, uint256 requestsCount, uint256 requestsSubmitted) result)",
      "function getResumeSinceTimestamp() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getTotalRequestsProcessed() view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address consensusContract, uint256 consensusVersion, uint256 lastProcessingRefSlot)",
      "function isPaused() view returns (bool)",
      "function pauseFor(uint256 _duration)",
      "function pauseUntil(uint256 _pauseUntilInclusive)",
      "function renounceRole(bytes32 role, address account)",
      "function resume()",
      "function revokeRole(bytes32 role, address account)",
      "function setConsensusContract(address addr)",
      "function setConsensusVersion(uint256 version)",
      "function submitConsensusReport(bytes32 reportHash, uint256 refSlot, uint256 deadline)",
      "function submitReportData(tuple(uint256 consensusVersion, uint256 refSlot, uint256 requestsCount, uint256 dataFormat, bytes data) data, uint256 contractVersion)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a": [
      "constructor()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AutoLiquify(uint256 amountETH, uint256 amountTokens)",
      "event ClearStuck(uint256 amount)",
      "event ClearToken(address TokenAddressCleared, uint256 Amount)",
      "event EditTax(uint8 Buy, uint8 Sell, uint8 Transfer)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event set_MaxTX(uint256 maxTX)",
      "event set_MaxWallet(uint256 maxWallet)",
      "event set_Receivers(address marketingFeeReceiver, address buybackFeeReceiver, address burnFeeReceiver, address devFeeReceiver)",
      "event set_SwapBack(uint256 Amount, bool Enabled)",
      "event user_TxExempt(address Wallet, bool Exempt)",
      "event user_exemptfromfees(address Wallet, bool Exempt)",
      "function TradingOpen() view returns (bool)",
      "function _maxTxAmount() view returns (uint256)",
      "function _maxWalletToken() view returns (uint256)",
      "function _owner() view returns (address)",
      "function allowance(address holder, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function approveMax(address spender) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function checkRatio(uint256 ratio, uint256 accuracy) view returns (bool)",
      "function clearStuckToken(address tokenAddress, uint256 tokens) returns (bool success)",
      "function decimals() pure returns (uint8)",
      "function getOwner() view returns (address)",
      "function manualSend()",
      "function maxWalletRule(uint256 maxWallPercent)",
      "function name() pure returns (string)",
      "function owner() view returns (address)",
      "function pair() view returns (address)",
      "function reduceFee()",
      "function removeLimits()",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function setParameters(uint256 _liquidityFee, uint256 _buybackFee, uint256 _marketingFee, uint256 _devFee, uint256 _burnFee, uint256 _feeDenominator)",
      "function setStructure(uint256 _percentonbuy, uint256 _percentonsell, uint256 _wallettransfer)",
      "function setSwapBackSettings(bool _enabled, uint256 _amount)",
      "function setWallets(address _autoLiquidityReceiver, address _marketingFeeReceiver, address _devFeeReceiver, address _burnFeeReceiver, address _buybackFeeReceiver)",
      "function showBacking(uint256 accuracy) view returns (uint256)",
      "function showSupply() view returns (uint256)",
      "function startTrading()",
      "function swapEnabled() view returns (bool)",
      "function swapThreshold() view returns (uint256)",
      "function symbol() pure returns (string)",
      "function totalFee() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0xaE7B191A31f627b4eB1d4DaC64eaB9976995b433": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0xB18BB767638Bca324d158B7C7189e1a28aeB9EB4": [
      "constructor(address _singleton)"
    ],
    "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function apps(bytes32, bytes32) view returns (address)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function recoveryVaultAppId() view returns (bytes32)",
      "constructor(address _kernelImpl)",
      "event ProxyDeposit(address sender, uint256 value)",
      "event SetApp(bytes32 indexed namespace, bytes32 indexed appId, address app)"
    ],
    "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f": [
      "constructor()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function proxy_changeAdmin(address newAdmin)",
      "function proxy_getAdmin() view returns (address)",
      "function proxy_getIsOssified() view returns (bool)",
      "function proxy_upgradeTo(address newImplementation, bytes setupCalldata)"
    ],
    "0xbf05A929c3D7885a6aeAd833a992dA6E5ac23b09": [
      "constructor(address _admin, address[] _configManagers)",
      "error EmptyValue(string key)",
      "error ValueDoesntExist(string key)",
      "error ValueExists(string key)",
      "error ValueIsSame(string key, bytes value)",
      "error ZeroAddress()",
      "event ConfigValueSet(string key, bytes value)",
      "event ConfigValueUnset(string key)",
      "event ConfigValueUpdated(string key, bytes value)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CONFIG_MANAGER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function get(string _key) view returns (bytes)",
      "function getList(string[] _keys) view returns (bytes[])",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function set(string _key, bytes _value)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unset(string _key)",
      "function update(string _key, bytes _value)"
    ],
    "0xBF1Ce0Bc4EdaAD8e576b3b55e19c4C15Cf6999eb": [
      "function getScriptExecutor(bytes _script) view returns (address)",
      "function hasInitialized() view returns (bool)",
      "function REGISTRY_ADD_EXECUTOR_ROLE() view returns (bytes32)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function disableScriptExecutor(uint256 _executorId)",
      "function allowRecoverability(address token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function initialize()",
      "function addScriptExecutor(address _executor) returns (uint256 id)",
      "function getInitializationBlock() view returns (uint256)",
      "function transferToVault(address _token)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function REGISTRY_MANAGER_ROLE() view returns (bytes32)",
      "function enableScriptExecutor(uint256 _executorId)",
      "function kernel() view returns (address)",
      "function isPetrified() view returns (bool)",
      "function executors(uint256) view returns (address executor, bool enabled)",
      "event EnableExecutor(uint256 indexed executorId, address indexed executorAddress)",
      "event DisableExecutor(uint256 indexed executorId, address indexed executorAddress)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0xCa14007Eff0dB1f8135f4C25B34De49AB0d42766": [
      "constructor()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function getPastTotalSupply(uint256 blockNumber) view returns (uint256)",
      "function getPastVotes(address account, uint256 blockNumber) view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getVotes(address account) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(address account, uint256 amount) returns (bool)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0xCa14076A3cec95448BaD179cc19B351A4204B88B": [
      "constructor(uint256 upgradeActivationDelay)",
      "event FinalizedImplementation(address indexed implementation)",
      "event ImplementationAdded(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationRemoved(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationUpgraded(address indexed implementation, bytes initializer)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function ENABLE_WINDOW_DURATION_SLOT() view returns (bytes32)",
      "function MAX_UPGRADE_DELAY() view returns (uint256)",
      "function PROXY_VERSION() view returns (string)",
      "function UPGRADE_DELAY_SLOT() view returns (bytes32)",
      "function addImplementation(address newImplementation, bytes data, bool finalize)",
      "function getEnableWindowDuration() view returns (uint256 duration)",
      "function getUpgradeActivationDelay() view returns (uint256 delay)",
      "function implementation() view returns (address _implementation)",
      "function initialize(bytes) pure",
      "function isGovernanceAdmin(address account) view returns (bool)",
      "function isNotFinalized() view returns (bool notFinal)",
      "function isUpgradeGovernor(address account) view returns (bool)",
      "function registerAppGovernor(address account)",
      "function registerAppRoleAdmin(address account)",
      "function registerGovernanceAdmin(address account)",
      "function registerSecurityAdmin(address account)",
      "function registerSecurityAgent(address account)",
      "function registerUpgradeGovernor(address account)",
      "function removeImplementation(address removedImplementation, bytes data, bool finalize)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeAppGovernor(address account)",
      "function revokeAppRoleAdmin(address account)",
      "function revokeGovernanceAdmin(address account)",
      "function revokeOperator(address account)",
      "function revokeSecurityAdmin(address account)",
      "function revokeSecurityAgent(address account)",
      "function revokeTokenAdmin(address account)",
      "function revokeUpgradeGovernor(address account)",
      "function upgradeTo(address newImplementation, bytes data, bool finalize) payable"
    ],
    "0xCC52f17756C04bBa7E377716d7062fC36D7f69Fd": [
      "constructor(address _lido, address _treasury)",
      "error InvalidContractVersionIncrement()",
      "error LidoZeroAddress()",
      "error NonZeroContractVersionOnInit()",
      "error NotEnoughEther(uint256 requested, uint256 balance)",
      "error NotLido()",
      "error TreasuryZeroAddress()",
      "error UnexpectedContractVersion(uint256 expected, uint256 received)",
      "error ZeroAmount()",
      "event ContractVersionSet(uint256 version)",
      "event ERC20Recovered(address indexed requestedBy, address indexed token, uint256 amount)",
      "event ERC721Recovered(address indexed requestedBy, address indexed token, uint256 tokenId)",
      "function LIDO() view returns (address)",
      "function TREASURY() view returns (address)",
      "function getContractVersion() view returns (uint256)",
      "function initialize()",
      "function recoverERC20(address _token, uint256 _amount)",
      "function recoverERC721(address _token, uint256 _tokenId)",
      "function withdrawWithdrawals(uint256 _amount)"
    ],
    "0xD15a672319Cf0352560eE76d9e89eAB0889046D3": [
      "constructor(address _admin, address _treasury, address _stETH, uint256 _totalCoverSharesBurnt, uint256 _totalNonCoverSharesBurnt)",
      "error AppAuthLidoFailed()",
      "error BurnAmountExceedsActual(uint256 requestedAmount, uint256 actualAmount)",
      "error DirectETHTransfer()",
      "error StETHRecoveryWrongFunc()",
      "error ZeroAddress(string field)",
      "error ZeroBurnAmount()",
      "error ZeroRecoveryAmount()",
      "event ERC20Recovered(address indexed requestedBy, address indexed token, uint256 amount)",
      "event ERC721Recovered(address indexed requestedBy, address indexed token, uint256 tokenId)",
      "event ExcessStETHRecovered(address indexed requestedBy, uint256 amountOfStETH, uint256 amountOfShares)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event StETHBurnRequested(bool indexed isCover, address indexed requestedBy, uint256 amountOfStETH, uint256 amountOfShares)",
      "event StETHBurnt(bool indexed isCover, uint256 amountOfStETH, uint256 amountOfShares)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function REQUEST_BURN_MY_STETH_ROLE() view returns (bytes32)",
      "function REQUEST_BURN_SHARES_ROLE() view returns (bytes32)",
      "function STETH() view returns (address)",
      "function TREASURY() view returns (address)",
      "function commitSharesToBurn(uint256 _sharesToBurn)",
      "function getCoverSharesBurnt() view returns (uint256)",
      "function getExcessStETH() view returns (uint256)",
      "function getNonCoverSharesBurnt() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSharesRequestedToBurn() view returns (uint256 coverShares, uint256 nonCoverShares)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function recoverERC20(address _token, uint256 _amount)",
      "function recoverERC721(address _token, uint256 _tokenId)",
      "function recoverExcessStETH()",
      "function renounceRole(bytes32 role, address account)",
      "function requestBurnMyStETH(uint256 _stETHAmountToBurn)",
      "function requestBurnMyStETHForCover(uint256 _stETHAmountToBurn)",
      "function requestBurnShares(address _from, uint256 _sharesAmountToBurn)",
      "function requestBurnSharesForCover(address _from, uint256 _sharesAmountToBurn)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0xd54c1c6413caac3477AC14b2a80D5398E3c32FfE": [
      "constructor(address messenger_, address wstETH_, address accountingOracle_, address tokenRateOracle_, uint32 l2GasLimitForPushingTokenRate_)",
      "error ErrorUnauthorizedMessenger()",
      "error ErrorWrongCrossDomainSender()",
      "error ErrorZeroAddressAccountingOracle()",
      "error ErrorZeroAddressMessenger()",
      "error ErrorZeroAddressTokenRateOracle()",
      "error ErrorZeroAddressWstETH()",
      "function ACCOUNTING_ORACLE() view returns (address)",
      "function GENESIS_TIME() view returns (uint256)",
      "function L2_GAS_LIMIT_FOR_PUSHING_TOKEN_RATE() view returns (uint32)",
      "function L2_TOKEN_RATE_ORACLE() view returns (address)",
      "function MESSENGER() view returns (address)",
      "function SECONDS_PER_SLOT() view returns (uint256)",
      "function TOKEN_RATE_DECIMALS() view returns (uint256)",
      "function WSTETH() view returns (address)",
      "function pushTokenRate()",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)"
    ],
    "0xD624B08C83bAECF0807Dd2c6880C3154a5F0B288": [
      "constructor(uint256 slotsPerEpoch, uint256 secondsPerSlot, uint256 genesisTime, uint256 epochsPerFrame, uint256 fastLaneLengthSlots, address admin, address reportProcessor)",
      "error AddressCannotBeZero()",
      "error AdminCannotBeZero()",
      "error ConsensusReportAlreadyProcessing()",
      "error DuplicateMember()",
      "error DuplicateReport()",
      "error EmptyReport()",
      "error EpochsPerFrameCannotBeZero()",
      "error FastLanePeriodCannotBeLongerThanFrame()",
      "error InitialEpochAlreadyArrived()",
      "error InitialEpochIsYetToArrive()",
      "error InitialEpochRefSlotCannotBeEarlierThanProcessingSlot()",
      "error InvalidChainConfig()",
      "error InvalidSlot()",
      "error NewProcessorCannotBeTheSame()",
      "error NonFastLaneMemberCannotReportWithinFastLaneInterval()",
      "error NonMember()",
      "error NumericOverflow()",
      "error QuorumTooSmall(uint256 minQuorum, uint256 receivedQuorum)",
      "error ReportProcessorCannotBeZero()",
      "error StaleReport()",
      "error UnexpectedConsensusVersion(uint256 expected, uint256 received)",
      "event ConsensusLost(uint256 indexed refSlot)",
      "event ConsensusReached(uint256 indexed refSlot, bytes32 report, uint256 support)",
      "event FastLaneConfigSet(uint256 fastLaneLengthSlots)",
      "event FrameConfigSet(uint256 newInitialEpoch, uint256 newEpochsPerFrame)",
      "event MemberAdded(address indexed addr, uint256 newTotalMembers, uint256 newQuorum)",
      "event MemberRemoved(address indexed addr, uint256 newTotalMembers, uint256 newQuorum)",
      "event QuorumSet(uint256 newQuorum, uint256 totalMembers, uint256 prevQuorum)",
      "event ReportProcessorSet(address indexed processor, address indexed prevProcessor)",
      "event ReportReceived(uint256 indexed refSlot, address indexed member, bytes32 report)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DISABLE_CONSENSUS_ROLE() view returns (bytes32)",
      "function MANAGE_FAST_LANE_CONFIG_ROLE() view returns (bytes32)",
      "function MANAGE_FRAME_CONFIG_ROLE() view returns (bytes32)",
      "function MANAGE_MEMBERS_AND_QUORUM_ROLE() view returns (bytes32)",
      "function MANAGE_REPORT_PROCESSOR_ROLE() view returns (bytes32)",
      "function addMember(address addr, uint256 quorum)",
      "function disableConsensus()",
      "function getChainConfig() view returns (uint256 slotsPerEpoch, uint256 secondsPerSlot, uint256 genesisTime)",
      "function getConsensusState() view returns (uint256 refSlot, bytes32 consensusReport, bool isReportProcessing)",
      "function getConsensusStateForMember(address addr) view returns (tuple(uint256 currentFrameRefSlot, bytes32 currentFrameConsensusReport, bool isMember, bool isFastLane, bool canReport, uint256 lastMemberReportRefSlot, bytes32 currentFrameMemberReport) result)",
      "function getCurrentFrame() view returns (uint256 refSlot, uint256 reportProcessingDeadlineSlot)",
      "function getFastLaneMembers() view returns (address[] addresses, uint256[] lastReportedRefSlots)",
      "function getFrameConfig() view returns (uint256 initialEpoch, uint256 epochsPerFrame, uint256 fastLaneLengthSlots)",
      "function getInitialRefSlot() view returns (uint256)",
      "function getIsFastLaneMember(address addr) view returns (bool)",
      "function getIsMember(address addr) view returns (bool)",
      "function getMembers() view returns (address[] addresses, uint256[] lastReportedRefSlots)",
      "function getQuorum() view returns (uint256)",
      "function getReportProcessor() view returns (address)",
      "function getReportVariants() view returns (bytes32[] variants, uint256[] support)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function removeMember(address addr, uint256 quorum)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setFastLaneLengthSlots(uint256 fastLaneLengthSlots)",
      "function setFrameConfig(uint256 epochsPerFrame, uint256 fastLaneLengthSlots)",
      "function setQuorum(uint256 quorum)",
      "function setReportProcessor(address newProcessor)",
      "function submitReport(uint256 slot, bytes32 report, uint256 consensusVersion)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateInitialEpoch(uint256 initialEpoch)"
    ],
    "0xD99CC66fEC647E68294C6477B40fC7E0F6F618D0": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdA7dE2ECdDfccC6c3AF10108Db212ACBBf9EA83F": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_)"
    ],
    "0xde3A93028F2283cc28756B3674BD657eaFB992f4": [
      "function hasInitialized() view returns (bool)",
      "function MAX_VESTINGS_PER_ADDRESS() view returns (uint256)",
      "function spendableBalanceOf(address _holder) view returns (uint256)",
      "function assignVested(address _receiver, uint256 _amount, uint64 _start, uint64 _cliff, uint64 _vested, bool _revokable) returns (uint256)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function getVesting(address _recipient, uint256 _vestingId) view returns (uint256 amount, uint64 start, uint64 cliff, uint64 vesting, bool revokable)",
      "function mint(address _receiver, uint256 _amount)",
      "function onTransfer(address _from, address _to, uint256 _amount) returns (bool)",
      "function transferableBalance(address _holder, uint256 _time) view returns (uint256)",
      "function allowRecoverability(address _token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function ISSUE_ROLE() view returns (bytes32)",
      "function getInitializationBlock() view returns (uint256)",
      "function vestingsLengths(address) view returns (uint256)",
      "function transferToVault(address _token)",
      "function burn(address _holder, uint256 _amount)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function ASSIGN_ROLE() view returns (bytes32)",
      "function BURN_ROLE() view returns (bytes32)",
      "function assign(address _receiver, uint256 _amount)",
      "function canForward(address _sender, bytes) view returns (bool)",
      "function issue(uint256 _amount)",
      "function kernel() view returns (address)",
      "function forward(bytes _evmScript)",
      "function onApprove(address, address, uint256) returns (bool)",
      "function isPetrified() view returns (bool)",
      "function initialize(address _token, bool _transferable, uint256 _maxAccountTokens)",
      "function MINT_ROLE() view returns (bytes32)",
      "function maxAccountTokens() view returns (uint256)",
      "function REVOKE_VESTINGS_ROLE() view returns (bytes32)",
      "function proxyPayment(address) payable returns (bool)",
      "function revokeVesting(address _holder, uint256 _vestingId)",
      "function token() view returns (address)",
      "function isForwarder() pure returns (bool)",
      "event NewVesting(address indexed receiver, uint256 vestingId, uint256 amount)",
      "event RevokeVesting(address indexed receiver, uint256 vestingId, uint256 nonVestedAmount)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0xE42C659Dc09109566720EA8b2De186c2Be7D94D9": [
      "constructor(address _wstETH, string _name, string _symbol)",
      "error AdminZeroAddress()",
      "error ApprovalToOwner()",
      "error ApproveToCaller()",
      "error ArraysLengthMismatch(uint256 _firstArrayLength, uint256 _secondArrayLength)",
      "error BatchesAreNotSorted()",
      "error CantSendValueRecipientMayHaveReverted()",
      "error EmptyBatches()",
      "error InvalidContractVersionIncrement()",
      "error InvalidHint(uint256 _hint)",
      "error InvalidOwnerAddress(address)",
      "error InvalidReportTimestamp()",
      "error InvalidRequestId(uint256 _requestId)",
      "error InvalidRequestIdRange(uint256 startId, uint256 endId)",
      "error InvalidState()",
      "error NonZeroContractVersionOnInit()",
      "error NotEnoughEther()",
      "error NotOwner(address _sender, address _owner)",
      "error NotOwnerOrApproved(address sender)",
      "error NotOwnerOrApprovedForAll(address sender)",
      "error PauseUntilMustBeInFuture()",
      "error PausedExpected()",
      "error RequestAlreadyClaimed(uint256 _requestId)",
      "error RequestAmountTooLarge(uint256 _amountOfStETH)",
      "error RequestAmountTooSmall(uint256 _amountOfStETH)",
      "error RequestIdsNotSorted()",
      "error RequestNotFoundOrNotFinalized(uint256 _requestId)",
      "error ResumedExpected()",
      "error StringTooLong(string str)",
      "error TooMuchEtherToFinalize(uint256 sent, uint256 maxExpected)",
      "error TransferFromIncorrectOwner(address from, address realOwner)",
      "error TransferFromZeroAddress()",
      "error TransferToNonIERC721Receiver(address)",
      "error TransferToThemselves()",
      "error TransferToZeroAddress()",
      "error UnexpectedContractVersion(uint256 expected, uint256 received)",
      "error ZeroAmountOfETH()",
      "error ZeroMetadata()",
      "error ZeroPauseDuration()",
      "error ZeroRecipient()",
      "error ZeroShareRate()",
      "error ZeroTimestamp()",
      "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
      "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
      "event BaseURISet(string baseURI)",
      "event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId)",
      "event BunkerModeDisabled()",
      "event BunkerModeEnabled(uint256 _sinceTimestamp)",
      "event ContractVersionSet(uint256 version)",
      "event InitializedV1(address _admin)",
      "event MetadataUpdate(uint256 _tokenId)",
      "event NftDescriptorAddressSet(address nftDescriptorAddress)",
      "event Paused(uint256 duration)",
      "event Resumed()",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
      "event WithdrawalClaimed(uint256 indexed requestId, address indexed owner, address indexed receiver, uint256 amountOfETH)",
      "event WithdrawalRequested(uint256 indexed requestId, address indexed requestor, address indexed owner, uint256 amountOfStETH, uint256 amountOfShares)",
      "event WithdrawalsFinalized(uint256 indexed from, uint256 indexed to, uint256 amountOfETHLocked, uint256 sharesToBurn, uint256 timestamp)",
      "function BUNKER_MODE_DISABLED_TIMESTAMP() view returns (uint256)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function FINALIZE_ROLE() view returns (bytes32)",
      "function MANAGE_TOKEN_URI_ROLE() view returns (bytes32)",
      "function MAX_BATCHES_LENGTH() view returns (uint256)",
      "function MAX_STETH_WITHDRAWAL_AMOUNT() view returns (uint256)",
      "function MIN_STETH_WITHDRAWAL_AMOUNT() view returns (uint256)",
      "function ORACLE_ROLE() view returns (bytes32)",
      "function PAUSE_INFINITELY() view returns (uint256)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function RESUME_ROLE() view returns (bytes32)",
      "function STETH() view returns (address)",
      "function WSTETH() view returns (address)",
      "function approve(address _to, uint256 _requestId)",
      "function balanceOf(address _owner) view returns (uint256)",
      "function bunkerModeSinceTimestamp() view returns (uint256)",
      "function calculateFinalizationBatches(uint256 _maxShareRate, uint256 _maxTimestamp, uint256 _maxRequestsPerCall, tuple(uint256 remainingEthBudget, bool finished, uint256[36] batches, uint256 batchesLength) _state) view returns (tuple(uint256 remainingEthBudget, bool finished, uint256[36] batches, uint256 batchesLength))",
      "function claimWithdrawal(uint256 _requestId)",
      "function claimWithdrawals(uint256[] _requestIds, uint256[] _hints)",
      "function claimWithdrawalsTo(uint256[] _requestIds, uint256[] _hints, address _recipient)",
      "function finalize(uint256 _lastRequestIdToBeFinalized, uint256 _maxShareRate) payable",
      "function findCheckpointHints(uint256[] _requestIds, uint256 _firstIndex, uint256 _lastIndex) view returns (uint256[] hintIds)",
      "function getApproved(uint256 _requestId) view returns (address)",
      "function getBaseURI() view returns (string)",
      "function getClaimableEther(uint256[] _requestIds, uint256[] _hints) view returns (uint256[] claimableEthValues)",
      "function getContractVersion() view returns (uint256)",
      "function getLastCheckpointIndex() view returns (uint256)",
      "function getLastFinalizedRequestId() view returns (uint256)",
      "function getLastRequestId() view returns (uint256)",
      "function getLockedEtherAmount() view returns (uint256)",
      "function getNFTDescriptorAddress() view returns (address)",
      "function getResumeSinceTimestamp() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getWithdrawalRequests(address _owner) view returns (uint256[] requestsIds)",
      "function getWithdrawalStatus(uint256[] _requestIds) view returns (tuple(uint256 amountOfStETH, uint256 amountOfShares, address owner, uint256 timestamp, bool isFinalized, bool isClaimed)[] statuses)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address _admin)",
      "function isApprovedForAll(address _owner, address _operator) view returns (bool)",
      "function isBunkerModeActive() view returns (bool)",
      "function isPaused() view returns (bool)",
      "function name() view returns (string)",
      "function onOracleReport(bool _isBunkerModeNow, uint256 _bunkerStartTimestamp, uint256 _currentReportTimestamp)",
      "function ownerOf(uint256 _requestId) view returns (address)",
      "function pauseFor(uint256 _duration)",
      "function pauseUntil(uint256 _pauseUntilInclusive)",
      "function prefinalize(uint256[] _batches, uint256 _maxShareRate) view returns (uint256 ethToLock, uint256 sharesToBurn)",
      "function renounceRole(bytes32 role, address account)",
      "function requestWithdrawals(uint256[] _amounts, address _owner) returns (uint256[] requestIds)",
      "function requestWithdrawalsWithPermit(uint256[] _amounts, address _owner, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) _permit) returns (uint256[] requestIds)",
      "function requestWithdrawalsWstETH(uint256[] _amounts, address _owner) returns (uint256[] requestIds)",
      "function requestWithdrawalsWstETHWithPermit(uint256[] _amounts, address _owner, tuple(uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) _permit) returns (uint256[] requestIds)",
      "function resume()",
      "function revokeRole(bytes32 role, address account)",
      "function safeTransferFrom(address _from, address _to, uint256 _requestId)",
      "function safeTransferFrom(address _from, address _to, uint256 _requestId, bytes _data)",
      "function setApprovalForAll(address _operator, bool _approved)",
      "function setBaseURI(string _baseURI)",
      "function setNFTDescriptorAddress(address _nftDescriptorAddress)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenURI(uint256 _requestId) view returns (string)",
      "function transferFrom(address _from, address _to, uint256 _requestId)",
      "function unfinalizedRequestNumber() view returns (uint256)",
      "function unfinalizedStETH() view returns (uint256)"
    ],
    "0xe6793B9e4FbA7DE0ee833F9D02bba7DB5EB27823": [
      "constructor(address initialOwner_, address lido_)",
      "error ErrorAddExistedObserver()",
      "error ErrorBadObserverInterface()",
      "error ErrorMaxObserversCountExceeded()",
      "error ErrorNoObserverToRemove()",
      "error ErrorNotAuthorizedRebaseCaller()",
      "error ErrorTokenRateNotifierRevertedWithNoData()",
      "error ErrorZeroAddressLido()",
      "error ErrorZeroAddressObserver()",
      "error ErrorZeroAddressOwner()",
      "event ObserverAdded(address indexed observer)",
      "event ObserverRemoved(address indexed observer)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PushTokenRateFailed(address indexed observer, bytes lowLevelRevertData)",
      "function INDEX_NOT_FOUND() view returns (uint256)",
      "function LIDO() view returns (address)",
      "function MAX_OBSERVERS_COUNT() view returns (uint256)",
      "function REQUIRED_INTERFACE() view returns (bytes4)",
      "function addObserver(address observer_)",
      "function handlePostTokenRebase(uint256, uint256, uint256, uint256, uint256, uint256, uint256)",
      "function observers(uint256) view returns (address)",
      "function observersLength() view returns (uint256)",
      "function owner() view returns (address)",
      "function removeObserver(address observer_)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)"
    ],
    "0xf165148978Fa3cE74d76043f833463c340CFB704": [
      "function hasInitialized() view returns (bool)",
      "function assignDelegate(address _delegate)",
      "function unassignDelegate()",
      "function unsafelyChangeObjectionPhaseTime(uint64 _objectionPhaseTime)",
      "function initialize(address _token, uint64 _supportRequiredPct, uint64 _minAcceptQuorumPct, uint64 _voteTime, uint64 _objectionPhaseTime)",
      "function UNSAFELY_MODIFY_VOTE_TIME_ROLE() view returns (bytes32)",
      "function unsafelyChangeVoteTime(uint64 _voteTime)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function MODIFY_QUORUM_ROLE() view returns (bytes32)",
      "function objectionPhaseTime() view returns (uint64)",
      "function getVoterState(uint256 _voteId, address _voter) view returns (uint8)",
      "function getDelegate(address _voter) view returns (address)",
      "function getVote(uint256 _voteId) view returns (bool open, bool executed, uint64 startDate, uint64 snapshotBlock, uint64 supportRequired, uint64 minAcceptQuorum, uint256 yea, uint256 nay, uint256 votingPower, bytes script, uint8 phase)",
      "function getDelegatedVoters(address _delegate, uint256 _offset, uint256 _limit) view returns (address[] voters)",
      "function changeMinAcceptQuorumPct(uint64 _minAcceptQuorumPct)",
      "function MODIFY_SUPPORT_ROLE() view returns (bytes32)",
      "function getVotingPowerMultipleAtVote(uint256 _voteId, address[] _voters) view returns (uint256[] balances)",
      "function attemptVoteFor(uint256 _voteId, bool _supports, address _voter)",
      "function attemptVoteForMultiple(uint256 _voteId, bool _supports, address[] _voters)",
      "function changeSupportRequiredPct(uint64 _supportRequiredPct)",
      "function allowRecoverability(address token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function getDelegatedVotersCount(address _delegate) view returns (uint256)",
      "function getInitializationBlock() view returns (uint256)",
      "function transferToVault(address _token)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function getVoterStateMultipleAtVote(uint256 _voteId, address[] _voters) view returns (uint8[] voterStatesList)",
      "function getVotingPowerMultiple(address[] _voters) view returns (uint256[] balances)",
      "function voteTime() view returns (uint64)",
      "function CREATE_VOTES_ROLE() view returns (bytes32)",
      "function canForward(address _sender, bytes) view returns (bool)",
      "function canExecute(uint256 _voteId) view returns (bool)",
      "function canVote(uint256 _voteId, address _voter) view returns (bool)",
      "function kernel() view returns (address)",
      "function newVote(bytes _executionScript, string _metadata) returns (uint256 voteId)",
      "function forward(bytes _evmScript)",
      "function minAcceptQuorumPct() view returns (uint64)",
      "function isPetrified() view returns (bool)",
      "function votesLength() view returns (uint256)",
      "function vote(uint256 _voteId, bool _supports, bool)",
      "function newVote(bytes _executionScript, string _metadata, bool, bool) returns (uint256 voteId)",
      "function getVotePhase(uint256 _voteId) view returns (uint8)",
      "function executeVote(uint256 _voteId)",
      "function supportRequiredPct() view returns (uint64)",
      "function token() view returns (address)",
      "function PCT_BASE() view returns (uint64)",
      "function isForwarder() pure returns (bool)",
      "event StartVote(uint256 indexed voteId, address indexed creator, string metadata)",
      "event CastVote(uint256 indexed voteId, address indexed voter, bool supports, uint256 stake)",
      "event CastObjection(uint256 indexed voteId, address indexed voter, uint256 stake)",
      "event ExecuteVote(uint256 indexed voteId)",
      "event ChangeSupportRequired(uint64 supportRequiredPct)",
      "event ChangeMinQuorum(uint64 minAcceptQuorumPct)",
      "event ChangeVoteTime(uint64 voteTime)",
      "event ChangeObjectionPhaseTime(uint64 objectionPhaseTime)",
      "event AssignDelegate(address indexed voter, address indexed assignedDelegate)",
      "event UnassignDelegate(address indexed voter, address indexed unassignedDelegate)",
      "event AttemptCastVoteAsDelegate(uint256 indexed voteId, address indexed delegate, address[] voters)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0xf73a1260d222f447210581DDf212D915c09a3249": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0xFdDf38947aFB03C621C71b06C9C70bce73f12999": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0xfFA96D84dEF2EA035c7AB153D8B991128e3d72fD": [
      "constructor(address _lido, address _depositContract, address _stakingRouter, uint256 _pauseIntentValidityPeriodBlocks, uint256 _maxOperatorsPerUnvetting)",
      "error DepositInactiveModule()",
      "error DepositNoQuorum()",
      "error DepositRootChanged()",
      "error DepositTooFrequent()",
      "error DepositUnexpectedBlockHash()",
      "error DepositsArePaused()",
      "error DepositsNotPaused()",
      "error DuplicateAddress(address addr)",
      "error InvalidSignature()",
      "error ModuleNonceChanged()",
      "error NotAGuardian(address addr)",
      "error NotAnOwner(address caller)",
      "error PauseIntentExpired()",
      "error SignaturesNotSorted()",
      "error UnvetPayloadInvalid()",
      "error UnvetUnexpectedBlockHash()",
      "error ZeroAddress(string field)",
      "error ZeroParameter(string parameter)",
      "event DepositsPaused(address indexed guardian)",
      "event DepositsUnpaused()",
      "event GuardianAdded(address guardian)",
      "event GuardianQuorumChanged(uint256 newValue)",
      "event GuardianRemoved(address guardian)",
      "event LastDepositBlockChanged(uint256 newValue)",
      "event MaxOperatorsPerUnvettingChanged(uint256 newValue)",
      "event OwnerChanged(address newValue)",
      "event PauseIntentValidityPeriodBlocksChanged(uint256 newValue)",
      "function ATTEST_MESSAGE_PREFIX() view returns (bytes32)",
      "function DEPOSIT_CONTRACT() view returns (address)",
      "function LIDO() view returns (address)",
      "function PAUSE_MESSAGE_PREFIX() view returns (bytes32)",
      "function STAKING_ROUTER() view returns (address)",
      "function UNVET_MESSAGE_PREFIX() view returns (bytes32)",
      "function VERSION() view returns (uint256)",
      "function addGuardian(address addr, uint256 newQuorum)",
      "function addGuardians(address[] addresses, uint256 newQuorum)",
      "function canDeposit(uint256 stakingModuleId) view returns (bool)",
      "function depositBufferedEther(uint256 blockNumber, bytes32 blockHash, bytes32 depositRoot, uint256 stakingModuleId, uint256 nonce, bytes depositCalldata, tuple(bytes32 r, bytes32 vs)[] sortedGuardianSignatures)",
      "function getGuardianIndex(address addr) view returns (int256)",
      "function getGuardianQuorum() view returns (uint256)",
      "function getGuardians() view returns (address[])",
      "function getLastDepositBlock() view returns (uint256)",
      "function getMaxOperatorsPerUnvetting() view returns (uint256)",
      "function getOwner() view returns (address)",
      "function getPauseIntentValidityPeriodBlocks() view returns (uint256)",
      "function isDepositsPaused() view returns (bool)",
      "function isGuardian(address addr) view returns (bool)",
      "function isMinDepositDistancePassed(uint256 stakingModuleId) view returns (bool)",
      "function pauseDeposits(uint256 blockNumber, tuple(bytes32 r, bytes32 vs) sig)",
      "function removeGuardian(address addr, uint256 newQuorum)",
      "function setGuardianQuorum(uint256 newValue)",
      "function setMaxOperatorsPerUnvetting(uint256 newValue)",
      "function setOwner(address newValue)",
      "function setPauseIntentValidityPeriodBlocks(uint256 newValue)",
      "function unpauseDeposits()",
      "function unvetSigningKeys(uint256 blockNumber, bytes32 blockHash, uint256 stakingModuleId, uint256 nonce, bytes nodeOperatorIds, bytes vettedSigningKeysCounts, tuple(bytes32 r, bytes32 vs) sig)"
    ]
  },
  "usedTemplates": {
    "global/DepositContract": "0xfc77f1d7412b523d27d6db22532ffaa54e0026a15c868272f2f454514cab5df5",
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "opstack/L1StandardBridge": "0x8cbd85e2852b26d67c72cb658b98929c845a20ccce30e84f84644c0b39e9252e",
    "tokens/Lido/AccountingOracle": "0x932fc7139d4e4e7175a766e7f02cd072df41c8a83dd102aae45da3c8ce3cac62",
    "tokens/Lido/Burner": "0xf6c8cf6cb60ea799f5de86286c9080914905458749bb49c535b87e53b5a0247d",
    "tokens/Lido/CSAccounting": "0x454fd1cd2f6a832a5550984f4123ef8a56f7ff735aebca8d0aa8de0b5dfbeecb",
    "tokens/Lido/CSFeeDistributor": "0x37487e755af78b0bd2724cc6d34a0e6b9c679ef2887f6f5a4c6e6a189585c2fe",
    "tokens/Lido/CSFeeOracle": "0xedff44ab6d2a997500f30983e462cdc2403bbe006060357d49a5265cb8a42c28",
    "tokens/Lido/CSModule": "0xf7c96d9cd05d73520e39b794ca51b4809c91915f7285ef9b966f2e0949057d2e",
    "tokens/Lido/DepositSecurityModule": "0x99ae4ecad8b09875ad720b21d7a45c1e420639eb19bb5cb3311f71c2c9e872c8",
    "tokens/Lido/EVMScriptRegistry": "0x1aa84beab6ea9134fd6d07ba52f9382adc5aa46e9c4b38cb3ed5200978909460",
    "tokens/Lido/HashConsensus": "0x714206285494e40177e6727e5d9af271f182e4d67f965befb1fa9a53329f9a00",
    "tokens/Lido/LegacyOracle": "0xd4c2b7792d1aa8bda3a9e6605109fdfd535626c0735212849251027e9c9678f9",
    "tokens/Lido/LidoDaoAgent": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "tokens/Lido/MiniMeToken": "0x4477605aa619c192084296dec31b5dc3ef87585bb125619bf0732705aa9b8500",
    "tokens/Lido/NodeOperatorsRegistry": "0x168a6e67bff94308f9d7c1a30601b9ccf6731e02880b69c71dbb5bf6b5124981",
    "tokens/Lido/OpStackTokenRatePusher": "0x0803b1e88c67bebc35eefc187ea1d4d767067c1b9a88db89e2a7ca732f48acca",
    "tokens/Lido/OracleReportSanityChecker": "0x47a07f409203f7440bed7b0a0d5dcb73848ade84630ed647b710648354fc6728",
    "tokens/Lido/StakingRouter": "0x7fdd2590302f0d63b26bc9cca1b853bc9cfff4ddb1499d4be826b88bee082ab2",
    "tokens/Lido/stETH": "0x37a7c6753d191d9570683970648eab69b28b5e19257ea6b82872f52ad9c5f0e1",
    "tokens/Lido/ValidatorsExitBusOracle": "0x11365707f780cd17f5f0f1cc48c59745a28a1f5725b533c928cdaac71c9e3938",
    "tokens/Lido/Voting": "0xfe60c9f930249cf52507a6861a5f27ba4d2b0e05965376084669ce656fa4565f",
    "tokens/Lido/WithdrawalQueueERC721": "0xa1e1aabda76d31acb0074e52508c9fe4f357b9c4fc00e5cae52840093116c816",
    "tokens/Lido/wstETH": "0x9b708a05879c062566a96f737bd9998af0ceda3a51a54456a93cd24fd4c4dfdf",
    "tokens/STRK": "0x9979d16113874eb421347478aae102736cd4055e0853e97e1c132d1f41506d1d"
  },
  "permissionsConfigHash": "0x5d35ca523fc6d2b19f99b328a40155dd44062dcf52ad0a5ea6053730fedf98ea"
}
