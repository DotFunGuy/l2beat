{
  "$schema": "../../../../../discovery/schemas/config.v2.schema.json",
  "chain": "arbitrum",
  "name": "moonchain",
  "import": ["../../ethereumConfig.jsonc"],
  "initialAddresses": [
    "0x4C3924E619E2eE83cFD565c1432cb621ca8af7A0", // shared
    "0x3160284BC2F4d7F5b170C70a0Ee0bC5333c7F39e", // shared
    "0x54D8864e8855A7B66eE42B8F2Eaa0F2E06bd641a",
    "0x817bdF595d88e5b0165993E4a6AF04F092584Fb7"
  ],
  "names": {
    "0x4C3924E619E2eE83cFD565c1432cb621ca8af7A0": "MoonchainBridge",
    "0x3160284BC2F4d7F5b170C70a0Ee0bC5333c7F39e": "SharedERC20Vault",
    "0x54D8864e8855A7B66eE42B8F2Eaa0F2E06bd641a": "MoonchainL1Contract",
    "0x817bdF595d88e5b0165993E4a6AF04F092584Fb7": "ProverSet",
    "0x5E7b1306B759240620E2fd76F49Ca63E371C23ac": "TierRouter",
    "0xF5146A105d14BDA41B866CaD0f96b8Ce3A4F19dF": "L1RollupAddressManager",
    "0xE7623Fc10eCDA172A023D64f4cebC1682F84BB26": "L1SharedAddressManager",
    "0xecdd613aB8E307F8A403fC7A00B8C609b1Ef22bE": "SgxVerifier",
    "0x4A5C01E22C60D8189419f6Ae7F6d47B1e470FC5b": "Risc0Verifier",
    "0xaF7bB4d74Bdf6A44b1c6C9feD3A6606f8943064d": "SP1Verifier",
    "0xE00a3cBFC45241b33c0A44C78e26168CBc55EC63": "SP1RemoteVerifier",
    "0xb6f0d291B118f9F562d4Db388351Faf62A99c921": "GuardianMinorityProver",
    "0xCD1e1671Ce6eb304c2D30ED77885Be1b0BF96aD6": "GuardianProver",
    "0xB31EBab3Ac38B9B021CCe679B4059b790413Fa4E": "SignalService",
    "0xaeDF7656fBB47c5B97dD529aC1D0e807E051f2dd": "MXCToken",
    "0x478932D33a02A14C354c18055AFdFc7fb04E1cA5": "AutomataDcapV3Attestation"
  },
  "overrides": {
    "0x4A5C01E22C60D8189419f6Ae7F6d47B1e470FC5b": {
      // Risc0Verifier
      "ignoreMethods": ["proxiableUUID"]
    },
    "0xaF7bB4d74Bdf6A44b1c6C9feD3A6606f8943064d": {
      // SP1Verifier
      "ignoreMethods": ["proxiableUUID"]
    },
    "0x4C3924E619E2eE83cFD565c1432cb621ca8af7A0": {
      // MoonchainBridge
      "ignoreMethods": [
        "getMessageMinGasLimit", // too many values
        "context" // Multicall failed
      ],
      "ignoreInWatchMode": ["nextMessageId"],
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      }
    },
    "0x3160284BC2F4d7F5b170C70a0Ee0bC5333c7F39e": {
      // SharedERC20Vault
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      }
    },
    "0xE7623Fc10eCDA172A023D64f4cebC1682F84BB26": {
      // L1SharedAddressManager
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      }
    },
    "0x817bdF595d88e5b0165993E4a6AF04F092584Fb7": {
      // ProverSet
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      }
    },
    "0x54D8864e8855A7B66eE42B8F2Eaa0F2E06bd641a": {
      // MoonchainL1Contract
      "description": "This contract provides functionalities for proposing, proving, and verifying blocks.",
      "ignoreInWatchMode": [
        "getStateVariables",
        "getLastSyncedBlock",
        "getLastVerifiedBlock",
        "state",
        "lastProposedIn"
      ],
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        },
        // Harcoded values for names, is there a better way?
        "automata_dcap_attestation": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x6175746f6d6174615f646361705f6174746573746174696f6e00000000000000",
              "false"
            ] // bytes32("automata_dcap_attestation");
          }
        },
        "bond_token": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x626f6e645f746f6b656e00000000000000000000000000000000000000000000",
              "false"
            ]
          }
        },
        "bridge": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x6272696467650000000000000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("bridge");
          }
        },
        "bridge_watchdog": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x6272696467655f7761746368646f670000000000000000000000000000000000",
              "false"
            ] // bytes32("bridge_watchdog");
          }
        },
        "bridged_erc1155": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x627269646765645f657263313135350000000000000000000000000000000000",
              "false"
            ] // bytes32("bridged_erc1155");
          }
        },
        "bridged_erc20": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x627269646765645f657263323000000000000000000000000000000000000000",
              "false"
            ] // bytes32("bridged_erc20");
          }
        },
        "bridged_erc721": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x627269646765645f657263373231000000000000000000000000000000000000",
              "false"
            ] // bytes32("bridged_erc721");
          }
        },
        "chain_watchdog": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x636861696e5f7761746368646f67000000000000000000000000000000000000",
              "false"
            ] // bytes32("chain_watchdog");
          }
        },
        "erc1155_vault": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x657263313135355f7661756c7400000000000000000000000000000000000000",
              "false"
            ] // bytes32("erc1155_vault");
          }
        },
        "erc20_vault": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x65726332305f7661756c74000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("erc20_vault");
          }
        },
        "erc721_vault": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x6572633732315f7661756c740000000000000000000000000000000000000000",
              "false"
            ] // bytes32("erc721_vault");
          }
        },
        "preconf_task_manager": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x707265636f6e665f7461736b5f6d616e61676572000000000000000000000000",
              "false"
            ]
          }
        },
        "prover_assignment": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x50524f5645525f41535349474e4d454e54000000000000000000000000000000",
              "false"
            ] // bytes32("prover_assignment");
          }
        },
        "prover_set": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x70726f7665725f73657400000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("prover_set");
          }
        },
        "quota_manager": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x71756f74615f6d616e6167657200000000000000000000000000000000000000",
              "false"
            ] // bytes32("quota_manager");
          }
        },
        "sgx_watchdog": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x7367785f7761746368646f670000000000000000000000000000000000000000",
              "false"
            ] // bytes32("sgx_watchdog");
          }
        },
        "signal_service": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x7369676e616c5f73657276696365000000000000000000000000000000000000",
              "false"
            ] // bytes32("signal_service");
          }
        },
        "sp1_remote_verifier": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x7370315f72656d6f74655f766572696669657200000000000000000000000000",
              "false"
            ]
          }
        },
        "taiko": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x7461696b6f000000000000000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("taiko");
          }
        },
        "taiko_token": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x7461696b6f5f746f6b656e000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("taiko_token");
          }
        },
        "tier_router": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f726f75746572000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("tier_router");
          }
        },
        "verifier_TIER_GUARDIAN": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f677561726469616e00000000000000000000000000000000000000",
              "false"
            ] // bytes32("tier_guardian")
          }
        },
        "verifier_TIER_GUARDIAN_MINORITY": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f677561726469616e5f6d696e6f7269747900000000000000000000",
              "false"
            ] // bytes32("tier_guardian_minority")
          }
        },
        "verifier_TIER_OPTIMISTIC": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x0000000000000000000000000000000000000000000000000000000000000000",
              "false"
            ]
          }
        },
        "verifier_TIER_SGX": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f736778000000000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("tier_sgx")
          }
        },
        "verifier_TIER_TDX": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f746478000000000000000000000000000000000000000000000000",
              "false"
            ]
          }
        },
        "verifier_TIER_TEE_ANY": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f7465655f616e790000000000000000000000000000000000000000",
              "false"
            ]
          }
        },
        "verifier_TIER_ZKVM_RISC0": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f7a6b766d5f72697363300000000000000000000000000000000000",
              "false"
            ]
          }
        },
        "verifier_TIER_ZKVM_SP1": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f7a6b766d5f73703100000000000000000000000000000000000000",
              "false"
            ]
          }
        },
        "verifier_TIER_ZKVM_ANY": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f7a6b766d5f616e7900000000000000000000000000000000000000",
              "false"
            ]
          }
        },
        "verifier_TIER_ZKVM_AND_TEE": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x746965725f7a6b766d5f616e645f746565000000000000000000000000000000",
              "false"
            ]
          }
        },
        "verifier_RISCZERO_GROTH16_VERIFIER": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x72697363305f67726f746831365f766572696669657200000000000000000000",
              "false"
            ]
          }
        },
        "withdrawer": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x7769746864726177657200000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("withdrawer");
          }
        },
        "return_liveness_bond": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x52455455524e5f4c4956454e4553535f424f4e44000000000000000000000000",
              "false"
            ] // bytes32("RETURN_LIVENESS_BOND");
          }
        },
        "signal_root": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x5349474e414c5f524f4f54000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("SIGNAL_ROOT");
          }
        },
        "state_root": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x53544154455f524f4f5400000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("STATE_ROOT");
          }
        },
        // recently removed
        "assignment_hook": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x61737369676e6d656e745f686f6f6b0000000000000000000000000000000000",
              "false"
            ] // bytes32("assignment_hook");
          }
        },
        // still resolving but unused
        "proposer": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x70726f706f736572000000000000000000000000000000000000000000000000",
              "false"
            ] // bytes32("proposer");
          }
        },
        "proposer_one": {
          "handler": {
            "type": "call",
            "method": "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
            "args": [
              "0x70726f706f7365725f6f6e650000000000000000000000000000000000000000",
              "false"
            ] // bytes32("proposer_one");
          }
        }
      }
    },
    "0x5E7b1306B759240620E2fd76F49Ca63E371C23ac": {
      // TierRouter
      "ignoreMethods": ["getProvider"], // too many values
      "fields": {
        "tier_provider": {
          "handler": {
            "type": "call",
            "method": "function getProvider(uint256 blockId) view returns (address)",
            "args": ["{{ $$.blockNumber }}"]
          }
        },
        "active_tiers": {
          "handler": {
            "type": "array",
            "method": "getTier",
            "indices": "{{ getTierIds }}",
            "pickFields": ["verifierName"]
          }
        },
        "TIER_SGX": {
          "description": "verifierName, validityBond, contestBond, cooldownWindow, provingWindow, maxBlocksToVerifyPerProof",
          "handler": {
            "type": "call",
            "method": "function getTier(uint16 _tierId) pure returns (tuple(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof))",
            "args": [200]
          },
          "returnType": "(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof)"
        },
        "TIER_RISC0": {
          "description": "verifierName, validityBond, contestBond, cooldownWindow, provingWindow, maxBlocksToVerifyPerProof",
          "handler": {
            "type": "call",
            "method": "function getTier(uint16 _tierId) pure returns (tuple(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof))",
            "args": [250]
          },
          "returnType": "(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof)"
        },
        "TIER_SP1": {
          "description": "verifierName, validityBond, contestBond, cooldownWindow, provingWindow, maxBlocksToVerifyPerProof",
          "handler": {
            "type": "call",
            "method": "function getTier(uint16 _tierId) pure returns (tuple(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof))",
            "args": [251]
          },
          "returnType": "(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof)"
        },
        "TIER_GUARDIAN_MINORITY": {
          "description": "tuple args: verifierName, validityBond, contestBond, cooldownWindow, provingWindow, maxBlocksToVerifyPerProof",
          "handler": {
            "type": "call",
            "method": "function getTier(uint16 _tierId) pure returns (tuple(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof))",
            "args": [900]
          },
          "returnType": "(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof)"
        },
        "TIER_GUARDIAN": {
          "description": "tuple args: verifierName, validityBond, contestBond, cooldownWindow, provingWindow, maxBlocksToVerifyPerProof",
          "handler": {
            "type": "call",
            "method": "function getTier(uint16 _tierId) pure returns (tuple(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof))",
            "args": [1000]
          },
          "returnType": "(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof)"
        },
        // INACTIVE
        "TIER_OPTIMISTIC": {
          "description": "tuple args: verifierName, validityBond, contestBond, cooldownWindow, provingWindow, maxBlocksToVerifyPerProof",
          "handler": {
            "type": "call",
            "method": "function getTier(uint16 _tierId) pure returns (tuple(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof))",
            "args": [100]
          },
          "returnType": "(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof)"
        },
        // INACTIVE
        "TIER_SGX_ZKVM": {
          "description": "tuple args: verifierName, validityBond, contestBond, cooldownWindow, provingWindow, maxBlocksToVerifyPerProof",
          "handler": {
            "type": "call",
            "method": "function getTier(uint16 _tierId) pure returns (tuple(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof))",
            "args": [300]
          },
          "returnType": "(bytes32 verifierName, uint96 validityBond, uint96 contestBond, uint24 cooldownWindow, uint16 provingWindow, uint8 maxBlocksToVerifyPerProof)"
        }
      }
    },
    "0xF5146A105d14BDA41B866CaD0f96b8Ce3A4F19dF": {
      // L1RollupAddressManager
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        },
        "owner": {
          "handler": {
            "type": "call",
            "method": "function owner() view returns (address)",
            "args": [],
            "expectRevert": false
          }
        }
      }
    },
    "0x68d30f47F19c07bCCEf4Ac7FAE2Dc12FCa3e0dC9": {
      // ProverSet
      "description": "A contract that holds MXC token and acts as a Moonchain team owned proposer and prover proxy. This contract relays `proveBlock` calls to the MoonchainL1 contract so that msg.sender doesn't need to hold any MXC. There are several instances of this contract operated by different entities.",
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      }
    },
    "0xecdd613aB8E307F8A403fC7A00B8C609b1Ef22bE": {
      // SgxVerifier
      "ignoreInWatchMode": ["nextInstanceId"],
      "description": "Verifier contract for SGX proven blocks.",
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      },
      "ignoreMethods": ["getPastTotalSupply", "instances"]
    },
    "0xb6f0d291B118f9F562d4Db388351Faf62A99c921": {
      // GuardianMinorityProver
      "description": "Verifier contract for blocks proven by Guardian minority.",
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        },
        "guardians": {
          "handler": {
            "type": "array",
            "method": "guardians"
          }
        }
      }
    },
    "0xCD1e1671Ce6eb304c2D30ED77885Be1b0BF96aD6": {
      // GuardianProver
      "description": "Verifier contract for Guardian proven blocks.",
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        },
        "guardians": {
          "handler": {
            "type": "array",
            "method": "guardians"
          }
        }
      }
    },
    "0xB31EBab3Ac38B9B021CCe679B4059b790413Fa4E": {
      // SignalService
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      }
    },
    "0xaeDF7656fBB47c5B97dD529aC1D0e807E051f2dd": {
      // MoonchainToken
      "ignoreMethods": ["getPastTotalSupply"],
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      },
      "ignoreInWatchMode": ["clock"]
    },
    "0x478932D33a02A14C354c18055AFdFc7fb04E1cA5": {
      // AutomataDcapV3Attestation
      "fields": {
        "proxiableUUID": {
          "handler": {
            "type": "call",
            "method": "function proxiableUUID() view returns (bytes32)",
            "args": [],
            "expectRevert": true
          }
        }
      }
    }
  }
}
